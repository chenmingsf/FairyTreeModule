// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Msg.proto

#include "Msg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

//begin custom modify
#if defined(_MSC_VER)
#pragma warning(disable:4125)
#endif // _MSC_VER
//end custom modify
class LoginRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginRequest>
      _instance;
} _LoginRequest_default_instance_;
class LoginResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginResponse>
      _instance;
} _LoginResponse_default_instance_;
class ElfinRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ElfinRequest>
      _instance;
} _ElfinRequest_default_instance_;
class ElfinResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ElfinResponse>
      _instance;
} _ElfinResponse_default_instance_;
class RollRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RollRequest>
      _instance;
} _RollRequest_default_instance_;
class RollResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RollResponse>
      _instance;
} _RollResponse_default_instance_;
class TreeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TreeRequest>
      _instance;
} _TreeRequest_default_instance_;
class TreeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TreeResponse>
      _instance;
} _TreeResponse_default_instance_;
class ResourceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResourceRequest>
      _instance;
} _ResourceRequest_default_instance_;
class ResourceResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResourceResponse>
      _instance;
} _ResourceResponse_default_instance_;
class TasksRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TasksRequest>
      _instance;
} _TasksRequest_default_instance_;
class TasksResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TasksResponse>
      _instance;
} _TasksResponse_default_instance_;
class PrizeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Prize>
      _instance;
} _Prize_default_instance_;
class MailsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MailsRequest>
      _instance;
} _MailsRequest_default_instance_;
class MailsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MailsResponse>
      _instance;
} _MailsResponse_default_instance_;
class SunRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SunRequest>
      _instance;
} _SunRequest_default_instance_;
class SunResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SunResponse>
      _instance;
} _SunResponse_default_instance_;
class TreeEnchantmentRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TreeEnchantmentRequest>
      _instance;
} _TreeEnchantmentRequest_default_instance_;
class TreeEnchantmentResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TreeEnchantmentResponse>
      _instance;
} _TreeEnchantmentResponse_default_instance_;
class StoreAllRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StoreAllRequest>
      _instance;
} _StoreAllRequest_default_instance_;
class StoreAllResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StoreAllResponse>
      _instance;
} _StoreAllResponse_default_instance_;
class StoreEquRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StoreEquRequest>
      _instance;
} _StoreEquRequest_default_instance_;
class StoreEquResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StoreEquResponse>
      _instance;
} _StoreEquResponse_default_instance_;
class StoreWaterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StoreWaterRequest>
      _instance;
} _StoreWaterRequest_default_instance_;
class StoreWaterResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StoreWaterResponse>
      _instance;
} _StoreWaterResponse_default_instance_;
class StoreSpePropsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StoreSpePropsRequest>
      _instance;
} _StoreSpePropsRequest_default_instance_;
class StoreSpePropsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StoreSpePropsResponse>
      _instance;
} _StoreSpePropsResponse_default_instance_;
class WarehouseRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WarehouseRequest>
      _instance;
} _WarehouseRequest_default_instance_;
class WarehouseResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WarehouseResponse>
      _instance;
} _WarehouseResponse_default_instance_;
class DelMailRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DelMailRequest>
      _instance;
} _DelMailRequest_default_instance_;
class DelMailResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DelMailResponse>
      _instance;
} _DelMailResponse_default_instance_;
class ClaimedTaskRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClaimedTaskRequest>
      _instance;
} _ClaimedTaskRequest_default_instance_;
class ClaimedTaskResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClaimedTaskResponse>
      _instance;
} _ClaimedTaskResponse_default_instance_;
class RecTaskAwardRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecTaskAwardRequest>
      _instance;
} _RecTaskAwardRequest_default_instance_;
class RecTaskAwardResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecTaskAwardResponse>
      _instance;
} _RecTaskAwardResponse_default_instance_;
class FriendsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FriendsRequest>
      _instance;
} _FriendsRequest_default_instance_;
class FriendsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FriendsResponse>
      _instance;
} _FriendsResponse_default_instance_;
class EnemiesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnemiesRequest>
      _instance;
} _EnemiesRequest_default_instance_;
class EnemiesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnemiesResponse>
      _instance;
} _EnemiesResponse_default_instance_;
class PlunderRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlunderRequest>
      _instance;
} _PlunderRequest_default_instance_;
class PlunderResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlunderResponse>
      _instance;
} _PlunderResponse_default_instance_;
class UseItemRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UseItemRequest>
      _instance;
} _UseItemRequest_default_instance_;
class UseItemResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UseItemResponse>
      _instance;
} _UseItemResponse_default_instance_;
class ForgetSkillRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ForgetSkillRequest>
      _instance;
} _ForgetSkillRequest_default_instance_;
class ForgetSkillResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ForgetSkillResponse>
      _instance;
} _ForgetSkillResponse_default_instance_;
class SettleAccountRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SettleAccountRequest>
      _instance;
} _SettleAccountRequest_default_instance_;
class SettleAccountResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SettleAccountResponse>
      _instance;
} _SettleAccountResponse_default_instance_;
class RankingRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RankingRequest>
      _instance;
} _RankingRequest_default_instance_;
class RankingResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RankingResponse>
      _instance;
} _RankingResponse_default_instance_;
class RegisterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegisterRequest>
      _instance;
} _RegisterRequest_default_instance_;
class RegisterResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegisterResponse>
      _instance;
} _RegisterResponse_default_instance_;
class RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Request>
      _instance;
} _Request_default_instance_;
class ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Response>
      _instance;
} _Response_default_instance_;
class GameMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameMessage>
      _instance;
} _GameMessage_default_instance_;
namespace protobuf_Msg_2eproto {
void InitDefaultsLoginRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_LoginRequest_default_instance_;
    new (ptr) ::LoginRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LoginRequest::InitAsDefaultInstance();
}

void InitDefaultsLoginRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoginRequestImpl);
}

void InitDefaultsLoginResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_LoginResponse_default_instance_;
    new (ptr) ::LoginResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LoginResponse::InitAsDefaultInstance();
}

void InitDefaultsLoginResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoginResponseImpl);
}

void InitDefaultsElfinRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ElfinRequest_default_instance_;
    new (ptr) ::ElfinRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ElfinRequest::InitAsDefaultInstance();
}

void InitDefaultsElfinRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsElfinRequestImpl);
}

void InitDefaultsElfinResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ElfinResponse_default_instance_;
    new (ptr) ::ElfinResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ElfinResponse::InitAsDefaultInstance();
}

void InitDefaultsElfinResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsElfinResponseImpl);
}

void InitDefaultsRollRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_RollRequest_default_instance_;
    new (ptr) ::RollRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RollRequest::InitAsDefaultInstance();
}

void InitDefaultsRollRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRollRequestImpl);
}

void InitDefaultsRollResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_RollResponse_default_instance_;
    new (ptr) ::RollResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RollResponse::InitAsDefaultInstance();
}

void InitDefaultsRollResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRollResponseImpl);
}

void InitDefaultsTreeRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_TreeRequest_default_instance_;
    new (ptr) ::TreeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TreeRequest::InitAsDefaultInstance();
}

void InitDefaultsTreeRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTreeRequestImpl);
}

void InitDefaultsTreeResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_TreeResponse_default_instance_;
    new (ptr) ::TreeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TreeResponse::InitAsDefaultInstance();
}

void InitDefaultsTreeResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTreeResponseImpl);
}

void InitDefaultsResourceRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ResourceRequest_default_instance_;
    new (ptr) ::ResourceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ResourceRequest::InitAsDefaultInstance();
}

void InitDefaultsResourceRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsResourceRequestImpl);
}

void InitDefaultsResourceResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ResourceResponse_default_instance_;
    new (ptr) ::ResourceResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ResourceResponse::InitAsDefaultInstance();
}

void InitDefaultsResourceResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsResourceResponseImpl);
}

void InitDefaultsTasksRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_TasksRequest_default_instance_;
    new (ptr) ::TasksRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TasksRequest::InitAsDefaultInstance();
}

void InitDefaultsTasksRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTasksRequestImpl);
}

void InitDefaultsTasksResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Msg_2eproto::InitDefaultsPrize();
  {
    void* ptr = &::_TasksResponse_default_instance_;
    new (ptr) ::TasksResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TasksResponse::InitAsDefaultInstance();
}

void InitDefaultsTasksResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTasksResponseImpl);
}

void InitDefaultsPrizeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Prize_default_instance_;
    new (ptr) ::Prize();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Prize::InitAsDefaultInstance();
}

void InitDefaultsPrize() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPrizeImpl);
}

void InitDefaultsMailsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_MailsRequest_default_instance_;
    new (ptr) ::MailsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MailsRequest::InitAsDefaultInstance();
}

void InitDefaultsMailsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMailsRequestImpl);
}

void InitDefaultsMailsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Msg_2eproto::InitDefaultsPrize();
  {
    void* ptr = &::_MailsResponse_default_instance_;
    new (ptr) ::MailsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MailsResponse::InitAsDefaultInstance();
}

void InitDefaultsMailsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMailsResponseImpl);
}

void InitDefaultsSunRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_SunRequest_default_instance_;
    new (ptr) ::SunRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SunRequest::InitAsDefaultInstance();
}

void InitDefaultsSunRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSunRequestImpl);
}

void InitDefaultsSunResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_SunResponse_default_instance_;
    new (ptr) ::SunResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SunResponse::InitAsDefaultInstance();
}

void InitDefaultsSunResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSunResponseImpl);
}

void InitDefaultsTreeEnchantmentRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_TreeEnchantmentRequest_default_instance_;
    new (ptr) ::TreeEnchantmentRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TreeEnchantmentRequest::InitAsDefaultInstance();
}

void InitDefaultsTreeEnchantmentRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTreeEnchantmentRequestImpl);
}

void InitDefaultsTreeEnchantmentResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_TreeEnchantmentResponse_default_instance_;
    new (ptr) ::TreeEnchantmentResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TreeEnchantmentResponse::InitAsDefaultInstance();
}

void InitDefaultsTreeEnchantmentResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTreeEnchantmentResponseImpl);
}

void InitDefaultsStoreAllRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_StoreAllRequest_default_instance_;
    new (ptr) ::StoreAllRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::StoreAllRequest::InitAsDefaultInstance();
}

void InitDefaultsStoreAllRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStoreAllRequestImpl);
}

void InitDefaultsStoreAllResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_StoreAllResponse_default_instance_;
    new (ptr) ::StoreAllResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::StoreAllResponse::InitAsDefaultInstance();
}

void InitDefaultsStoreAllResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStoreAllResponseImpl);
}

void InitDefaultsStoreEquRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_StoreEquRequest_default_instance_;
    new (ptr) ::StoreEquRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::StoreEquRequest::InitAsDefaultInstance();
}

void InitDefaultsStoreEquRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStoreEquRequestImpl);
}

void InitDefaultsStoreEquResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_StoreEquResponse_default_instance_;
    new (ptr) ::StoreEquResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::StoreEquResponse::InitAsDefaultInstance();
}

void InitDefaultsStoreEquResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStoreEquResponseImpl);
}

void InitDefaultsStoreWaterRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_StoreWaterRequest_default_instance_;
    new (ptr) ::StoreWaterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::StoreWaterRequest::InitAsDefaultInstance();
}

void InitDefaultsStoreWaterRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStoreWaterRequestImpl);
}

void InitDefaultsStoreWaterResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_StoreWaterResponse_default_instance_;
    new (ptr) ::StoreWaterResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::StoreWaterResponse::InitAsDefaultInstance();
}

void InitDefaultsStoreWaterResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStoreWaterResponseImpl);
}

void InitDefaultsStoreSpePropsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_StoreSpePropsRequest_default_instance_;
    new (ptr) ::StoreSpePropsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::StoreSpePropsRequest::InitAsDefaultInstance();
}

void InitDefaultsStoreSpePropsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStoreSpePropsRequestImpl);
}

void InitDefaultsStoreSpePropsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_StoreSpePropsResponse_default_instance_;
    new (ptr) ::StoreSpePropsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::StoreSpePropsResponse::InitAsDefaultInstance();
}

void InitDefaultsStoreSpePropsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStoreSpePropsResponseImpl);
}

void InitDefaultsWarehouseRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_WarehouseRequest_default_instance_;
    new (ptr) ::WarehouseRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WarehouseRequest::InitAsDefaultInstance();
}

void InitDefaultsWarehouseRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWarehouseRequestImpl);
}

void InitDefaultsWarehouseResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_WarehouseResponse_default_instance_;
    new (ptr) ::WarehouseResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WarehouseResponse::InitAsDefaultInstance();
}

void InitDefaultsWarehouseResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWarehouseResponseImpl);
}

void InitDefaultsDelMailRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_DelMailRequest_default_instance_;
    new (ptr) ::DelMailRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DelMailRequest::InitAsDefaultInstance();
}

void InitDefaultsDelMailRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDelMailRequestImpl);
}

void InitDefaultsDelMailResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_DelMailResponse_default_instance_;
    new (ptr) ::DelMailResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DelMailResponse::InitAsDefaultInstance();
}

void InitDefaultsDelMailResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDelMailResponseImpl);
}

void InitDefaultsClaimedTaskRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ClaimedTaskRequest_default_instance_;
    new (ptr) ::ClaimedTaskRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ClaimedTaskRequest::InitAsDefaultInstance();
}

void InitDefaultsClaimedTaskRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClaimedTaskRequestImpl);
}

void InitDefaultsClaimedTaskResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ClaimedTaskResponse_default_instance_;
    new (ptr) ::ClaimedTaskResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ClaimedTaskResponse::InitAsDefaultInstance();
}

void InitDefaultsClaimedTaskResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClaimedTaskResponseImpl);
}

void InitDefaultsRecTaskAwardRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_RecTaskAwardRequest_default_instance_;
    new (ptr) ::RecTaskAwardRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RecTaskAwardRequest::InitAsDefaultInstance();
}

void InitDefaultsRecTaskAwardRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRecTaskAwardRequestImpl);
}

void InitDefaultsRecTaskAwardResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Msg_2eproto::InitDefaultsPrize();
  {
    void* ptr = &::_RecTaskAwardResponse_default_instance_;
    new (ptr) ::RecTaskAwardResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RecTaskAwardResponse::InitAsDefaultInstance();
}

void InitDefaultsRecTaskAwardResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRecTaskAwardResponseImpl);
}

void InitDefaultsFriendsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_FriendsRequest_default_instance_;
    new (ptr) ::FriendsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FriendsRequest::InitAsDefaultInstance();
}

void InitDefaultsFriendsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFriendsRequestImpl);
}

void InitDefaultsFriendsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_FriendsResponse_default_instance_;
    new (ptr) ::FriendsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FriendsResponse::InitAsDefaultInstance();
}

void InitDefaultsFriendsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFriendsResponseImpl);
}

void InitDefaultsEnemiesRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_EnemiesRequest_default_instance_;
    new (ptr) ::EnemiesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::EnemiesRequest::InitAsDefaultInstance();
}

void InitDefaultsEnemiesRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEnemiesRequestImpl);
}

void InitDefaultsEnemiesResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_EnemiesResponse_default_instance_;
    new (ptr) ::EnemiesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::EnemiesResponse::InitAsDefaultInstance();
}

void InitDefaultsEnemiesResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEnemiesResponseImpl);
}

void InitDefaultsPlunderRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PlunderRequest_default_instance_;
    new (ptr) ::PlunderRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PlunderRequest::InitAsDefaultInstance();
}

void InitDefaultsPlunderRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlunderRequestImpl);
}

void InitDefaultsPlunderResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PlunderResponse_default_instance_;
    new (ptr) ::PlunderResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PlunderResponse::InitAsDefaultInstance();
}

void InitDefaultsPlunderResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlunderResponseImpl);
}

void InitDefaultsUseItemRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_UseItemRequest_default_instance_;
    new (ptr) ::UseItemRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UseItemRequest::InitAsDefaultInstance();
}

void InitDefaultsUseItemRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUseItemRequestImpl);
}

void InitDefaultsUseItemResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_UseItemResponse_default_instance_;
    new (ptr) ::UseItemResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UseItemResponse::InitAsDefaultInstance();
}

void InitDefaultsUseItemResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUseItemResponseImpl);
}

void InitDefaultsForgetSkillRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ForgetSkillRequest_default_instance_;
    new (ptr) ::ForgetSkillRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ForgetSkillRequest::InitAsDefaultInstance();
}

void InitDefaultsForgetSkillRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsForgetSkillRequestImpl);
}

void InitDefaultsForgetSkillResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ForgetSkillResponse_default_instance_;
    new (ptr) ::ForgetSkillResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ForgetSkillResponse::InitAsDefaultInstance();
}

void InitDefaultsForgetSkillResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsForgetSkillResponseImpl);
}

void InitDefaultsSettleAccountRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_SettleAccountRequest_default_instance_;
    new (ptr) ::SettleAccountRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SettleAccountRequest::InitAsDefaultInstance();
}

void InitDefaultsSettleAccountRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSettleAccountRequestImpl);
}

void InitDefaultsSettleAccountResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_SettleAccountResponse_default_instance_;
    new (ptr) ::SettleAccountResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SettleAccountResponse::InitAsDefaultInstance();
}

void InitDefaultsSettleAccountResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSettleAccountResponseImpl);
}

void InitDefaultsRankingRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_RankingRequest_default_instance_;
    new (ptr) ::RankingRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RankingRequest::InitAsDefaultInstance();
}

void InitDefaultsRankingRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRankingRequestImpl);
}

void InitDefaultsRankingResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_RankingResponse_default_instance_;
    new (ptr) ::RankingResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RankingResponse::InitAsDefaultInstance();
}

void InitDefaultsRankingResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRankingResponseImpl);
}

void InitDefaultsRegisterRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_RegisterRequest_default_instance_;
    new (ptr) ::RegisterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RegisterRequest::InitAsDefaultInstance();
}

void InitDefaultsRegisterRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRegisterRequestImpl);
}

void InitDefaultsRegisterResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_RegisterResponse_default_instance_;
    new (ptr) ::RegisterResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RegisterResponse::InitAsDefaultInstance();
}

void InitDefaultsRegisterResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRegisterResponseImpl);
}

void InitDefaultsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Msg_2eproto::InitDefaultsLoginRequest();
  protobuf_Msg_2eproto::InitDefaultsElfinRequest();
  protobuf_Msg_2eproto::InitDefaultsRollRequest();
  protobuf_Msg_2eproto::InitDefaultsTreeRequest();
  protobuf_Msg_2eproto::InitDefaultsResourceRequest();
  protobuf_Msg_2eproto::InitDefaultsTasksRequest();
  protobuf_Msg_2eproto::InitDefaultsMailsRequest();
  protobuf_Msg_2eproto::InitDefaultsSunRequest();
  protobuf_Msg_2eproto::InitDefaultsTreeEnchantmentRequest();
  protobuf_Msg_2eproto::InitDefaultsStoreAllRequest();
  protobuf_Msg_2eproto::InitDefaultsStoreEquRequest();
  protobuf_Msg_2eproto::InitDefaultsStoreWaterRequest();
  protobuf_Msg_2eproto::InitDefaultsStoreSpePropsRequest();
  protobuf_Msg_2eproto::InitDefaultsWarehouseRequest();
  protobuf_Msg_2eproto::InitDefaultsDelMailRequest();
  protobuf_Msg_2eproto::InitDefaultsClaimedTaskRequest();
  protobuf_Msg_2eproto::InitDefaultsRecTaskAwardRequest();
  protobuf_Msg_2eproto::InitDefaultsFriendsRequest();
  protobuf_Msg_2eproto::InitDefaultsEnemiesRequest();
  protobuf_Msg_2eproto::InitDefaultsPlunderRequest();
  protobuf_Msg_2eproto::InitDefaultsUseItemRequest();
  protobuf_Msg_2eproto::InitDefaultsSettleAccountRequest();
  protobuf_Msg_2eproto::InitDefaultsRankingRequest();
  protobuf_Msg_2eproto::InitDefaultsForgetSkillRequest();
  protobuf_Msg_2eproto::InitDefaultsRegisterRequest();
  {
    void* ptr = &::_Request_default_instance_;
    new (ptr) ::Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Request::InitAsDefaultInstance();
}

void InitDefaultsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRequestImpl);
}

void InitDefaultsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Msg_2eproto::InitDefaultsLoginResponse();
  protobuf_Msg_2eproto::InitDefaultsElfinResponse();
  protobuf_Msg_2eproto::InitDefaultsRollResponse();
  protobuf_Msg_2eproto::InitDefaultsTreeResponse();
  protobuf_Msg_2eproto::InitDefaultsResourceResponse();
  protobuf_Msg_2eproto::InitDefaultsTasksResponse();
  protobuf_Msg_2eproto::InitDefaultsMailsResponse();
  protobuf_Msg_2eproto::InitDefaultsSunResponse();
  protobuf_Msg_2eproto::InitDefaultsTreeEnchantmentResponse();
  protobuf_Msg_2eproto::InitDefaultsStoreAllResponse();
  protobuf_Msg_2eproto::InitDefaultsStoreEquResponse();
  protobuf_Msg_2eproto::InitDefaultsStoreWaterResponse();
  protobuf_Msg_2eproto::InitDefaultsStoreSpePropsResponse();
  protobuf_Msg_2eproto::InitDefaultsWarehouseResponse();
  protobuf_Msg_2eproto::InitDefaultsDelMailResponse();
  protobuf_Msg_2eproto::InitDefaultsClaimedTaskResponse();
  protobuf_Msg_2eproto::InitDefaultsRecTaskAwardResponse();
  protobuf_Msg_2eproto::InitDefaultsFriendsResponse();
  protobuf_Msg_2eproto::InitDefaultsEnemiesResponse();
  protobuf_Msg_2eproto::InitDefaultsPlunderResponse();
  protobuf_Msg_2eproto::InitDefaultsUseItemResponse();
  protobuf_Msg_2eproto::InitDefaultsSettleAccountResponse();
  protobuf_Msg_2eproto::InitDefaultsRankingResponse();
  protobuf_Msg_2eproto::InitDefaultsForgetSkillResponse();
  protobuf_Msg_2eproto::InitDefaultsRegisterResponse();
  {
    void* ptr = &::_Response_default_instance_;
    new (ptr) ::Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Response::InitAsDefaultInstance();
}

void InitDefaultsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsResponseImpl);
}

void InitDefaultsGameMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Msg_2eproto::InitDefaultsRequest();
  protobuf_Msg_2eproto::InitDefaultsResponse();
  {
    void* ptr = &::_GameMessage_default_instance_;
    new (ptr) ::GameMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GameMessage::InitAsDefaultInstance();
}

void InitDefaultsGameMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGameMessageImpl);
}

::google::protobuf::Metadata file_level_metadata[54];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LoginRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LoginRequest, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LoginRequest, passwd_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LoginResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LoginResponse, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ElfinRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ElfinRequest, elfin_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ElfinResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ElfinResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ElfinResponse, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ElfinResponse, power_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ElfinResponse, maxpower_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ElfinResponse, etype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RollRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RollRequest, roll_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RollResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RollResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RollResponse, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RollResponse, level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TreeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TreeRequest, tree_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TreeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TreeResponse, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TreeResponse, hight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TreeResponse, prodgold_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResourceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResourceRequest, resource_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResourceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResourceResponse, gold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResourceResponse, water_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResourceResponse, sunshine_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResourceResponse, diamond_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TasksRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TasksRequest, tasks_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TasksResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TasksResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TasksResponse, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TasksResponse, details_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TasksResponse, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TasksResponse, prize1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TasksResponse, prize2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TasksResponse, prize3_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Prize, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Prize, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Prize, number_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MailsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MailsRequest, mails_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MailsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MailsResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MailsResponse, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MailsResponse, details_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MailsResponse, received_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MailsResponse, prize1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MailsResponse, prize2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MailsResponse, prize3_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SunRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SunRequest, sun_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SunResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SunResponse, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SunResponse, sunshine_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TreeEnchantmentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TreeEnchantmentRequest, well_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TreeEnchantmentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TreeEnchantmentResponse, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TreeEnchantmentResponse, defenselevel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreAllRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreAllRequest, storeall_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreAllResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreAllResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreAllResponse, goldprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreAllResponse, diaprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreAllResponse, discount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreAllResponse, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreAllResponse, describe_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreAllResponse, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreEquRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreEquRequest, storeequ_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreEquResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreEquResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreEquResponse, goldprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreEquResponse, diaprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreEquResponse, discount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreEquResponse, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreEquResponse, describe_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreEquResponse, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreWaterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreWaterRequest, storewater_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreWaterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreWaterResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreWaterResponse, goldprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreWaterResponse, diaprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreWaterResponse, discount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreWaterResponse, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreWaterResponse, describe_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreWaterResponse, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreSpePropsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreSpePropsRequest, storespeprops_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreSpePropsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreSpePropsResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreSpePropsResponse, goldprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreSpePropsResponse, diaprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreSpePropsResponse, discount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreSpePropsResponse, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreSpePropsResponse, describe_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StoreSpePropsResponse, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WarehouseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WarehouseRequest, warehouse_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WarehouseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WarehouseResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WarehouseResponse, number_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DelMailRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DelMailRequest, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DelMailResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DelMailResponse, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DelMailResponse, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClaimedTaskRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClaimedTaskRequest, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClaimedTaskResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClaimedTaskResponse, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClaimedTaskResponse, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RecTaskAwardRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RecTaskAwardRequest, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RecTaskAwardResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RecTaskAwardResponse, prize1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RecTaskAwardResponse, prize2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RecTaskAwardResponse, prize3_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FriendsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FriendsRequest, friends_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FriendsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FriendsResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FriendsResponse, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FriendsResponse, level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnemiesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnemiesRequest, enemies_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnemiesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnemiesResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnemiesResponse, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnemiesResponse, level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlunderRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlunderRequest, plunder_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlunderResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlunderResponse, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlunderResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlunderResponse, goldnum_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UseItemRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UseItemRequest, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UseItemResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UseItemResponse, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UseItemResponse, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ForgetSkillRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ForgetSkillRequest, skillid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ForgetSkillRequest, elfinid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ForgetSkillResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ForgetSkillResponse, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ForgetSkillResponse, skillid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ForgetSkillResponse, elfinid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SettleAccountRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SettleAccountRequest, itemnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SettleAccountRequest, number_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SettleAccountResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SettleAccountResponse, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SettleAccountResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SettleAccountResponse, number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SettleAccountResponse, price_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RankingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RankingRequest, ranking_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RankingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RankingResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RankingResponse, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RankingResponse, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RankingResponse, ranking_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RegisterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RegisterRequest, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RegisterRequest, passwd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RegisterRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RegisterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RegisterResponse, success_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, login_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, elfin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, roll_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, tree_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, resource_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, tasks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, mails_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, sun_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, treeenchantment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, storeall_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, storeequ_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, storewater_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, storespeprops_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, warehouse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, delmail_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, claimedtask_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, rectaskaward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, friends_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, enemies_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, plunder_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, useitem_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, settleaccount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, ranking_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, forgetskill_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, register__),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, login_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, elfin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, roll_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, tree_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, resource_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, tasks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, mails_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, sun_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, treeenchantment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, storeall_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, storeequ_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, storewater_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, storespeprops_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, warehouse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, delmail_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, claimedtask_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, rectaskaward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, friends_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, enemies_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, plunder_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, useitem_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, settleaccount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, ranking_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, forgetskill_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, register__),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessage, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessage, req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessage, res_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::LoginRequest)},
  { 7, -1, sizeof(::LoginResponse)},
  { 13, -1, sizeof(::ElfinRequest)},
  { 19, -1, sizeof(::ElfinResponse)},
  { 29, -1, sizeof(::RollRequest)},
  { 35, -1, sizeof(::RollResponse)},
  { 43, -1, sizeof(::TreeRequest)},
  { 49, -1, sizeof(::TreeResponse)},
  { 57, -1, sizeof(::ResourceRequest)},
  { 63, -1, sizeof(::ResourceResponse)},
  { 72, -1, sizeof(::TasksRequest)},
  { 78, -1, sizeof(::TasksResponse)},
  { 90, -1, sizeof(::Prize)},
  { 97, -1, sizeof(::MailsRequest)},
  { 103, -1, sizeof(::MailsResponse)},
  { 115, -1, sizeof(::SunRequest)},
  { 121, -1, sizeof(::SunResponse)},
  { 128, -1, sizeof(::TreeEnchantmentRequest)},
  { 134, -1, sizeof(::TreeEnchantmentResponse)},
  { 141, -1, sizeof(::StoreAllRequest)},
  { 147, -1, sizeof(::StoreAllResponse)},
  { 159, -1, sizeof(::StoreEquRequest)},
  { 165, -1, sizeof(::StoreEquResponse)},
  { 177, -1, sizeof(::StoreWaterRequest)},
  { 183, -1, sizeof(::StoreWaterResponse)},
  { 195, -1, sizeof(::StoreSpePropsRequest)},
  { 201, -1, sizeof(::StoreSpePropsResponse)},
  { 213, -1, sizeof(::WarehouseRequest)},
  { 219, -1, sizeof(::WarehouseResponse)},
  { 226, -1, sizeof(::DelMailRequest)},
  { 232, -1, sizeof(::DelMailResponse)},
  { 239, -1, sizeof(::ClaimedTaskRequest)},
  { 245, -1, sizeof(::ClaimedTaskResponse)},
  { 252, -1, sizeof(::RecTaskAwardRequest)},
  { 258, -1, sizeof(::RecTaskAwardResponse)},
  { 266, -1, sizeof(::FriendsRequest)},
  { 272, -1, sizeof(::FriendsResponse)},
  { 280, -1, sizeof(::EnemiesRequest)},
  { 286, -1, sizeof(::EnemiesResponse)},
  { 294, -1, sizeof(::PlunderRequest)},
  { 300, -1, sizeof(::PlunderResponse)},
  { 308, -1, sizeof(::UseItemRequest)},
  { 314, -1, sizeof(::UseItemResponse)},
  { 321, -1, sizeof(::ForgetSkillRequest)},
  { 328, -1, sizeof(::ForgetSkillResponse)},
  { 336, -1, sizeof(::SettleAccountRequest)},
  { 343, -1, sizeof(::SettleAccountResponse)},
  { 352, -1, sizeof(::RankingRequest)},
  { 358, -1, sizeof(::RankingResponse)},
  { 367, -1, sizeof(::RegisterRequest)},
  { 375, -1, sizeof(::RegisterResponse)},
  { 381, -1, sizeof(::Request)},
  { 411, -1, sizeof(::Response)},
  { 441, -1, sizeof(::GameMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_LoginRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_LoginResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ElfinRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ElfinResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RollRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RollResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_TreeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_TreeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ResourceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ResourceResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_TasksRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_TasksResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Prize_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MailsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MailsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SunRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SunResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_TreeEnchantmentRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_TreeEnchantmentResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_StoreAllRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_StoreAllResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_StoreEquRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_StoreEquResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_StoreWaterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_StoreWaterResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_StoreSpePropsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_StoreSpePropsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_WarehouseRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_WarehouseResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DelMailRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DelMailResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ClaimedTaskRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ClaimedTaskResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RecTaskAwardRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RecTaskAwardResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_FriendsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_FriendsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_EnemiesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_EnemiesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PlunderRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PlunderResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UseItemRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UseItemResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ForgetSkillRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ForgetSkillResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SettleAccountRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SettleAccountResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RankingRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RankingResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RegisterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RegisterResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GameMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Msg.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 54);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\tMsg.proto\"/\n\014LoginRequest\022\017\n\007Account\030\001"
      " \001(\t\022\016\n\006Passwd\030\002 \001(\t\"x\n\rLoginResponse\022)\n"
      "\006result\030\001 \001(\0162\031.LoginResponse.ResultType"
      "\"<\n\nResultType\022\013\n\007Success\020\000\022\017\n\013PsswadErr"
      "or\020\001\022\020\n\014UnknownError\020\002\"\035\n\014ElfinRequest\022\r"
      "\n\005Elfin\030\001 \001(\010\"\276\001\n\rElfinResponse\022\n\n\002Id\030\001 "
      "\001(\r\022\r\n\005Level\030\002 \001(\r\022\r\n\005Power\030\003 \001(\r\022\020\n\010Max"
      "Power\030\004 \001(\r\022\'\n\005Etype\030\005 \001(\0162\030.ElfinRespon"
      "se.Elfintype\"H\n\tElfintype\022\007\n\003Jin\020\000\022\006\n\002Mu"
      "\020\001\022\010\n\004Shui\020\002\022\007\n\003Huo\020\003\022\006\n\002Tu\020\004\022\007\n\003Sum\020\005\022\006"
      "\n\002An\020\006\"\033\n\013RollRequest\022\014\n\004Roll\030\001 \001(\010\"7\n\014R"
      "ollResponse\022\n\n\002Id\030\001 \001(\r\022\014\n\004Name\030\002 \001(\t\022\r\n"
      "\005Level\030\003 \001(\r\"\033\n\013TreeRequest\022\014\n\004Tree\030\001 \001("
      "\010\">\n\014TreeResponse\022\r\n\005Level\030\001 \001(\r\022\r\n\005High"
      "t\030\002 \001(\r\022\020\n\010ProdGold\030\004 \001(\r\"#\n\017ResourceReq"
      "uest\022\020\n\010resource\030\001 \001(\010\"R\n\020ResourceRespon"
      "se\022\014\n\004Gold\030\001 \001(\r\022\r\n\005Water\030\002 \001(\r\022\020\n\010SunSh"
      "ine\030\003 \001(\r\022\017\n\007Diamond\030\004 \001(\r\"\035\n\014TasksReque"
      "st\022\r\n\005Tasks\030\001 \001(\010\"\347\001\n\rTasksResponse\022\n\n\002I"
      "d\030\001 \001(\r\022\r\n\005Title\030\002 \001(\t\022\017\n\007Details\030\003 \001(\t\022"
      "%\n\004Type\030\004 \001(\0162\027.TasksResponse.TaskType\022\026"
      "\n\006Prize1\030\005 \001(\0132\006.Prize\022\026\n\006Prize2\030\006 \001(\0132\006"
      ".Prize\022\026\n\006Prize3\030\007 \001(\0132\006.Prize\";\n\010TaskTy"
      "pe\022\n\n\006NotYet\020\000\022\013\n\007Already\020\001\022\010\n\004Done\020\002\022\014\n"
      "\010Received\020\003\"#\n\005Prize\022\n\n\002Id\030\001 \001(\r\022\016\n\006Numb"
      "er\030\002 \001(\r\"\035\n\014MailsRequest\022\r\n\005Mails\030\001 \001(\010\""
      "\225\001\n\rMailsResponse\022\n\n\002Id\030\001 \001(\r\022\r\n\005Title\030\002"
      " \001(\t\022\017\n\007Details\030\003 \001(\t\022\020\n\010Received\030\004 \001(\010\022"
      "\026\n\006Prize1\030\005 \001(\0132\006.Prize\022\026\n\006Prize2\030\006 \001(\0132"
      "\006.Prize\022\026\n\006Prize3\030\007 \001(\0132\006.Prize\"\031\n\nSunRe"
      "quest\022\013\n\003Sun\030\001 \001(\010\".\n\013SunResponse\022\r\n\005Lev"
      "el\030\001 \001(\r\022\020\n\010SunShine\030\002 \001(\r\"&\n\026TreeEnchan"
      "tmentRequest\022\014\n\004Well\030\001 \001(\010\">\n\027TreeEnchan"
      "tmentResponse\022\r\n\005Level\030\001 \001(\r\022\024\n\014DefenseL"
      "evel\030\002 \001(\r\"#\n\017StoreAllRequest\022\020\n\010StoreAl"
      "l\030\001 \001(\010\"\215\001\n\020StoreAllResponse\022\n\n\002Id\030\001 \001(\r"
      "\022\021\n\tGoldPrice\030\002 \001(\r\022\020\n\010DiaPrice\030\003 \001(\r\022\020\n"
      "\010Discount\030\004 \001(\r\022\026\n\004Type\030\005 \001(\0162\010.StdMode\022"
      "\020\n\010Describe\030\006 \001(\t\022\014\n\004Name\030\007 \001(\t\"#\n\017Store"
      "EquRequest\022\020\n\010StoreEqu\030\001 \001(\010\"\215\001\n\020StoreEq"
      "uResponse\022\n\n\002Id\030\001 \001(\r\022\021\n\tGoldPrice\030\002 \001(\r"
      "\022\020\n\010DiaPrice\030\003 \001(\r\022\020\n\010Discount\030\004 \001(\r\022\026\n\004"
      "Type\030\005 \001(\0162\010.StdMode\022\020\n\010Describe\030\006 \001(\t\022\014"
      "\n\004Name\030\007 \001(\t\"\'\n\021StoreWaterRequest\022\022\n\nSto"
      "reWater\030\001 \001(\010\"\217\001\n\022StoreWaterResponse\022\n\n\002"
      "Id\030\001 \001(\r\022\021\n\tGoldPrice\030\002 \001(\r\022\020\n\010DiaPrice\030"
      "\003 \001(\r\022\020\n\010Discount\030\004 \001(\r\022\026\n\004Type\030\005 \001(\0162\010."
      "StdMode\022\020\n\010Describe\030\006 \001(\t\022\014\n\004Name\030\007 \001(\t\""
      "-\n\024StoreSpePropsRequest\022\025\n\rStoreSpeprops"
      "\030\001 \001(\010\"\222\001\n\025StoreSpePropsResponse\022\n\n\002Id\030\001"
      " \001(\r\022\021\n\tGoldPrice\030\002 \001(\r\022\020\n\010DiaPrice\030\003 \001("
      "\r\022\020\n\010Discount\030\004 \001(\r\022\026\n\004Type\030\005 \001(\0162\010.StdM"
      "ode\022\020\n\010Describe\030\006 \001(\t\022\014\n\004Name\030\007 \001(\t\"%\n\020W"
      "arehouseRequest\022\021\n\tWarehouse\030\001 \001(\010\"/\n\021Wa"
      "rehouseResponse\022\n\n\002Id\030\001 \001(\r\022\016\n\006Number\030\002 "
      "\001(\r\"\034\n\016DelMailRequest\022\n\n\002Id\030\001 \001(\r\".\n\017Del"
      "MailResponse\022\017\n\007Success\030\001 \001(\010\022\n\n\002Id\030\002 \001("
      "\r\" \n\022ClaimedTaskRequest\022\n\n\002Id\030\001 \001(\r\"2\n\023C"
      "laimedTaskResponse\022\017\n\007Success\030\001 \001(\010\022\n\n\002I"
      "d\030\002 \001(\r\"!\n\023RecTaskAwardRequest\022\n\n\002Id\030\001 \001"
      "(\r\"^\n\024RecTaskAwardResponse\022\026\n\006prize1\030\001 \001"
      "(\0132\006.Prize\022\026\n\006prize2\030\002 \001(\0132\006.Prize\022\026\n\006pr"
      "ize3\030\003 \001(\0132\006.Prize\"!\n\016FriendsRequest\022\017\n\007"
      "Friends\030\001 \001(\010\":\n\017FriendsResponse\022\n\n\002Id\030\001"
      " \001(\r\022\014\n\004Name\030\002 \001(\t\022\r\n\005Level\030\003 \001(\r\"!\n\016Ene"
      "miesRequest\022\017\n\007Enemies\030\001 \001(\010\":\n\017EnemiesR"
      "esponse\022\n\n\002Id\030\001 \001(\r\022\014\n\004Name\030\002 \001(\t\022\r\n\005Lev"
      "el\030\003 \001(\r\"!\n\016PlunderRequest\022\017\n\007Plunder\030\001 "
      "\001(\010\"\?\n\017PlunderResponse\022\017\n\007Success\030\001 \001(\010\022"
      "\n\n\002Id\030\002 \001(\r\022\017\n\007GoldNum\030\003 \001(\r\"\034\n\016UseItemR"
      "equest\022\n\n\002Id\030\001 \001(\r\".\n\017UseItemResponse\022\017\n"
      "\007Success\030\001 \001(\010\022\n\n\002Id\030\002 \001(\r\"6\n\022ForgetSkil"
      "lRequest\022\017\n\007skillId\030\001 \001(\r\022\017\n\007elfinId\030\002 \001"
      "(\r\"H\n\023ForgetSkillResponse\022\017\n\007Success\030\001 \001"
      "(\010\022\017\n\007skillId\030\002 \001(\r\022\017\n\007elfinId\030\003 \001(\r\"7\n\024"
      "SettleAccountRequest\022\017\n\007ItemNum\030\001 \001(\r\022\016\n"
      "\006Number\030\002 \001(\r\"S\n\025SettleAccountResponse\022\017"
      "\n\007success\030\001 \001(\010\022\n\n\002Id\030\002 \001(\r\022\016\n\006Number\030\003 "
      "\001(\r\022\r\n\005price\030\004 \001(\r\"!\n\016RankingRequest\022\017\n\007"
      "Ranking\030\001 \001(\010\"K\n\017RankingResponse\022\n\n\002Id\030\001"
      " \001(\r\022\014\n\004Name\030\002 \001(\t\022\r\n\005Level\030\003 \001(\r\022\017\n\007Ran"
      "king\030\004 \001(\r\"@\n\017RegisterRequest\022\017\n\007Account"
      "\030\001 \001(\t\022\016\n\006Passwd\030\002 \001(\t\022\014\n\004Name\030\003 \001(\t\"#\n\020"
      "RegisterResponse\022\017\n\007Success\030\001 \001(\010\"\213\007\n\007Re"
      "quest\022\034\n\005Login\030\001 \001(\0132\r.LoginRequest\022\034\n\005E"
      "lfin\030\002 \001(\0132\r.ElfinRequest\022\032\n\004Roll\030\003 \001(\0132"
      "\014.RollRequest\022\032\n\004Tree\030\004 \001(\0132\014.TreeReques"
      "t\022\"\n\010Resource\030\005 \001(\0132\020.ResourceRequest\022\034\n"
      "\005Tasks\030\006 \001(\0132\r.TasksRequest\022\034\n\005Mails\030\007 \001"
      "(\0132\r.MailsRequest\022\030\n\003Sun\030\010 \001(\0132\013.SunRequ"
      "est\0220\n\017TreeEnchantment\030\t \001(\0132\027.TreeEncha"
      "ntmentRequest\022\"\n\010StoreAll\030\n \001(\0132\020.StoreA"
      "llRequest\022\"\n\010StoreEqu\030\013 \001(\0132\020.StoreEquRe"
      "quest\022&\n\nStoreWater\030\014 \001(\0132\022.StoreWaterRe"
      "quest\022,\n\rStoreSpeProps\030\r \001(\0132\025.StoreSpeP"
      "ropsRequest\022$\n\tWarehouse\030\016 \001(\0132\021.Warehou"
      "seRequest\022 \n\007DelMail\030\017 \001(\0132\017.DelMailRequ"
      "est\022(\n\013ClaimedTask\030\020 \001(\0132\023.ClaimedTaskRe"
      "quest\022*\n\014RecTaskAward\030\021 \001(\0132\024.RecTaskAwa"
      "rdRequest\022 \n\007Friends\030\022 \001(\0132\017.FriendsRequ"
      "est\022 \n\007Enemies\030\023 \001(\0132\017.EnemiesRequest\022 \n"
      "\007Plunder\030\024 \001(\0132\017.PlunderRequest\022 \n\007UseIt"
      "em\030\025 \001(\0132\017.UseItemRequest\022,\n\rSettleAccou"
      "nt\030\026 \001(\0132\025.SettleAccountRequest\022 \n\007Ranki"
      "ng\030\027 \001(\0132\017.RankingRequest\022(\n\013ForgetSkill"
      "\030\030 \001(\0132\023.ForgetSkillRequest\022\"\n\010Register\030"
      "\031 \001(\0132\020.RegisterRequest\"\245\007\n\010Response\022\035\n\005"
      "Login\030\001 \001(\0132\016.LoginResponse\022\035\n\005Elfin\030\002 \001"
      "(\0132\016.ElfinResponse\022\033\n\004Roll\030\003 \001(\0132\r.RollR"
      "esponse\022\033\n\004Tree\030\004 \001(\0132\r.TreeResponse\022#\n\010"
      "Resource\030\005 \001(\0132\021.ResourceResponse\022\035\n\005Tas"
      "ks\030\006 \001(\0132\016.TasksResponse\022\035\n\005Mails\030\007 \001(\0132"
      "\016.MailsResponse\022\031\n\003Sun\030\010 \001(\0132\014.SunRespon"
      "se\0221\n\017TreeEnchantment\030\t \001(\0132\030.TreeEnchan"
      "tmentResponse\022#\n\010StoreAll\030\n \001(\0132\021.StoreA"
      "llResponse\022#\n\010StoreEqu\030\013 \001(\0132\021.StoreEquR"
      "esponse\022\'\n\nStoreWater\030\014 \001(\0132\023.StoreWater"
      "Response\022-\n\rStoreSpeProps\030\r \001(\0132\026.StoreS"
      "pePropsResponse\022%\n\tWarehouse\030\016 \001(\0132\022.War"
      "ehouseResponse\022!\n\007DelMail\030\017 \001(\0132\020.DelMai"
      "lResponse\022)\n\013ClaimedTask\030\020 \001(\0132\024.Claimed"
      "TaskResponse\022+\n\014RecTaskAward\030\021 \001(\0132\025.Rec"
      "TaskAwardResponse\022!\n\007Friends\030\022 \001(\0132\020.Fri"
      "endsResponse\022!\n\007Enemies\030\023 \001(\0132\020.EnemiesR"
      "esponse\022!\n\007Plunder\030\024 \001(\0132\020.PlunderRespon"
      "se\022!\n\007UseItem\030\025 \001(\0132\020.UseItemResponse\022-\n"
      "\rSettleAccount\030\026 \001(\0132\026.SettleAccountResp"
      "onse\022!\n\007Ranking\030\027 \001(\0132\020.RankingResponse\022"
      ")\n\013ForgetSkill\030\030 \001(\0132\024.ForgetSkillRespon"
      "se\022#\n\010Register\030\031 \001(\0132\021.RegisterResponse\""
      "W\n\013GameMessage\022\031\n\003msg\030\001 \001(\0162\014.GameMsgCod"
      "e\022\025\n\003req\030\002 \001(\0132\010.Request\022\026\n\003res\030\003 \001(\0132\t."
      "Response*\270\t\n\013GameMsgCode\022\024\n\020GameMsgCodeS"
      "tart\020\000\022\022\n\rLogin_Request\020\270\027\022\023\n\016Login_Resp"
      "onse\020\271\027\022\022\n\rElfin_Request\020\302\027\022\023\n\016Elfin_Res"
      "ponse\020\303\027\022\021\n\014Roll_Request\020\314\027\022\022\n\rRoll_Resp"
      "onse\020\315\027\022\021\n\014Tree_Request\020\326\027\022\022\n\rTree_Respo"
      "nse\020\327\027\022\025\n\020Resource_Request\020\340\027\022\026\n\021Resourc"
      "e_Response\020\341\027\022\022\n\rTasks_Request\020\352\027\022\023\n\016Tas"
      "ks_Response\020\353\027\022\022\n\rMails_Request\020\364\027\022\023\n\016Ma"
      "ils_Response\020\365\027\022\020\n\013Sun_Request\020\376\027\022\021\n\014Sun"
      "_Response\020\377\027\022\034\n\027TreeEnchantment_Request\020"
      "\210\030\022\035\n\030TreeEnchantment_Response\020\211\030\022\025\n\020Sto"
      "reAll_Request\020\222\030\022\026\n\021StoreAll_Response\020\223\030"
      "\022\025\n\020StoreEqu_Request\020\234\030\022\026\n\021StoreEqu_Resp"
      "onse\020\235\030\022\027\n\022StoreWater_Request\020\246\030\022\030\n\023Stor"
      "eWater_Response\020\247\030\022\032\n\025StoreSpeProps_Requ"
      "est\020\260\030\022\033\n\026StoreSpeProps_Response\020\261\030\022\026\n\021W"
      "arehouse_Request\020\272\030\022\027\n\022Warehouse_Respons"
      "e\020\273\030\022\024\n\017DelMail_Request\020\304\030\022\025\n\020DelMail_Re"
      "sponse\020\305\030\022\030\n\023ClaimedTask_Request\020\316\030\022\031\n\024C"
      "laimedTask_Response\020\317\030\022\031\n\024RecTaskAward_R"
      "equest\020\330\030\022\032\n\025RecTaskAward_Response\020\331\030\022\024\n"
      "\017Friends_Request\020\342\030\022\025\n\020Friends_Response\020"
      "\343\030\022\024\n\017Enemies_Request\020\354\030\022\025\n\020Enemies_Resp"
      "onse\020\355\030\022\024\n\017Plunder_Request\020\366\030\022\025\n\020Plunder"
      "_Response\020\367\030\022\024\n\017UseItem_Request\020\200\031\022\025\n\020Us"
      "eItem_Response\020\201\031\022\032\n\025SettleAccount_Reque"
      "st\020\212\031\022\033\n\026SettleAccount_Response\020\213\031\022\024\n\017Ra"
      "nking_Request\020\224\031\022\025\n\020Ranking_Response\020\225\031\022"
      "\030\n\023ForgetSkill_Request\020\236\031\022\031\n\024ForgetSkill"
      "_Response\020\237\031\022\025\n\020Register_Request\020\250\031\022\026\n\021R"
      "egister_Response\020\251\031*9\n\007StdMode\022\r\n\tRes_Wa"
      "ter\020\000\022\r\n\tRes_Equip\020\001\022\020\n\014Res_SpeProps\020\002b\006"
      "proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 6566);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Msg.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Msg_2eproto
const ::google::protobuf::EnumDescriptor* LoginResponse_ResultType_descriptor() {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_2eproto::file_level_enum_descriptors[0];
}
bool LoginResponse_ResultType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LoginResponse_ResultType LoginResponse::Success;
const LoginResponse_ResultType LoginResponse::PsswadError;
const LoginResponse_ResultType LoginResponse::UnknownError;
const LoginResponse_ResultType LoginResponse::ResultType_MIN;
const LoginResponse_ResultType LoginResponse::ResultType_MAX;
const int LoginResponse::ResultType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ElfinResponse_Elfintype_descriptor() {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_2eproto::file_level_enum_descriptors[1];
}
bool ElfinResponse_Elfintype_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ElfinResponse_Elfintype ElfinResponse::Jin;
const ElfinResponse_Elfintype ElfinResponse::Mu;
const ElfinResponse_Elfintype ElfinResponse::Shui;
const ElfinResponse_Elfintype ElfinResponse::Huo;
const ElfinResponse_Elfintype ElfinResponse::Tu;
const ElfinResponse_Elfintype ElfinResponse::Sum;
const ElfinResponse_Elfintype ElfinResponse::An;
const ElfinResponse_Elfintype ElfinResponse::Elfintype_MIN;
const ElfinResponse_Elfintype ElfinResponse::Elfintype_MAX;
const int ElfinResponse::Elfintype_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* TasksResponse_TaskType_descriptor() {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_2eproto::file_level_enum_descriptors[2];
}
bool TasksResponse_TaskType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TasksResponse_TaskType TasksResponse::NotYet;
const TasksResponse_TaskType TasksResponse::Already;
const TasksResponse_TaskType TasksResponse::Done;
const TasksResponse_TaskType TasksResponse::Received;
const TasksResponse_TaskType TasksResponse::TaskType_MIN;
const TasksResponse_TaskType TasksResponse::TaskType_MAX;
const int TasksResponse::TaskType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GameMsgCode_descriptor() {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_2eproto::file_level_enum_descriptors[3];
}
bool GameMsgCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 3000:
    case 3001:
    case 3010:
    case 3011:
    case 3020:
    case 3021:
    case 3030:
    case 3031:
    case 3040:
    case 3041:
    case 3050:
    case 3051:
    case 3060:
    case 3061:
    case 3070:
    case 3071:
    case 3080:
    case 3081:
    case 3090:
    case 3091:
    case 3100:
    case 3101:
    case 3110:
    case 3111:
    case 3120:
    case 3121:
    case 3130:
    case 3131:
    case 3140:
    case 3141:
    case 3150:
    case 3151:
    case 3160:
    case 3161:
    case 3170:
    case 3171:
    case 3180:
    case 3181:
    case 3190:
    case 3191:
    case 3200:
    case 3201:
    case 3210:
    case 3211:
    case 3220:
    case 3221:
    case 3230:
    case 3231:
    case 3240:
    case 3241:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* StdMode_descriptor() {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_2eproto::file_level_enum_descriptors[4];
}
bool StdMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void LoginRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginRequest::kAccountFieldNumber;
const int LoginRequest::kPasswdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginRequest::LoginRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsLoginRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LoginRequest)
}
LoginRequest::LoginRequest(const LoginRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account().size() > 0) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  passwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.passwd().size() > 0) {
    passwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passwd_);
  }
  // @@protoc_insertion_point(copy_constructor:LoginRequest)
}

void LoginRequest::SharedCtor() {
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LoginRequest::~LoginRequest() {
  // @@protoc_insertion_point(destructor:LoginRequest)
  SharedDtor();
}

void LoginRequest::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginRequest::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginRequest& LoginRequest::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsLoginRequest();
  return *internal_default_instance();
}

LoginRequest* LoginRequest::New(::google::protobuf::Arena* arena) const {
  LoginRequest* n = new LoginRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:LoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool LoginRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LoginRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), static_cast<int>(this->account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LoginRequest.Account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Passwd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_passwd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->passwd().data(), static_cast<int>(this->passwd().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LoginRequest.Passwd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LoginRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LoginRequest)
  return false;
#undef DO_
}

void LoginRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Account = 1;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginRequest.Account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  // string Passwd = 2;
  if (this->passwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passwd().data(), static_cast<int>(this->passwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginRequest.Passwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->passwd(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LoginRequest)
}

::google::protobuf::uint8* LoginRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Account = 1;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginRequest.Account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // string Passwd = 2;
  if (this->passwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passwd().data(), static_cast<int>(this->passwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginRequest.Passwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->passwd(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LoginRequest)
  return target;
}

size_t LoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoginRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Account = 1;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // string Passwd = 2;
  if (this->passwd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->passwd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LoginRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LoginRequest)
    MergeFrom(*source);
  }
}

void LoginRequest::MergeFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.passwd().size() > 0) {

    passwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passwd_);
  }
}

void LoginRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRequest::CopyFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginRequest::IsInitialized() const {
  return true;
}

void LoginRequest::Swap(LoginRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginRequest::InternalSwap(LoginRequest* other) {
  using std::swap;
  account_.Swap(&other->account_);
  passwd_.Swap(&other->passwd_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginRequest::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoginResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginResponse::LoginResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsLoginResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LoginResponse)
}
LoginResponse::LoginResponse(const LoginResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:LoginResponse)
}

void LoginResponse::SharedCtor() {
  result_ = 0;
  _cached_size_ = 0;
}

LoginResponse::~LoginResponse() {
  // @@protoc_insertion_point(destructor:LoginResponse)
  SharedDtor();
}

void LoginResponse::SharedDtor() {
}

void LoginResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginResponse::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginResponse& LoginResponse::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsLoginResponse();
  return *internal_default_instance();
}

LoginResponse* LoginResponse::New(::google::protobuf::Arena* arena) const {
  LoginResponse* n = new LoginResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:LoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _internal_metadata_.Clear();
}

bool LoginResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LoginResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .LoginResponse.ResultType result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_result(static_cast< ::LoginResponse_ResultType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LoginResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LoginResponse)
  return false;
#undef DO_
}

void LoginResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LoginResponse.ResultType result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LoginResponse)
}

::google::protobuf::uint8* LoginResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LoginResponse.ResultType result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LoginResponse)
  return target;
}

size_t LoginResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoginResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .LoginResponse.ResultType result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LoginResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LoginResponse)
    MergeFrom(*source);
  }
}

void LoginResponse::MergeFrom(const LoginResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    set_result(from.result());
  }
}

void LoginResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginResponse::CopyFrom(const LoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginResponse::IsInitialized() const {
  return true;
}

void LoginResponse::Swap(LoginResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginResponse::InternalSwap(LoginResponse* other) {
  using std::swap;
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginResponse::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ElfinRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ElfinRequest::kElfinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ElfinRequest::ElfinRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsElfinRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ElfinRequest)
}
ElfinRequest::ElfinRequest(const ElfinRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  elfin_ = from.elfin_;
  // @@protoc_insertion_point(copy_constructor:ElfinRequest)
}

void ElfinRequest::SharedCtor() {
  elfin_ = false;
  _cached_size_ = 0;
}

ElfinRequest::~ElfinRequest() {
  // @@protoc_insertion_point(destructor:ElfinRequest)
  SharedDtor();
}

void ElfinRequest::SharedDtor() {
}

void ElfinRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ElfinRequest::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ElfinRequest& ElfinRequest::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsElfinRequest();
  return *internal_default_instance();
}

ElfinRequest* ElfinRequest::New(::google::protobuf::Arena* arena) const {
  ElfinRequest* n = new ElfinRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ElfinRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ElfinRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  elfin_ = false;
  _internal_metadata_.Clear();
}

bool ElfinRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ElfinRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool Elfin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &elfin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ElfinRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ElfinRequest)
  return false;
#undef DO_
}

void ElfinRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ElfinRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Elfin = 1;
  if (this->elfin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->elfin(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ElfinRequest)
}

::google::protobuf::uint8* ElfinRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ElfinRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Elfin = 1;
  if (this->elfin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->elfin(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ElfinRequest)
  return target;
}

size_t ElfinRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ElfinRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool Elfin = 1;
  if (this->elfin() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ElfinRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ElfinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ElfinRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ElfinRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ElfinRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ElfinRequest)
    MergeFrom(*source);
  }
}

void ElfinRequest::MergeFrom(const ElfinRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ElfinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.elfin() != 0) {
    set_elfin(from.elfin());
  }
}

void ElfinRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ElfinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ElfinRequest::CopyFrom(const ElfinRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ElfinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ElfinRequest::IsInitialized() const {
  return true;
}

void ElfinRequest::Swap(ElfinRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ElfinRequest::InternalSwap(ElfinRequest* other) {
  using std::swap;
  swap(elfin_, other->elfin_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ElfinRequest::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ElfinResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ElfinResponse::kIdFieldNumber;
const int ElfinResponse::kLevelFieldNumber;
const int ElfinResponse::kPowerFieldNumber;
const int ElfinResponse::kMaxPowerFieldNumber;
const int ElfinResponse::kEtypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ElfinResponse::ElfinResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsElfinResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ElfinResponse)
}
ElfinResponse::ElfinResponse(const ElfinResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&etype_) -
    reinterpret_cast<char*>(&id_)) + sizeof(etype_));
  // @@protoc_insertion_point(copy_constructor:ElfinResponse)
}

void ElfinResponse::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&etype_) -
      reinterpret_cast<char*>(&id_)) + sizeof(etype_));
  _cached_size_ = 0;
}

ElfinResponse::~ElfinResponse() {
  // @@protoc_insertion_point(destructor:ElfinResponse)
  SharedDtor();
}

void ElfinResponse::SharedDtor() {
}

void ElfinResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ElfinResponse::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ElfinResponse& ElfinResponse::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsElfinResponse();
  return *internal_default_instance();
}

ElfinResponse* ElfinResponse::New(::google::protobuf::Arena* arena) const {
  ElfinResponse* n = new ElfinResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ElfinResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ElfinResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&etype_) -
      reinterpret_cast<char*>(&id_)) + sizeof(etype_));
  _internal_metadata_.Clear();
}

bool ElfinResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ElfinResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Level = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Power = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &power_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MaxPower = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxpower_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ElfinResponse.Elfintype Etype = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_etype(static_cast< ::ElfinResponse_Elfintype >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ElfinResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ElfinResponse)
  return false;
#undef DO_
}

void ElfinResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ElfinResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // uint32 Level = 2;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->level(), output);
  }

  // uint32 Power = 3;
  if (this->power() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->power(), output);
  }

  // uint32 MaxPower = 4;
  if (this->maxpower() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->maxpower(), output);
  }

  // .ElfinResponse.Elfintype Etype = 5;
  if (this->etype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->etype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ElfinResponse)
}

::google::protobuf::uint8* ElfinResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ElfinResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // uint32 Level = 2;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->level(), target);
  }

  // uint32 Power = 3;
  if (this->power() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->power(), target);
  }

  // uint32 MaxPower = 4;
  if (this->maxpower() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->maxpower(), target);
  }

  // .ElfinResponse.Elfintype Etype = 5;
  if (this->etype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->etype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ElfinResponse)
  return target;
}

size_t ElfinResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ElfinResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // uint32 Level = 2;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // uint32 Power = 3;
  if (this->power() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->power());
  }

  // uint32 MaxPower = 4;
  if (this->maxpower() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxpower());
  }

  // .ElfinResponse.Elfintype Etype = 5;
  if (this->etype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->etype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ElfinResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ElfinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ElfinResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ElfinResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ElfinResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ElfinResponse)
    MergeFrom(*source);
  }
}

void ElfinResponse::MergeFrom(const ElfinResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ElfinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.power() != 0) {
    set_power(from.power());
  }
  if (from.maxpower() != 0) {
    set_maxpower(from.maxpower());
  }
  if (from.etype() != 0) {
    set_etype(from.etype());
  }
}

void ElfinResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ElfinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ElfinResponse::CopyFrom(const ElfinResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ElfinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ElfinResponse::IsInitialized() const {
  return true;
}

void ElfinResponse::Swap(ElfinResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ElfinResponse::InternalSwap(ElfinResponse* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(level_, other->level_);
  swap(power_, other->power_);
  swap(maxpower_, other->maxpower_);
  swap(etype_, other->etype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ElfinResponse::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RollRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RollRequest::kRollFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RollRequest::RollRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsRollRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RollRequest)
}
RollRequest::RollRequest(const RollRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roll_ = from.roll_;
  // @@protoc_insertion_point(copy_constructor:RollRequest)
}

void RollRequest::SharedCtor() {
  roll_ = false;
  _cached_size_ = 0;
}

RollRequest::~RollRequest() {
  // @@protoc_insertion_point(destructor:RollRequest)
  SharedDtor();
}

void RollRequest::SharedDtor() {
}

void RollRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RollRequest::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RollRequest& RollRequest::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsRollRequest();
  return *internal_default_instance();
}

RollRequest* RollRequest::New(::google::protobuf::Arena* arena) const {
  RollRequest* n = new RollRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RollRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RollRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roll_ = false;
  _internal_metadata_.Clear();
}

bool RollRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RollRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool Roll = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &roll_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RollRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RollRequest)
  return false;
#undef DO_
}

void RollRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RollRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Roll = 1;
  if (this->roll() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->roll(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RollRequest)
}

::google::protobuf::uint8* RollRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RollRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Roll = 1;
  if (this->roll() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->roll(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RollRequest)
  return target;
}

size_t RollRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RollRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool Roll = 1;
  if (this->roll() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RollRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RollRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RollRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RollRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RollRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RollRequest)
    MergeFrom(*source);
  }
}

void RollRequest::MergeFrom(const RollRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RollRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roll() != 0) {
    set_roll(from.roll());
  }
}

void RollRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RollRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RollRequest::CopyFrom(const RollRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RollRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RollRequest::IsInitialized() const {
  return true;
}

void RollRequest::Swap(RollRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RollRequest::InternalSwap(RollRequest* other) {
  using std::swap;
  swap(roll_, other->roll_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RollRequest::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RollResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RollResponse::kIdFieldNumber;
const int RollResponse::kNameFieldNumber;
const int RollResponse::kLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RollResponse::RollResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsRollResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RollResponse)
}
RollResponse::RollResponse(const RollResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&id_)) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:RollResponse)
}

void RollResponse::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&id_)) + sizeof(level_));
  _cached_size_ = 0;
}

RollResponse::~RollResponse() {
  // @@protoc_insertion_point(destructor:RollResponse)
  SharedDtor();
}

void RollResponse::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RollResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RollResponse::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RollResponse& RollResponse::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsRollResponse();
  return *internal_default_instance();
}

RollResponse* RollResponse::New(::google::protobuf::Arena* arena) const {
  RollResponse* n = new RollResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RollResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:RollResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&id_)) + sizeof(level_));
  _internal_metadata_.Clear();
}

bool RollResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RollResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RollResponse.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RollResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RollResponse)
  return false;
#undef DO_
}

void RollResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RollResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RollResponse.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // uint32 Level = 3;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RollResponse)
}

::google::protobuf::uint8* RollResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RollResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RollResponse.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // uint32 Level = 3;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RollResponse)
  return target;
}

size_t RollResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RollResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // uint32 Level = 3;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RollResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RollResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RollResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RollResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RollResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RollResponse)
    MergeFrom(*source);
  }
}

void RollResponse::MergeFrom(const RollResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RollResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
}

void RollResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RollResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RollResponse::CopyFrom(const RollResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RollResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RollResponse::IsInitialized() const {
  return true;
}

void RollResponse::Swap(RollResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RollResponse::InternalSwap(RollResponse* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(id_, other->id_);
  swap(level_, other->level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RollResponse::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TreeRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TreeRequest::kTreeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TreeRequest::TreeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsTreeRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TreeRequest)
}
TreeRequest::TreeRequest(const TreeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tree_ = from.tree_;
  // @@protoc_insertion_point(copy_constructor:TreeRequest)
}

void TreeRequest::SharedCtor() {
  tree_ = false;
  _cached_size_ = 0;
}

TreeRequest::~TreeRequest() {
  // @@protoc_insertion_point(destructor:TreeRequest)
  SharedDtor();
}

void TreeRequest::SharedDtor() {
}

void TreeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TreeRequest::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TreeRequest& TreeRequest::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsTreeRequest();
  return *internal_default_instance();
}

TreeRequest* TreeRequest::New(::google::protobuf::Arena* arena) const {
  TreeRequest* n = new TreeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TreeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:TreeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tree_ = false;
  _internal_metadata_.Clear();
}

bool TreeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TreeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool Tree = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &tree_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TreeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TreeRequest)
  return false;
#undef DO_
}

void TreeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TreeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Tree = 1;
  if (this->tree() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->tree(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TreeRequest)
}

::google::protobuf::uint8* TreeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TreeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Tree = 1;
  if (this->tree() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->tree(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TreeRequest)
  return target;
}

size_t TreeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TreeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool Tree = 1;
  if (this->tree() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TreeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TreeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TreeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TreeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TreeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TreeRequest)
    MergeFrom(*source);
  }
}

void TreeRequest::MergeFrom(const TreeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TreeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tree() != 0) {
    set_tree(from.tree());
  }
}

void TreeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TreeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TreeRequest::CopyFrom(const TreeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TreeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TreeRequest::IsInitialized() const {
  return true;
}

void TreeRequest::Swap(TreeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TreeRequest::InternalSwap(TreeRequest* other) {
  using std::swap;
  swap(tree_, other->tree_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TreeRequest::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TreeResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TreeResponse::kLevelFieldNumber;
const int TreeResponse::kHightFieldNumber;
const int TreeResponse::kProdGoldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TreeResponse::TreeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsTreeResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TreeResponse)
}
TreeResponse::TreeResponse(const TreeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&level_, &from.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&prodgold_) -
    reinterpret_cast<char*>(&level_)) + sizeof(prodgold_));
  // @@protoc_insertion_point(copy_constructor:TreeResponse)
}

void TreeResponse::SharedCtor() {
  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prodgold_) -
      reinterpret_cast<char*>(&level_)) + sizeof(prodgold_));
  _cached_size_ = 0;
}

TreeResponse::~TreeResponse() {
  // @@protoc_insertion_point(destructor:TreeResponse)
  SharedDtor();
}

void TreeResponse::SharedDtor() {
}

void TreeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TreeResponse::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TreeResponse& TreeResponse::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsTreeResponse();
  return *internal_default_instance();
}

TreeResponse* TreeResponse::New(::google::protobuf::Arena* arena) const {
  TreeResponse* n = new TreeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TreeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:TreeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prodgold_) -
      reinterpret_cast<char*>(&level_)) + sizeof(prodgold_));
  _internal_metadata_.Clear();
}

bool TreeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TreeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 Level = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Hight = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ProdGold = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prodgold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TreeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TreeResponse)
  return false;
#undef DO_
}

void TreeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TreeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Level = 1;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->level(), output);
  }

  // uint32 Hight = 2;
  if (this->hight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hight(), output);
  }

  // uint32 ProdGold = 4;
  if (this->prodgold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->prodgold(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TreeResponse)
}

::google::protobuf::uint8* TreeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TreeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Level = 1;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->level(), target);
  }

  // uint32 Hight = 2;
  if (this->hight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hight(), target);
  }

  // uint32 ProdGold = 4;
  if (this->prodgold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->prodgold(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TreeResponse)
  return target;
}

size_t TreeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TreeResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 Level = 1;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // uint32 Hight = 2;
  if (this->hight() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hight());
  }

  // uint32 ProdGold = 4;
  if (this->prodgold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prodgold());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TreeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TreeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TreeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TreeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TreeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TreeResponse)
    MergeFrom(*source);
  }
}

void TreeResponse::MergeFrom(const TreeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TreeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.hight() != 0) {
    set_hight(from.hight());
  }
  if (from.prodgold() != 0) {
    set_prodgold(from.prodgold());
  }
}

void TreeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TreeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TreeResponse::CopyFrom(const TreeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TreeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TreeResponse::IsInitialized() const {
  return true;
}

void TreeResponse::Swap(TreeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TreeResponse::InternalSwap(TreeResponse* other) {
  using std::swap;
  swap(level_, other->level_);
  swap(hight_, other->hight_);
  swap(prodgold_, other->prodgold_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TreeResponse::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResourceRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResourceRequest::kResourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResourceRequest::ResourceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsResourceRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ResourceRequest)
}
ResourceRequest::ResourceRequest(const ResourceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  resource_ = from.resource_;
  // @@protoc_insertion_point(copy_constructor:ResourceRequest)
}

void ResourceRequest::SharedCtor() {
  resource_ = false;
  _cached_size_ = 0;
}

ResourceRequest::~ResourceRequest() {
  // @@protoc_insertion_point(destructor:ResourceRequest)
  SharedDtor();
}

void ResourceRequest::SharedDtor() {
}

void ResourceRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResourceRequest::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResourceRequest& ResourceRequest::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsResourceRequest();
  return *internal_default_instance();
}

ResourceRequest* ResourceRequest::New(::google::protobuf::Arena* arena) const {
  ResourceRequest* n = new ResourceRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResourceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ResourceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_ = false;
  _internal_metadata_.Clear();
}

bool ResourceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ResourceRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool resource = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &resource_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ResourceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ResourceRequest)
  return false;
#undef DO_
}

void ResourceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ResourceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool resource = 1;
  if (this->resource() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->resource(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ResourceRequest)
}

::google::protobuf::uint8* ResourceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ResourceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool resource = 1;
  if (this->resource() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->resource(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResourceRequest)
  return target;
}

size_t ResourceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ResourceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool resource = 1;
  if (this->resource() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResourceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ResourceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ResourceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResourceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ResourceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ResourceRequest)
    MergeFrom(*source);
  }
}

void ResourceRequest::MergeFrom(const ResourceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResourceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.resource() != 0) {
    set_resource(from.resource());
  }
}

void ResourceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ResourceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceRequest::CopyFrom(const ResourceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResourceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceRequest::IsInitialized() const {
  return true;
}

void ResourceRequest::Swap(ResourceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResourceRequest::InternalSwap(ResourceRequest* other) {
  using std::swap;
  swap(resource_, other->resource_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResourceRequest::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResourceResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResourceResponse::kGoldFieldNumber;
const int ResourceResponse::kWaterFieldNumber;
const int ResourceResponse::kSunShineFieldNumber;
const int ResourceResponse::kDiamondFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResourceResponse::ResourceResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsResourceResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ResourceResponse)
}
ResourceResponse::ResourceResponse(const ResourceResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gold_, &from.gold_,
    static_cast<size_t>(reinterpret_cast<char*>(&diamond_) -
    reinterpret_cast<char*>(&gold_)) + sizeof(diamond_));
  // @@protoc_insertion_point(copy_constructor:ResourceResponse)
}

void ResourceResponse::SharedCtor() {
  ::memset(&gold_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&diamond_) -
      reinterpret_cast<char*>(&gold_)) + sizeof(diamond_));
  _cached_size_ = 0;
}

ResourceResponse::~ResourceResponse() {
  // @@protoc_insertion_point(destructor:ResourceResponse)
  SharedDtor();
}

void ResourceResponse::SharedDtor() {
}

void ResourceResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResourceResponse::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResourceResponse& ResourceResponse::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsResourceResponse();
  return *internal_default_instance();
}

ResourceResponse* ResourceResponse::New(::google::protobuf::Arena* arena) const {
  ResourceResponse* n = new ResourceResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResourceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ResourceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&gold_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&diamond_) -
      reinterpret_cast<char*>(&gold_)) + sizeof(diamond_));
  _internal_metadata_.Clear();
}

bool ResourceResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ResourceResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 Gold = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Water = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &water_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SunShine = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sunshine_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Diamond = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &diamond_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ResourceResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ResourceResponse)
  return false;
#undef DO_
}

void ResourceResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ResourceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Gold = 1;
  if (this->gold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gold(), output);
  }

  // uint32 Water = 2;
  if (this->water() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->water(), output);
  }

  // uint32 SunShine = 3;
  if (this->sunshine() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->sunshine(), output);
  }

  // uint32 Diamond = 4;
  if (this->diamond() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->diamond(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ResourceResponse)
}

::google::protobuf::uint8* ResourceResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ResourceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Gold = 1;
  if (this->gold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gold(), target);
  }

  // uint32 Water = 2;
  if (this->water() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->water(), target);
  }

  // uint32 SunShine = 3;
  if (this->sunshine() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->sunshine(), target);
  }

  // uint32 Diamond = 4;
  if (this->diamond() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->diamond(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResourceResponse)
  return target;
}

size_t ResourceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ResourceResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 Gold = 1;
  if (this->gold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gold());
  }

  // uint32 Water = 2;
  if (this->water() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->water());
  }

  // uint32 SunShine = 3;
  if (this->sunshine() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sunshine());
  }

  // uint32 Diamond = 4;
  if (this->diamond() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->diamond());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResourceResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ResourceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ResourceResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResourceResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ResourceResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ResourceResponse)
    MergeFrom(*source);
  }
}

void ResourceResponse::MergeFrom(const ResourceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResourceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gold() != 0) {
    set_gold(from.gold());
  }
  if (from.water() != 0) {
    set_water(from.water());
  }
  if (from.sunshine() != 0) {
    set_sunshine(from.sunshine());
  }
  if (from.diamond() != 0) {
    set_diamond(from.diamond());
  }
}

void ResourceResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ResourceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceResponse::CopyFrom(const ResourceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResourceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceResponse::IsInitialized() const {
  return true;
}

void ResourceResponse::Swap(ResourceResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResourceResponse::InternalSwap(ResourceResponse* other) {
  using std::swap;
  swap(gold_, other->gold_);
  swap(water_, other->water_);
  swap(sunshine_, other->sunshine_);
  swap(diamond_, other->diamond_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResourceResponse::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TasksRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TasksRequest::kTasksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TasksRequest::TasksRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsTasksRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TasksRequest)
}
TasksRequest::TasksRequest(const TasksRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tasks_ = from.tasks_;
  // @@protoc_insertion_point(copy_constructor:TasksRequest)
}

void TasksRequest::SharedCtor() {
  tasks_ = false;
  _cached_size_ = 0;
}

TasksRequest::~TasksRequest() {
  // @@protoc_insertion_point(destructor:TasksRequest)
  SharedDtor();
}

void TasksRequest::SharedDtor() {
}

void TasksRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TasksRequest::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TasksRequest& TasksRequest::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsTasksRequest();
  return *internal_default_instance();
}

TasksRequest* TasksRequest::New(::google::protobuf::Arena* arena) const {
  TasksRequest* n = new TasksRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TasksRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:TasksRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tasks_ = false;
  _internal_metadata_.Clear();
}

bool TasksRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TasksRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool Tasks = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &tasks_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TasksRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TasksRequest)
  return false;
#undef DO_
}

void TasksRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TasksRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Tasks = 1;
  if (this->tasks() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->tasks(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TasksRequest)
}

::google::protobuf::uint8* TasksRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TasksRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Tasks = 1;
  if (this->tasks() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->tasks(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TasksRequest)
  return target;
}

size_t TasksRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TasksRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool Tasks = 1;
  if (this->tasks() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TasksRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TasksRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TasksRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TasksRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TasksRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TasksRequest)
    MergeFrom(*source);
  }
}

void TasksRequest::MergeFrom(const TasksRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TasksRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tasks() != 0) {
    set_tasks(from.tasks());
  }
}

void TasksRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TasksRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TasksRequest::CopyFrom(const TasksRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TasksRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TasksRequest::IsInitialized() const {
  return true;
}

void TasksRequest::Swap(TasksRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TasksRequest::InternalSwap(TasksRequest* other) {
  using std::swap;
  swap(tasks_, other->tasks_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TasksRequest::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TasksResponse::InitAsDefaultInstance() {
  ::_TasksResponse_default_instance_._instance.get_mutable()->prize1_ = const_cast< ::Prize*>(
      ::Prize::internal_default_instance());
  ::_TasksResponse_default_instance_._instance.get_mutable()->prize2_ = const_cast< ::Prize*>(
      ::Prize::internal_default_instance());
  ::_TasksResponse_default_instance_._instance.get_mutable()->prize3_ = const_cast< ::Prize*>(
      ::Prize::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TasksResponse::kIdFieldNumber;
const int TasksResponse::kTitleFieldNumber;
const int TasksResponse::kDetailsFieldNumber;
const int TasksResponse::kTypeFieldNumber;
const int TasksResponse::kPrize1FieldNumber;
const int TasksResponse::kPrize2FieldNumber;
const int TasksResponse::kPrize3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TasksResponse::TasksResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsTasksResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TasksResponse)
}
TasksResponse::TasksResponse(const TasksResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  details_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.details().size() > 0) {
    details_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.details_);
  }
  if (from.has_prize1()) {
    prize1_ = new ::Prize(*from.prize1_);
  } else {
    prize1_ = NULL;
  }
  if (from.has_prize2()) {
    prize2_ = new ::Prize(*from.prize2_);
  } else {
    prize2_ = NULL;
  }
  if (from.has_prize3()) {
    prize3_ = new ::Prize(*from.prize3_);
  } else {
    prize3_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:TasksResponse)
}

void TasksResponse::SharedCtor() {
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  details_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&prize1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&prize1_)) + sizeof(type_));
  _cached_size_ = 0;
}

TasksResponse::~TasksResponse() {
  // @@protoc_insertion_point(destructor:TasksResponse)
  SharedDtor();
}

void TasksResponse::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  details_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete prize1_;
  if (this != internal_default_instance()) delete prize2_;
  if (this != internal_default_instance()) delete prize3_;
}

void TasksResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TasksResponse::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TasksResponse& TasksResponse::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsTasksResponse();
  return *internal_default_instance();
}

TasksResponse* TasksResponse::New(::google::protobuf::Arena* arena) const {
  TasksResponse* n = new TasksResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TasksResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:TasksResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  details_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && prize1_ != NULL) {
    delete prize1_;
  }
  prize1_ = NULL;
  if (GetArenaNoVirtual() == NULL && prize2_ != NULL) {
    delete prize2_;
  }
  prize2_ = NULL;
  if (GetArenaNoVirtual() == NULL && prize3_ != NULL) {
    delete prize3_;
  }
  prize3_ = NULL;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool TasksResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TasksResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TasksResponse.Title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Details = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_details()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->details().data(), static_cast<int>(this->details().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TasksResponse.Details"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TasksResponse.TaskType Type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::TasksResponse_TaskType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Prize Prize1 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_prize1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Prize Prize2 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_prize2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Prize Prize3 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_prize3()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TasksResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TasksResponse)
  return false;
#undef DO_
}

void TasksResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TasksResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // string Title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TasksResponse.Title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // string Details = 3;
  if (this->details().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->details().data(), static_cast<int>(this->details().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TasksResponse.Details");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->details(), output);
  }

  // .TasksResponse.TaskType Type = 4;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->type(), output);
  }

  // .Prize Prize1 = 5;
  if (this->has_prize1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->prize1_, output);
  }

  // .Prize Prize2 = 6;
  if (this->has_prize2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->prize2_, output);
  }

  // .Prize Prize3 = 7;
  if (this->has_prize3()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->prize3_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TasksResponse)
}

::google::protobuf::uint8* TasksResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TasksResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // string Title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TasksResponse.Title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // string Details = 3;
  if (this->details().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->details().data(), static_cast<int>(this->details().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TasksResponse.Details");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->details(), target);
  }

  // .TasksResponse.TaskType Type = 4;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->type(), target);
  }

  // .Prize Prize1 = 5;
  if (this->has_prize1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->prize1_, deterministic, target);
  }

  // .Prize Prize2 = 6;
  if (this->has_prize2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->prize2_, deterministic, target);
  }

  // .Prize Prize3 = 7;
  if (this->has_prize3()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->prize3_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TasksResponse)
  return target;
}

size_t TasksResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TasksResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string Details = 3;
  if (this->details().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->details());
  }

  // .Prize Prize1 = 5;
  if (this->has_prize1()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->prize1_);
  }

  // .Prize Prize2 = 6;
  if (this->has_prize2()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->prize2_);
  }

  // .Prize Prize3 = 7;
  if (this->has_prize3()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->prize3_);
  }

  // uint32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // .TasksResponse.TaskType Type = 4;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TasksResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TasksResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TasksResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TasksResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TasksResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TasksResponse)
    MergeFrom(*source);
  }
}

void TasksResponse::MergeFrom(const TasksResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TasksResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.details().size() > 0) {

    details_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.details_);
  }
  if (from.has_prize1()) {
    mutable_prize1()->::Prize::MergeFrom(from.prize1());
  }
  if (from.has_prize2()) {
    mutable_prize2()->::Prize::MergeFrom(from.prize2());
  }
  if (from.has_prize3()) {
    mutable_prize3()->::Prize::MergeFrom(from.prize3());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void TasksResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TasksResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TasksResponse::CopyFrom(const TasksResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TasksResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TasksResponse::IsInitialized() const {
  return true;
}

void TasksResponse::Swap(TasksResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TasksResponse::InternalSwap(TasksResponse* other) {
  using std::swap;
  title_.Swap(&other->title_);
  details_.Swap(&other->details_);
  swap(prize1_, other->prize1_);
  swap(prize2_, other->prize2_);
  swap(prize3_, other->prize3_);
  swap(id_, other->id_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TasksResponse::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Prize::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Prize::kIdFieldNumber;
const int Prize::kNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Prize::Prize()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsPrize();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Prize)
}
Prize::Prize(const Prize& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&number_) -
    reinterpret_cast<char*>(&id_)) + sizeof(number_));
  // @@protoc_insertion_point(copy_constructor:Prize)
}

void Prize::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&number_) -
      reinterpret_cast<char*>(&id_)) + sizeof(number_));
  _cached_size_ = 0;
}

Prize::~Prize() {
  // @@protoc_insertion_point(destructor:Prize)
  SharedDtor();
}

void Prize::SharedDtor() {
}

void Prize::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Prize::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Prize& Prize::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsPrize();
  return *internal_default_instance();
}

Prize* Prize::New(::google::protobuf::Arena* arena) const {
  Prize* n = new Prize;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Prize::Clear() {
// @@protoc_insertion_point(message_clear_start:Prize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&number_) -
      reinterpret_cast<char*>(&id_)) + sizeof(number_));
  _internal_metadata_.Clear();
}

bool Prize::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Prize)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Prize)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Prize)
  return false;
#undef DO_
}

void Prize::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Prize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // uint32 Number = 2;
  if (this->number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->number(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Prize)
}

::google::protobuf::uint8* Prize::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Prize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // uint32 Number = 2;
  if (this->number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->number(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Prize)
  return target;
}

size_t Prize::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Prize)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // uint32 Number = 2;
  if (this->number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Prize::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Prize)
  GOOGLE_DCHECK_NE(&from, this);
  const Prize* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Prize>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Prize)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Prize)
    MergeFrom(*source);
  }
}

void Prize::MergeFrom(const Prize& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Prize)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.number() != 0) {
    set_number(from.number());
  }
}

void Prize::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Prize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Prize::CopyFrom(const Prize& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Prize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Prize::IsInitialized() const {
  return true;
}

void Prize::Swap(Prize* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Prize::InternalSwap(Prize* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(number_, other->number_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Prize::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MailsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MailsRequest::kMailsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MailsRequest::MailsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsMailsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MailsRequest)
}
MailsRequest::MailsRequest(const MailsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mails_ = from.mails_;
  // @@protoc_insertion_point(copy_constructor:MailsRequest)
}

void MailsRequest::SharedCtor() {
  mails_ = false;
  _cached_size_ = 0;
}

MailsRequest::~MailsRequest() {
  // @@protoc_insertion_point(destructor:MailsRequest)
  SharedDtor();
}

void MailsRequest::SharedDtor() {
}

void MailsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MailsRequest::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MailsRequest& MailsRequest::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsMailsRequest();
  return *internal_default_instance();
}

MailsRequest* MailsRequest::New(::google::protobuf::Arena* arena) const {
  MailsRequest* n = new MailsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MailsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:MailsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mails_ = false;
  _internal_metadata_.Clear();
}

bool MailsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MailsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool Mails = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &mails_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MailsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MailsRequest)
  return false;
#undef DO_
}

void MailsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MailsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Mails = 1;
  if (this->mails() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->mails(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MailsRequest)
}

::google::protobuf::uint8* MailsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MailsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Mails = 1;
  if (this->mails() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->mails(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MailsRequest)
  return target;
}

size_t MailsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MailsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool Mails = 1;
  if (this->mails() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MailsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MailsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MailsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MailsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MailsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MailsRequest)
    MergeFrom(*source);
  }
}

void MailsRequest::MergeFrom(const MailsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MailsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mails() != 0) {
    set_mails(from.mails());
  }
}

void MailsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MailsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailsRequest::CopyFrom(const MailsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MailsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailsRequest::IsInitialized() const {
  return true;
}

void MailsRequest::Swap(MailsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MailsRequest::InternalSwap(MailsRequest* other) {
  using std::swap;
  swap(mails_, other->mails_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MailsRequest::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MailsResponse::InitAsDefaultInstance() {
  ::_MailsResponse_default_instance_._instance.get_mutable()->prize1_ = const_cast< ::Prize*>(
      ::Prize::internal_default_instance());
  ::_MailsResponse_default_instance_._instance.get_mutable()->prize2_ = const_cast< ::Prize*>(
      ::Prize::internal_default_instance());
  ::_MailsResponse_default_instance_._instance.get_mutable()->prize3_ = const_cast< ::Prize*>(
      ::Prize::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MailsResponse::kIdFieldNumber;
const int MailsResponse::kTitleFieldNumber;
const int MailsResponse::kDetailsFieldNumber;
const int MailsResponse::kReceivedFieldNumber;
const int MailsResponse::kPrize1FieldNumber;
const int MailsResponse::kPrize2FieldNumber;
const int MailsResponse::kPrize3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MailsResponse::MailsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsMailsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MailsResponse)
}
MailsResponse::MailsResponse(const MailsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  details_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.details().size() > 0) {
    details_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.details_);
  }
  if (from.has_prize1()) {
    prize1_ = new ::Prize(*from.prize1_);
  } else {
    prize1_ = NULL;
  }
  if (from.has_prize2()) {
    prize2_ = new ::Prize(*from.prize2_);
  } else {
    prize2_ = NULL;
  }
  if (from.has_prize3()) {
    prize3_ = new ::Prize(*from.prize3_);
  } else {
    prize3_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&received_) -
    reinterpret_cast<char*>(&id_)) + sizeof(received_));
  // @@protoc_insertion_point(copy_constructor:MailsResponse)
}

void MailsResponse::SharedCtor() {
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  details_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&prize1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&received_) -
      reinterpret_cast<char*>(&prize1_)) + sizeof(received_));
  _cached_size_ = 0;
}

MailsResponse::~MailsResponse() {
  // @@protoc_insertion_point(destructor:MailsResponse)
  SharedDtor();
}

void MailsResponse::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  details_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete prize1_;
  if (this != internal_default_instance()) delete prize2_;
  if (this != internal_default_instance()) delete prize3_;
}

void MailsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MailsResponse::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MailsResponse& MailsResponse::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsMailsResponse();
  return *internal_default_instance();
}

MailsResponse* MailsResponse::New(::google::protobuf::Arena* arena) const {
  MailsResponse* n = new MailsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MailsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MailsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  details_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && prize1_ != NULL) {
    delete prize1_;
  }
  prize1_ = NULL;
  if (GetArenaNoVirtual() == NULL && prize2_ != NULL) {
    delete prize2_;
  }
  prize2_ = NULL;
  if (GetArenaNoVirtual() == NULL && prize3_ != NULL) {
    delete prize3_;
  }
  prize3_ = NULL;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&received_) -
      reinterpret_cast<char*>(&id_)) + sizeof(received_));
  _internal_metadata_.Clear();
}

bool MailsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MailsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MailsResponse.Title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Details = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_details()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->details().data(), static_cast<int>(this->details().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MailsResponse.Details"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool Received = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &received_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Prize Prize1 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_prize1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Prize Prize2 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_prize2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Prize Prize3 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_prize3()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MailsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MailsResponse)
  return false;
#undef DO_
}

void MailsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MailsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // string Title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MailsResponse.Title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // string Details = 3;
  if (this->details().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->details().data(), static_cast<int>(this->details().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MailsResponse.Details");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->details(), output);
  }

  // bool Received = 4;
  if (this->received() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->received(), output);
  }

  // .Prize Prize1 = 5;
  if (this->has_prize1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->prize1_, output);
  }

  // .Prize Prize2 = 6;
  if (this->has_prize2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->prize2_, output);
  }

  // .Prize Prize3 = 7;
  if (this->has_prize3()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->prize3_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MailsResponse)
}

::google::protobuf::uint8* MailsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MailsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // string Title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MailsResponse.Title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // string Details = 3;
  if (this->details().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->details().data(), static_cast<int>(this->details().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MailsResponse.Details");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->details(), target);
  }

  // bool Received = 4;
  if (this->received() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->received(), target);
  }

  // .Prize Prize1 = 5;
  if (this->has_prize1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->prize1_, deterministic, target);
  }

  // .Prize Prize2 = 6;
  if (this->has_prize2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->prize2_, deterministic, target);
  }

  // .Prize Prize3 = 7;
  if (this->has_prize3()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->prize3_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MailsResponse)
  return target;
}

size_t MailsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MailsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string Details = 3;
  if (this->details().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->details());
  }

  // .Prize Prize1 = 5;
  if (this->has_prize1()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->prize1_);
  }

  // .Prize Prize2 = 6;
  if (this->has_prize2()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->prize2_);
  }

  // .Prize Prize3 = 7;
  if (this->has_prize3()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->prize3_);
  }

  // uint32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // bool Received = 4;
  if (this->received() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MailsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MailsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MailsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MailsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MailsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MailsResponse)
    MergeFrom(*source);
  }
}

void MailsResponse::MergeFrom(const MailsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MailsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.details().size() > 0) {

    details_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.details_);
  }
  if (from.has_prize1()) {
    mutable_prize1()->::Prize::MergeFrom(from.prize1());
  }
  if (from.has_prize2()) {
    mutable_prize2()->::Prize::MergeFrom(from.prize2());
  }
  if (from.has_prize3()) {
    mutable_prize3()->::Prize::MergeFrom(from.prize3());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.received() != 0) {
    set_received(from.received());
  }
}

void MailsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MailsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailsResponse::CopyFrom(const MailsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MailsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailsResponse::IsInitialized() const {
  return true;
}

void MailsResponse::Swap(MailsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MailsResponse::InternalSwap(MailsResponse* other) {
  using std::swap;
  title_.Swap(&other->title_);
  details_.Swap(&other->details_);
  swap(prize1_, other->prize1_);
  swap(prize2_, other->prize2_);
  swap(prize3_, other->prize3_);
  swap(id_, other->id_);
  swap(received_, other->received_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MailsResponse::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SunRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SunRequest::kSunFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SunRequest::SunRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsSunRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SunRequest)
}
SunRequest::SunRequest(const SunRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sun_ = from.sun_;
  // @@protoc_insertion_point(copy_constructor:SunRequest)
}

void SunRequest::SharedCtor() {
  sun_ = false;
  _cached_size_ = 0;
}

SunRequest::~SunRequest() {
  // @@protoc_insertion_point(destructor:SunRequest)
  SharedDtor();
}

void SunRequest::SharedDtor() {
}

void SunRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SunRequest::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SunRequest& SunRequest::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsSunRequest();
  return *internal_default_instance();
}

SunRequest* SunRequest::New(::google::protobuf::Arena* arena) const {
  SunRequest* n = new SunRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SunRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SunRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sun_ = false;
  _internal_metadata_.Clear();
}

bool SunRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SunRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool Sun = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sun_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SunRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SunRequest)
  return false;
#undef DO_
}

void SunRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SunRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Sun = 1;
  if (this->sun() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->sun(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SunRequest)
}

::google::protobuf::uint8* SunRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SunRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Sun = 1;
  if (this->sun() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->sun(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SunRequest)
  return target;
}

size_t SunRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SunRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool Sun = 1;
  if (this->sun() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SunRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SunRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SunRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SunRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SunRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SunRequest)
    MergeFrom(*source);
  }
}

void SunRequest::MergeFrom(const SunRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SunRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sun() != 0) {
    set_sun(from.sun());
  }
}

void SunRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SunRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SunRequest::CopyFrom(const SunRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SunRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SunRequest::IsInitialized() const {
  return true;
}

void SunRequest::Swap(SunRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SunRequest::InternalSwap(SunRequest* other) {
  using std::swap;
  swap(sun_, other->sun_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SunRequest::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SunResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SunResponse::kLevelFieldNumber;
const int SunResponse::kSunShineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SunResponse::SunResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsSunResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SunResponse)
}
SunResponse::SunResponse(const SunResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&level_, &from.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&sunshine_) -
    reinterpret_cast<char*>(&level_)) + sizeof(sunshine_));
  // @@protoc_insertion_point(copy_constructor:SunResponse)
}

void SunResponse::SharedCtor() {
  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sunshine_) -
      reinterpret_cast<char*>(&level_)) + sizeof(sunshine_));
  _cached_size_ = 0;
}

SunResponse::~SunResponse() {
  // @@protoc_insertion_point(destructor:SunResponse)
  SharedDtor();
}

void SunResponse::SharedDtor() {
}

void SunResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SunResponse::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SunResponse& SunResponse::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsSunResponse();
  return *internal_default_instance();
}

SunResponse* SunResponse::New(::google::protobuf::Arena* arena) const {
  SunResponse* n = new SunResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SunResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:SunResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sunshine_) -
      reinterpret_cast<char*>(&level_)) + sizeof(sunshine_));
  _internal_metadata_.Clear();
}

bool SunResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SunResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 Level = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SunShine = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sunshine_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SunResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SunResponse)
  return false;
#undef DO_
}

void SunResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SunResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Level = 1;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->level(), output);
  }

  // uint32 SunShine = 2;
  if (this->sunshine() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->sunshine(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SunResponse)
}

::google::protobuf::uint8* SunResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SunResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Level = 1;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->level(), target);
  }

  // uint32 SunShine = 2;
  if (this->sunshine() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->sunshine(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SunResponse)
  return target;
}

size_t SunResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SunResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 Level = 1;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // uint32 SunShine = 2;
  if (this->sunshine() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sunshine());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SunResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SunResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SunResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SunResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SunResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SunResponse)
    MergeFrom(*source);
  }
}

void SunResponse::MergeFrom(const SunResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SunResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.sunshine() != 0) {
    set_sunshine(from.sunshine());
  }
}

void SunResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SunResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SunResponse::CopyFrom(const SunResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SunResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SunResponse::IsInitialized() const {
  return true;
}

void SunResponse::Swap(SunResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SunResponse::InternalSwap(SunResponse* other) {
  using std::swap;
  swap(level_, other->level_);
  swap(sunshine_, other->sunshine_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SunResponse::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TreeEnchantmentRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TreeEnchantmentRequest::kWellFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TreeEnchantmentRequest::TreeEnchantmentRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsTreeEnchantmentRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TreeEnchantmentRequest)
}
TreeEnchantmentRequest::TreeEnchantmentRequest(const TreeEnchantmentRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  well_ = from.well_;
  // @@protoc_insertion_point(copy_constructor:TreeEnchantmentRequest)
}

void TreeEnchantmentRequest::SharedCtor() {
  well_ = false;
  _cached_size_ = 0;
}

TreeEnchantmentRequest::~TreeEnchantmentRequest() {
  // @@protoc_insertion_point(destructor:TreeEnchantmentRequest)
  SharedDtor();
}

void TreeEnchantmentRequest::SharedDtor() {
}

void TreeEnchantmentRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TreeEnchantmentRequest::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TreeEnchantmentRequest& TreeEnchantmentRequest::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsTreeEnchantmentRequest();
  return *internal_default_instance();
}

TreeEnchantmentRequest* TreeEnchantmentRequest::New(::google::protobuf::Arena* arena) const {
  TreeEnchantmentRequest* n = new TreeEnchantmentRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TreeEnchantmentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:TreeEnchantmentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  well_ = false;
  _internal_metadata_.Clear();
}

bool TreeEnchantmentRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TreeEnchantmentRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool Well = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &well_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TreeEnchantmentRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TreeEnchantmentRequest)
  return false;
#undef DO_
}

void TreeEnchantmentRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TreeEnchantmentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Well = 1;
  if (this->well() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->well(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TreeEnchantmentRequest)
}

::google::protobuf::uint8* TreeEnchantmentRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TreeEnchantmentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Well = 1;
  if (this->well() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->well(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TreeEnchantmentRequest)
  return target;
}

size_t TreeEnchantmentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TreeEnchantmentRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool Well = 1;
  if (this->well() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TreeEnchantmentRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TreeEnchantmentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TreeEnchantmentRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TreeEnchantmentRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TreeEnchantmentRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TreeEnchantmentRequest)
    MergeFrom(*source);
  }
}

void TreeEnchantmentRequest::MergeFrom(const TreeEnchantmentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TreeEnchantmentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.well() != 0) {
    set_well(from.well());
  }
}

void TreeEnchantmentRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TreeEnchantmentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TreeEnchantmentRequest::CopyFrom(const TreeEnchantmentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TreeEnchantmentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TreeEnchantmentRequest::IsInitialized() const {
  return true;
}

void TreeEnchantmentRequest::Swap(TreeEnchantmentRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TreeEnchantmentRequest::InternalSwap(TreeEnchantmentRequest* other) {
  using std::swap;
  swap(well_, other->well_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TreeEnchantmentRequest::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TreeEnchantmentResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TreeEnchantmentResponse::kLevelFieldNumber;
const int TreeEnchantmentResponse::kDefenseLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TreeEnchantmentResponse::TreeEnchantmentResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsTreeEnchantmentResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TreeEnchantmentResponse)
}
TreeEnchantmentResponse::TreeEnchantmentResponse(const TreeEnchantmentResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&level_, &from.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&defenselevel_) -
    reinterpret_cast<char*>(&level_)) + sizeof(defenselevel_));
  // @@protoc_insertion_point(copy_constructor:TreeEnchantmentResponse)
}

void TreeEnchantmentResponse::SharedCtor() {
  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&defenselevel_) -
      reinterpret_cast<char*>(&level_)) + sizeof(defenselevel_));
  _cached_size_ = 0;
}

TreeEnchantmentResponse::~TreeEnchantmentResponse() {
  // @@protoc_insertion_point(destructor:TreeEnchantmentResponse)
  SharedDtor();
}

void TreeEnchantmentResponse::SharedDtor() {
}

void TreeEnchantmentResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TreeEnchantmentResponse::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TreeEnchantmentResponse& TreeEnchantmentResponse::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsTreeEnchantmentResponse();
  return *internal_default_instance();
}

TreeEnchantmentResponse* TreeEnchantmentResponse::New(::google::protobuf::Arena* arena) const {
  TreeEnchantmentResponse* n = new TreeEnchantmentResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TreeEnchantmentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:TreeEnchantmentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&defenselevel_) -
      reinterpret_cast<char*>(&level_)) + sizeof(defenselevel_));
  _internal_metadata_.Clear();
}

bool TreeEnchantmentResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TreeEnchantmentResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 Level = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DefenseLevel = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &defenselevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TreeEnchantmentResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TreeEnchantmentResponse)
  return false;
#undef DO_
}

void TreeEnchantmentResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TreeEnchantmentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Level = 1;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->level(), output);
  }

  // uint32 DefenseLevel = 2;
  if (this->defenselevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->defenselevel(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TreeEnchantmentResponse)
}

::google::protobuf::uint8* TreeEnchantmentResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TreeEnchantmentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Level = 1;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->level(), target);
  }

  // uint32 DefenseLevel = 2;
  if (this->defenselevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->defenselevel(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TreeEnchantmentResponse)
  return target;
}

size_t TreeEnchantmentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TreeEnchantmentResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 Level = 1;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // uint32 DefenseLevel = 2;
  if (this->defenselevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->defenselevel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TreeEnchantmentResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TreeEnchantmentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TreeEnchantmentResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TreeEnchantmentResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TreeEnchantmentResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TreeEnchantmentResponse)
    MergeFrom(*source);
  }
}

void TreeEnchantmentResponse::MergeFrom(const TreeEnchantmentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TreeEnchantmentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.defenselevel() != 0) {
    set_defenselevel(from.defenselevel());
  }
}

void TreeEnchantmentResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TreeEnchantmentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TreeEnchantmentResponse::CopyFrom(const TreeEnchantmentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TreeEnchantmentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TreeEnchantmentResponse::IsInitialized() const {
  return true;
}

void TreeEnchantmentResponse::Swap(TreeEnchantmentResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TreeEnchantmentResponse::InternalSwap(TreeEnchantmentResponse* other) {
  using std::swap;
  swap(level_, other->level_);
  swap(defenselevel_, other->defenselevel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TreeEnchantmentResponse::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StoreAllRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoreAllRequest::kStoreAllFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoreAllRequest::StoreAllRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsStoreAllRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:StoreAllRequest)
}
StoreAllRequest::StoreAllRequest(const StoreAllRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  storeall_ = from.storeall_;
  // @@protoc_insertion_point(copy_constructor:StoreAllRequest)
}

void StoreAllRequest::SharedCtor() {
  storeall_ = false;
  _cached_size_ = 0;
}

StoreAllRequest::~StoreAllRequest() {
  // @@protoc_insertion_point(destructor:StoreAllRequest)
  SharedDtor();
}

void StoreAllRequest::SharedDtor() {
}

void StoreAllRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoreAllRequest::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StoreAllRequest& StoreAllRequest::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsStoreAllRequest();
  return *internal_default_instance();
}

StoreAllRequest* StoreAllRequest::New(::google::protobuf::Arena* arena) const {
  StoreAllRequest* n = new StoreAllRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StoreAllRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:StoreAllRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  storeall_ = false;
  _internal_metadata_.Clear();
}

bool StoreAllRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StoreAllRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool StoreAll = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &storeall_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StoreAllRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StoreAllRequest)
  return false;
#undef DO_
}

void StoreAllRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StoreAllRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool StoreAll = 1;
  if (this->storeall() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->storeall(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:StoreAllRequest)
}

::google::protobuf::uint8* StoreAllRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:StoreAllRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool StoreAll = 1;
  if (this->storeall() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->storeall(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StoreAllRequest)
  return target;
}

size_t StoreAllRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StoreAllRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool StoreAll = 1;
  if (this->storeall() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoreAllRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StoreAllRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StoreAllRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StoreAllRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StoreAllRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StoreAllRequest)
    MergeFrom(*source);
  }
}

void StoreAllRequest::MergeFrom(const StoreAllRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StoreAllRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.storeall() != 0) {
    set_storeall(from.storeall());
  }
}

void StoreAllRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StoreAllRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoreAllRequest::CopyFrom(const StoreAllRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StoreAllRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoreAllRequest::IsInitialized() const {
  return true;
}

void StoreAllRequest::Swap(StoreAllRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoreAllRequest::InternalSwap(StoreAllRequest* other) {
  using std::swap;
  swap(storeall_, other->storeall_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StoreAllRequest::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StoreAllResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoreAllResponse::kIdFieldNumber;
const int StoreAllResponse::kGoldPriceFieldNumber;
const int StoreAllResponse::kDiaPriceFieldNumber;
const int StoreAllResponse::kDiscountFieldNumber;
const int StoreAllResponse::kTypeFieldNumber;
const int StoreAllResponse::kDescribeFieldNumber;
const int StoreAllResponse::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoreAllResponse::StoreAllResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsStoreAllResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:StoreAllResponse)
}
StoreAllResponse::StoreAllResponse(const StoreAllResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  describe_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.describe().size() > 0) {
    describe_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.describe_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:StoreAllResponse)
}

void StoreAllResponse::SharedCtor() {
  describe_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
  _cached_size_ = 0;
}

StoreAllResponse::~StoreAllResponse() {
  // @@protoc_insertion_point(destructor:StoreAllResponse)
  SharedDtor();
}

void StoreAllResponse::SharedDtor() {
  describe_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StoreAllResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoreAllResponse::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StoreAllResponse& StoreAllResponse::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsStoreAllResponse();
  return *internal_default_instance();
}

StoreAllResponse* StoreAllResponse::New(::google::protobuf::Arena* arena) const {
  StoreAllResponse* n = new StoreAllResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StoreAllResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:StoreAllResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  describe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool StoreAllResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StoreAllResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 GoldPrice = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goldprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DiaPrice = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &diaprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Discount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &discount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .StdMode Type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::StdMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Describe = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_describe()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->describe().data(), static_cast<int>(this->describe().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "StoreAllResponse.Describe"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "StoreAllResponse.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StoreAllResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StoreAllResponse)
  return false;
#undef DO_
}

void StoreAllResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StoreAllResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // uint32 GoldPrice = 2;
  if (this->goldprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->goldprice(), output);
  }

  // uint32 DiaPrice = 3;
  if (this->diaprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->diaprice(), output);
  }

  // uint32 Discount = 4;
  if (this->discount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->discount(), output);
  }

  // .StdMode Type = 5;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->type(), output);
  }

  // string Describe = 6;
  if (this->describe().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->describe().data(), static_cast<int>(this->describe().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StoreAllResponse.Describe");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->describe(), output);
  }

  // string Name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StoreAllResponse.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:StoreAllResponse)
}

::google::protobuf::uint8* StoreAllResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:StoreAllResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // uint32 GoldPrice = 2;
  if (this->goldprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->goldprice(), target);
  }

  // uint32 DiaPrice = 3;
  if (this->diaprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->diaprice(), target);
  }

  // uint32 Discount = 4;
  if (this->discount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->discount(), target);
  }

  // .StdMode Type = 5;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->type(), target);
  }

  // string Describe = 6;
  if (this->describe().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->describe().data(), static_cast<int>(this->describe().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StoreAllResponse.Describe");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->describe(), target);
  }

  // string Name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StoreAllResponse.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StoreAllResponse)
  return target;
}

size_t StoreAllResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StoreAllResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Describe = 6;
  if (this->describe().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->describe());
  }

  // string Name = 7;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // uint32 GoldPrice = 2;
  if (this->goldprice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->goldprice());
  }

  // uint32 DiaPrice = 3;
  if (this->diaprice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->diaprice());
  }

  // uint32 Discount = 4;
  if (this->discount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->discount());
  }

  // .StdMode Type = 5;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoreAllResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StoreAllResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StoreAllResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StoreAllResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StoreAllResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StoreAllResponse)
    MergeFrom(*source);
  }
}

void StoreAllResponse::MergeFrom(const StoreAllResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StoreAllResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.describe().size() > 0) {

    describe_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.describe_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.goldprice() != 0) {
    set_goldprice(from.goldprice());
  }
  if (from.diaprice() != 0) {
    set_diaprice(from.diaprice());
  }
  if (from.discount() != 0) {
    set_discount(from.discount());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void StoreAllResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StoreAllResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoreAllResponse::CopyFrom(const StoreAllResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StoreAllResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoreAllResponse::IsInitialized() const {
  return true;
}

void StoreAllResponse::Swap(StoreAllResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoreAllResponse::InternalSwap(StoreAllResponse* other) {
  using std::swap;
  describe_.Swap(&other->describe_);
  name_.Swap(&other->name_);
  swap(id_, other->id_);
  swap(goldprice_, other->goldprice_);
  swap(diaprice_, other->diaprice_);
  swap(discount_, other->discount_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StoreAllResponse::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StoreEquRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoreEquRequest::kStoreEquFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoreEquRequest::StoreEquRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsStoreEquRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:StoreEquRequest)
}
StoreEquRequest::StoreEquRequest(const StoreEquRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  storeequ_ = from.storeequ_;
  // @@protoc_insertion_point(copy_constructor:StoreEquRequest)
}

void StoreEquRequest::SharedCtor() {
  storeequ_ = false;
  _cached_size_ = 0;
}

StoreEquRequest::~StoreEquRequest() {
  // @@protoc_insertion_point(destructor:StoreEquRequest)
  SharedDtor();
}

void StoreEquRequest::SharedDtor() {
}

void StoreEquRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoreEquRequest::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StoreEquRequest& StoreEquRequest::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsStoreEquRequest();
  return *internal_default_instance();
}

StoreEquRequest* StoreEquRequest::New(::google::protobuf::Arena* arena) const {
  StoreEquRequest* n = new StoreEquRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StoreEquRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:StoreEquRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  storeequ_ = false;
  _internal_metadata_.Clear();
}

bool StoreEquRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StoreEquRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool StoreEqu = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &storeequ_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StoreEquRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StoreEquRequest)
  return false;
#undef DO_
}

void StoreEquRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StoreEquRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool StoreEqu = 1;
  if (this->storeequ() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->storeequ(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:StoreEquRequest)
}

::google::protobuf::uint8* StoreEquRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:StoreEquRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool StoreEqu = 1;
  if (this->storeequ() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->storeequ(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StoreEquRequest)
  return target;
}

size_t StoreEquRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StoreEquRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool StoreEqu = 1;
  if (this->storeequ() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoreEquRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StoreEquRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StoreEquRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StoreEquRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StoreEquRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StoreEquRequest)
    MergeFrom(*source);
  }
}

void StoreEquRequest::MergeFrom(const StoreEquRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StoreEquRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.storeequ() != 0) {
    set_storeequ(from.storeequ());
  }
}

void StoreEquRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StoreEquRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoreEquRequest::CopyFrom(const StoreEquRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StoreEquRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoreEquRequest::IsInitialized() const {
  return true;
}

void StoreEquRequest::Swap(StoreEquRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoreEquRequest::InternalSwap(StoreEquRequest* other) {
  using std::swap;
  swap(storeequ_, other->storeequ_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StoreEquRequest::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StoreEquResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoreEquResponse::kIdFieldNumber;
const int StoreEquResponse::kGoldPriceFieldNumber;
const int StoreEquResponse::kDiaPriceFieldNumber;
const int StoreEquResponse::kDiscountFieldNumber;
const int StoreEquResponse::kTypeFieldNumber;
const int StoreEquResponse::kDescribeFieldNumber;
const int StoreEquResponse::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoreEquResponse::StoreEquResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsStoreEquResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:StoreEquResponse)
}
StoreEquResponse::StoreEquResponse(const StoreEquResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  describe_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.describe().size() > 0) {
    describe_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.describe_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:StoreEquResponse)
}

void StoreEquResponse::SharedCtor() {
  describe_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
  _cached_size_ = 0;
}

StoreEquResponse::~StoreEquResponse() {
  // @@protoc_insertion_point(destructor:StoreEquResponse)
  SharedDtor();
}

void StoreEquResponse::SharedDtor() {
  describe_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StoreEquResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoreEquResponse::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StoreEquResponse& StoreEquResponse::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsStoreEquResponse();
  return *internal_default_instance();
}

StoreEquResponse* StoreEquResponse::New(::google::protobuf::Arena* arena) const {
  StoreEquResponse* n = new StoreEquResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StoreEquResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:StoreEquResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  describe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool StoreEquResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StoreEquResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 GoldPrice = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goldprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DiaPrice = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &diaprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Discount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &discount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .StdMode Type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::StdMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Describe = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_describe()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->describe().data(), static_cast<int>(this->describe().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "StoreEquResponse.Describe"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "StoreEquResponse.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StoreEquResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StoreEquResponse)
  return false;
#undef DO_
}

void StoreEquResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StoreEquResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // uint32 GoldPrice = 2;
  if (this->goldprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->goldprice(), output);
  }

  // uint32 DiaPrice = 3;
  if (this->diaprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->diaprice(), output);
  }

  // uint32 Discount = 4;
  if (this->discount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->discount(), output);
  }

  // .StdMode Type = 5;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->type(), output);
  }

  // string Describe = 6;
  if (this->describe().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->describe().data(), static_cast<int>(this->describe().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StoreEquResponse.Describe");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->describe(), output);
  }

  // string Name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StoreEquResponse.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:StoreEquResponse)
}

::google::protobuf::uint8* StoreEquResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:StoreEquResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // uint32 GoldPrice = 2;
  if (this->goldprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->goldprice(), target);
  }

  // uint32 DiaPrice = 3;
  if (this->diaprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->diaprice(), target);
  }

  // uint32 Discount = 4;
  if (this->discount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->discount(), target);
  }

  // .StdMode Type = 5;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->type(), target);
  }

  // string Describe = 6;
  if (this->describe().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->describe().data(), static_cast<int>(this->describe().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StoreEquResponse.Describe");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->describe(), target);
  }

  // string Name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StoreEquResponse.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StoreEquResponse)
  return target;
}

size_t StoreEquResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StoreEquResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Describe = 6;
  if (this->describe().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->describe());
  }

  // string Name = 7;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // uint32 GoldPrice = 2;
  if (this->goldprice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->goldprice());
  }

  // uint32 DiaPrice = 3;
  if (this->diaprice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->diaprice());
  }

  // uint32 Discount = 4;
  if (this->discount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->discount());
  }

  // .StdMode Type = 5;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoreEquResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StoreEquResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StoreEquResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StoreEquResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StoreEquResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StoreEquResponse)
    MergeFrom(*source);
  }
}

void StoreEquResponse::MergeFrom(const StoreEquResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StoreEquResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.describe().size() > 0) {

    describe_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.describe_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.goldprice() != 0) {
    set_goldprice(from.goldprice());
  }
  if (from.diaprice() != 0) {
    set_diaprice(from.diaprice());
  }
  if (from.discount() != 0) {
    set_discount(from.discount());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void StoreEquResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StoreEquResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoreEquResponse::CopyFrom(const StoreEquResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StoreEquResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoreEquResponse::IsInitialized() const {
  return true;
}

void StoreEquResponse::Swap(StoreEquResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoreEquResponse::InternalSwap(StoreEquResponse* other) {
  using std::swap;
  describe_.Swap(&other->describe_);
  name_.Swap(&other->name_);
  swap(id_, other->id_);
  swap(goldprice_, other->goldprice_);
  swap(diaprice_, other->diaprice_);
  swap(discount_, other->discount_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StoreEquResponse::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StoreWaterRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoreWaterRequest::kStoreWaterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoreWaterRequest::StoreWaterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsStoreWaterRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:StoreWaterRequest)
}
StoreWaterRequest::StoreWaterRequest(const StoreWaterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  storewater_ = from.storewater_;
  // @@protoc_insertion_point(copy_constructor:StoreWaterRequest)
}

void StoreWaterRequest::SharedCtor() {
  storewater_ = false;
  _cached_size_ = 0;
}

StoreWaterRequest::~StoreWaterRequest() {
  // @@protoc_insertion_point(destructor:StoreWaterRequest)
  SharedDtor();
}

void StoreWaterRequest::SharedDtor() {
}

void StoreWaterRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoreWaterRequest::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StoreWaterRequest& StoreWaterRequest::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsStoreWaterRequest();
  return *internal_default_instance();
}

StoreWaterRequest* StoreWaterRequest::New(::google::protobuf::Arena* arena) const {
  StoreWaterRequest* n = new StoreWaterRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StoreWaterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:StoreWaterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  storewater_ = false;
  _internal_metadata_.Clear();
}

bool StoreWaterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StoreWaterRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool StoreWater = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &storewater_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StoreWaterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StoreWaterRequest)
  return false;
#undef DO_
}

void StoreWaterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StoreWaterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool StoreWater = 1;
  if (this->storewater() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->storewater(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:StoreWaterRequest)
}

::google::protobuf::uint8* StoreWaterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:StoreWaterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool StoreWater = 1;
  if (this->storewater() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->storewater(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StoreWaterRequest)
  return target;
}

size_t StoreWaterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StoreWaterRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool StoreWater = 1;
  if (this->storewater() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoreWaterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StoreWaterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StoreWaterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StoreWaterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StoreWaterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StoreWaterRequest)
    MergeFrom(*source);
  }
}

void StoreWaterRequest::MergeFrom(const StoreWaterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StoreWaterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.storewater() != 0) {
    set_storewater(from.storewater());
  }
}

void StoreWaterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StoreWaterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoreWaterRequest::CopyFrom(const StoreWaterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StoreWaterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoreWaterRequest::IsInitialized() const {
  return true;
}

void StoreWaterRequest::Swap(StoreWaterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoreWaterRequest::InternalSwap(StoreWaterRequest* other) {
  using std::swap;
  swap(storewater_, other->storewater_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StoreWaterRequest::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StoreWaterResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoreWaterResponse::kIdFieldNumber;
const int StoreWaterResponse::kGoldPriceFieldNumber;
const int StoreWaterResponse::kDiaPriceFieldNumber;
const int StoreWaterResponse::kDiscountFieldNumber;
const int StoreWaterResponse::kTypeFieldNumber;
const int StoreWaterResponse::kDescribeFieldNumber;
const int StoreWaterResponse::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoreWaterResponse::StoreWaterResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsStoreWaterResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:StoreWaterResponse)
}
StoreWaterResponse::StoreWaterResponse(const StoreWaterResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  describe_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.describe().size() > 0) {
    describe_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.describe_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:StoreWaterResponse)
}

void StoreWaterResponse::SharedCtor() {
  describe_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
  _cached_size_ = 0;
}

StoreWaterResponse::~StoreWaterResponse() {
  // @@protoc_insertion_point(destructor:StoreWaterResponse)
  SharedDtor();
}

void StoreWaterResponse::SharedDtor() {
  describe_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StoreWaterResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoreWaterResponse::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StoreWaterResponse& StoreWaterResponse::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsStoreWaterResponse();
  return *internal_default_instance();
}

StoreWaterResponse* StoreWaterResponse::New(::google::protobuf::Arena* arena) const {
  StoreWaterResponse* n = new StoreWaterResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StoreWaterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:StoreWaterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  describe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool StoreWaterResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StoreWaterResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 GoldPrice = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goldprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DiaPrice = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &diaprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Discount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &discount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .StdMode Type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::StdMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Describe = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_describe()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->describe().data(), static_cast<int>(this->describe().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "StoreWaterResponse.Describe"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "StoreWaterResponse.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StoreWaterResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StoreWaterResponse)
  return false;
#undef DO_
}

void StoreWaterResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StoreWaterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // uint32 GoldPrice = 2;
  if (this->goldprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->goldprice(), output);
  }

  // uint32 DiaPrice = 3;
  if (this->diaprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->diaprice(), output);
  }

  // uint32 Discount = 4;
  if (this->discount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->discount(), output);
  }

  // .StdMode Type = 5;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->type(), output);
  }

  // string Describe = 6;
  if (this->describe().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->describe().data(), static_cast<int>(this->describe().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StoreWaterResponse.Describe");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->describe(), output);
  }

  // string Name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StoreWaterResponse.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:StoreWaterResponse)
}

::google::protobuf::uint8* StoreWaterResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:StoreWaterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // uint32 GoldPrice = 2;
  if (this->goldprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->goldprice(), target);
  }

  // uint32 DiaPrice = 3;
  if (this->diaprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->diaprice(), target);
  }

  // uint32 Discount = 4;
  if (this->discount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->discount(), target);
  }

  // .StdMode Type = 5;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->type(), target);
  }

  // string Describe = 6;
  if (this->describe().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->describe().data(), static_cast<int>(this->describe().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StoreWaterResponse.Describe");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->describe(), target);
  }

  // string Name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StoreWaterResponse.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StoreWaterResponse)
  return target;
}

size_t StoreWaterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StoreWaterResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Describe = 6;
  if (this->describe().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->describe());
  }

  // string Name = 7;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // uint32 GoldPrice = 2;
  if (this->goldprice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->goldprice());
  }

  // uint32 DiaPrice = 3;
  if (this->diaprice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->diaprice());
  }

  // uint32 Discount = 4;
  if (this->discount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->discount());
  }

  // .StdMode Type = 5;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoreWaterResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StoreWaterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StoreWaterResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StoreWaterResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StoreWaterResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StoreWaterResponse)
    MergeFrom(*source);
  }
}

void StoreWaterResponse::MergeFrom(const StoreWaterResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StoreWaterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.describe().size() > 0) {

    describe_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.describe_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.goldprice() != 0) {
    set_goldprice(from.goldprice());
  }
  if (from.diaprice() != 0) {
    set_diaprice(from.diaprice());
  }
  if (from.discount() != 0) {
    set_discount(from.discount());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void StoreWaterResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StoreWaterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoreWaterResponse::CopyFrom(const StoreWaterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StoreWaterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoreWaterResponse::IsInitialized() const {
  return true;
}

void StoreWaterResponse::Swap(StoreWaterResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoreWaterResponse::InternalSwap(StoreWaterResponse* other) {
  using std::swap;
  describe_.Swap(&other->describe_);
  name_.Swap(&other->name_);
  swap(id_, other->id_);
  swap(goldprice_, other->goldprice_);
  swap(diaprice_, other->diaprice_);
  swap(discount_, other->discount_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StoreWaterResponse::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StoreSpePropsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoreSpePropsRequest::kStoreSpepropsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoreSpePropsRequest::StoreSpePropsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsStoreSpePropsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:StoreSpePropsRequest)
}
StoreSpePropsRequest::StoreSpePropsRequest(const StoreSpePropsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  storespeprops_ = from.storespeprops_;
  // @@protoc_insertion_point(copy_constructor:StoreSpePropsRequest)
}

void StoreSpePropsRequest::SharedCtor() {
  storespeprops_ = false;
  _cached_size_ = 0;
}

StoreSpePropsRequest::~StoreSpePropsRequest() {
  // @@protoc_insertion_point(destructor:StoreSpePropsRequest)
  SharedDtor();
}

void StoreSpePropsRequest::SharedDtor() {
}

void StoreSpePropsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoreSpePropsRequest::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StoreSpePropsRequest& StoreSpePropsRequest::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsStoreSpePropsRequest();
  return *internal_default_instance();
}

StoreSpePropsRequest* StoreSpePropsRequest::New(::google::protobuf::Arena* arena) const {
  StoreSpePropsRequest* n = new StoreSpePropsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StoreSpePropsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:StoreSpePropsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  storespeprops_ = false;
  _internal_metadata_.Clear();
}

bool StoreSpePropsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StoreSpePropsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool StoreSpeprops = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &storespeprops_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StoreSpePropsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StoreSpePropsRequest)
  return false;
#undef DO_
}

void StoreSpePropsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StoreSpePropsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool StoreSpeprops = 1;
  if (this->storespeprops() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->storespeprops(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:StoreSpePropsRequest)
}

::google::protobuf::uint8* StoreSpePropsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:StoreSpePropsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool StoreSpeprops = 1;
  if (this->storespeprops() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->storespeprops(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StoreSpePropsRequest)
  return target;
}

size_t StoreSpePropsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StoreSpePropsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool StoreSpeprops = 1;
  if (this->storespeprops() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoreSpePropsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StoreSpePropsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StoreSpePropsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StoreSpePropsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StoreSpePropsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StoreSpePropsRequest)
    MergeFrom(*source);
  }
}

void StoreSpePropsRequest::MergeFrom(const StoreSpePropsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StoreSpePropsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.storespeprops() != 0) {
    set_storespeprops(from.storespeprops());
  }
}

void StoreSpePropsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StoreSpePropsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoreSpePropsRequest::CopyFrom(const StoreSpePropsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StoreSpePropsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoreSpePropsRequest::IsInitialized() const {
  return true;
}

void StoreSpePropsRequest::Swap(StoreSpePropsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoreSpePropsRequest::InternalSwap(StoreSpePropsRequest* other) {
  using std::swap;
  swap(storespeprops_, other->storespeprops_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StoreSpePropsRequest::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StoreSpePropsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoreSpePropsResponse::kIdFieldNumber;
const int StoreSpePropsResponse::kGoldPriceFieldNumber;
const int StoreSpePropsResponse::kDiaPriceFieldNumber;
const int StoreSpePropsResponse::kDiscountFieldNumber;
const int StoreSpePropsResponse::kTypeFieldNumber;
const int StoreSpePropsResponse::kDescribeFieldNumber;
const int StoreSpePropsResponse::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoreSpePropsResponse::StoreSpePropsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsStoreSpePropsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:StoreSpePropsResponse)
}
StoreSpePropsResponse::StoreSpePropsResponse(const StoreSpePropsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  describe_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.describe().size() > 0) {
    describe_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.describe_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:StoreSpePropsResponse)
}

void StoreSpePropsResponse::SharedCtor() {
  describe_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
  _cached_size_ = 0;
}

StoreSpePropsResponse::~StoreSpePropsResponse() {
  // @@protoc_insertion_point(destructor:StoreSpePropsResponse)
  SharedDtor();
}

void StoreSpePropsResponse::SharedDtor() {
  describe_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StoreSpePropsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoreSpePropsResponse::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StoreSpePropsResponse& StoreSpePropsResponse::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsStoreSpePropsResponse();
  return *internal_default_instance();
}

StoreSpePropsResponse* StoreSpePropsResponse::New(::google::protobuf::Arena* arena) const {
  StoreSpePropsResponse* n = new StoreSpePropsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StoreSpePropsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:StoreSpePropsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  describe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool StoreSpePropsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StoreSpePropsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 GoldPrice = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goldprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DiaPrice = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &diaprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Discount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &discount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .StdMode Type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::StdMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Describe = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_describe()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->describe().data(), static_cast<int>(this->describe().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "StoreSpePropsResponse.Describe"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "StoreSpePropsResponse.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StoreSpePropsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StoreSpePropsResponse)
  return false;
#undef DO_
}

void StoreSpePropsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StoreSpePropsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // uint32 GoldPrice = 2;
  if (this->goldprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->goldprice(), output);
  }

  // uint32 DiaPrice = 3;
  if (this->diaprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->diaprice(), output);
  }

  // uint32 Discount = 4;
  if (this->discount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->discount(), output);
  }

  // .StdMode Type = 5;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->type(), output);
  }

  // string Describe = 6;
  if (this->describe().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->describe().data(), static_cast<int>(this->describe().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StoreSpePropsResponse.Describe");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->describe(), output);
  }

  // string Name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StoreSpePropsResponse.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:StoreSpePropsResponse)
}

::google::protobuf::uint8* StoreSpePropsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:StoreSpePropsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // uint32 GoldPrice = 2;
  if (this->goldprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->goldprice(), target);
  }

  // uint32 DiaPrice = 3;
  if (this->diaprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->diaprice(), target);
  }

  // uint32 Discount = 4;
  if (this->discount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->discount(), target);
  }

  // .StdMode Type = 5;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->type(), target);
  }

  // string Describe = 6;
  if (this->describe().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->describe().data(), static_cast<int>(this->describe().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StoreSpePropsResponse.Describe");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->describe(), target);
  }

  // string Name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StoreSpePropsResponse.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StoreSpePropsResponse)
  return target;
}

size_t StoreSpePropsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StoreSpePropsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Describe = 6;
  if (this->describe().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->describe());
  }

  // string Name = 7;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // uint32 GoldPrice = 2;
  if (this->goldprice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->goldprice());
  }

  // uint32 DiaPrice = 3;
  if (this->diaprice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->diaprice());
  }

  // uint32 Discount = 4;
  if (this->discount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->discount());
  }

  // .StdMode Type = 5;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoreSpePropsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StoreSpePropsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StoreSpePropsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StoreSpePropsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StoreSpePropsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StoreSpePropsResponse)
    MergeFrom(*source);
  }
}

void StoreSpePropsResponse::MergeFrom(const StoreSpePropsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StoreSpePropsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.describe().size() > 0) {

    describe_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.describe_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.goldprice() != 0) {
    set_goldprice(from.goldprice());
  }
  if (from.diaprice() != 0) {
    set_diaprice(from.diaprice());
  }
  if (from.discount() != 0) {
    set_discount(from.discount());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void StoreSpePropsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StoreSpePropsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoreSpePropsResponse::CopyFrom(const StoreSpePropsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StoreSpePropsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoreSpePropsResponse::IsInitialized() const {
  return true;
}

void StoreSpePropsResponse::Swap(StoreSpePropsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoreSpePropsResponse::InternalSwap(StoreSpePropsResponse* other) {
  using std::swap;
  describe_.Swap(&other->describe_);
  name_.Swap(&other->name_);
  swap(id_, other->id_);
  swap(goldprice_, other->goldprice_);
  swap(diaprice_, other->diaprice_);
  swap(discount_, other->discount_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StoreSpePropsResponse::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WarehouseRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WarehouseRequest::kWarehouseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WarehouseRequest::WarehouseRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsWarehouseRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WarehouseRequest)
}
WarehouseRequest::WarehouseRequest(const WarehouseRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  warehouse_ = from.warehouse_;
  // @@protoc_insertion_point(copy_constructor:WarehouseRequest)
}

void WarehouseRequest::SharedCtor() {
  warehouse_ = false;
  _cached_size_ = 0;
}

WarehouseRequest::~WarehouseRequest() {
  // @@protoc_insertion_point(destructor:WarehouseRequest)
  SharedDtor();
}

void WarehouseRequest::SharedDtor() {
}

void WarehouseRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WarehouseRequest::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WarehouseRequest& WarehouseRequest::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsWarehouseRequest();
  return *internal_default_instance();
}

WarehouseRequest* WarehouseRequest::New(::google::protobuf::Arena* arena) const {
  WarehouseRequest* n = new WarehouseRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WarehouseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:WarehouseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  warehouse_ = false;
  _internal_metadata_.Clear();
}

bool WarehouseRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WarehouseRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool Warehouse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &warehouse_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WarehouseRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WarehouseRequest)
  return false;
#undef DO_
}

void WarehouseRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WarehouseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Warehouse = 1;
  if (this->warehouse() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->warehouse(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:WarehouseRequest)
}

::google::protobuf::uint8* WarehouseRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WarehouseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Warehouse = 1;
  if (this->warehouse() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->warehouse(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WarehouseRequest)
  return target;
}

size_t WarehouseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WarehouseRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool Warehouse = 1;
  if (this->warehouse() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WarehouseRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WarehouseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WarehouseRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WarehouseRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WarehouseRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WarehouseRequest)
    MergeFrom(*source);
  }
}

void WarehouseRequest::MergeFrom(const WarehouseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WarehouseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.warehouse() != 0) {
    set_warehouse(from.warehouse());
  }
}

void WarehouseRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WarehouseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WarehouseRequest::CopyFrom(const WarehouseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WarehouseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WarehouseRequest::IsInitialized() const {
  return true;
}

void WarehouseRequest::Swap(WarehouseRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WarehouseRequest::InternalSwap(WarehouseRequest* other) {
  using std::swap;
  swap(warehouse_, other->warehouse_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WarehouseRequest::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WarehouseResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WarehouseResponse::kIdFieldNumber;
const int WarehouseResponse::kNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WarehouseResponse::WarehouseResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsWarehouseResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WarehouseResponse)
}
WarehouseResponse::WarehouseResponse(const WarehouseResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&number_) -
    reinterpret_cast<char*>(&id_)) + sizeof(number_));
  // @@protoc_insertion_point(copy_constructor:WarehouseResponse)
}

void WarehouseResponse::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&number_) -
      reinterpret_cast<char*>(&id_)) + sizeof(number_));
  _cached_size_ = 0;
}

WarehouseResponse::~WarehouseResponse() {
  // @@protoc_insertion_point(destructor:WarehouseResponse)
  SharedDtor();
}

void WarehouseResponse::SharedDtor() {
}

void WarehouseResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WarehouseResponse::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WarehouseResponse& WarehouseResponse::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsWarehouseResponse();
  return *internal_default_instance();
}

WarehouseResponse* WarehouseResponse::New(::google::protobuf::Arena* arena) const {
  WarehouseResponse* n = new WarehouseResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WarehouseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:WarehouseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&number_) -
      reinterpret_cast<char*>(&id_)) + sizeof(number_));
  _internal_metadata_.Clear();
}

bool WarehouseResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WarehouseResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WarehouseResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WarehouseResponse)
  return false;
#undef DO_
}

void WarehouseResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WarehouseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // uint32 Number = 2;
  if (this->number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->number(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:WarehouseResponse)
}

::google::protobuf::uint8* WarehouseResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WarehouseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // uint32 Number = 2;
  if (this->number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->number(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WarehouseResponse)
  return target;
}

size_t WarehouseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WarehouseResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // uint32 Number = 2;
  if (this->number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WarehouseResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WarehouseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const WarehouseResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WarehouseResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WarehouseResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WarehouseResponse)
    MergeFrom(*source);
  }
}

void WarehouseResponse::MergeFrom(const WarehouseResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WarehouseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.number() != 0) {
    set_number(from.number());
  }
}

void WarehouseResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WarehouseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WarehouseResponse::CopyFrom(const WarehouseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WarehouseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WarehouseResponse::IsInitialized() const {
  return true;
}

void WarehouseResponse::Swap(WarehouseResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WarehouseResponse::InternalSwap(WarehouseResponse* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(number_, other->number_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WarehouseResponse::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DelMailRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelMailRequest::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelMailRequest::DelMailRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsDelMailRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DelMailRequest)
}
DelMailRequest::DelMailRequest(const DelMailRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:DelMailRequest)
}

void DelMailRequest::SharedCtor() {
  id_ = 0u;
  _cached_size_ = 0;
}

DelMailRequest::~DelMailRequest() {
  // @@protoc_insertion_point(destructor:DelMailRequest)
  SharedDtor();
}

void DelMailRequest::SharedDtor() {
}

void DelMailRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelMailRequest::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DelMailRequest& DelMailRequest::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsDelMailRequest();
  return *internal_default_instance();
}

DelMailRequest* DelMailRequest::New(::google::protobuf::Arena* arena) const {
  DelMailRequest* n = new DelMailRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DelMailRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:DelMailRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

bool DelMailRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DelMailRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DelMailRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DelMailRequest)
  return false;
#undef DO_
}

void DelMailRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DelMailRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DelMailRequest)
}

::google::protobuf::uint8* DelMailRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DelMailRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DelMailRequest)
  return target;
}

size_t DelMailRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DelMailRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelMailRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DelMailRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DelMailRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelMailRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DelMailRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DelMailRequest)
    MergeFrom(*source);
  }
}

void DelMailRequest::MergeFrom(const DelMailRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DelMailRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void DelMailRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DelMailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelMailRequest::CopyFrom(const DelMailRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DelMailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelMailRequest::IsInitialized() const {
  return true;
}

void DelMailRequest::Swap(DelMailRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelMailRequest::InternalSwap(DelMailRequest* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DelMailRequest::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DelMailResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelMailResponse::kSuccessFieldNumber;
const int DelMailResponse::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelMailResponse::DelMailResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsDelMailResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DelMailResponse)
}
DelMailResponse::DelMailResponse(const DelMailResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&success_, &from.success_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&success_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:DelMailResponse)
}

void DelMailResponse::SharedCtor() {
  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&success_)) + sizeof(id_));
  _cached_size_ = 0;
}

DelMailResponse::~DelMailResponse() {
  // @@protoc_insertion_point(destructor:DelMailResponse)
  SharedDtor();
}

void DelMailResponse::SharedDtor() {
}

void DelMailResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelMailResponse::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DelMailResponse& DelMailResponse::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsDelMailResponse();
  return *internal_default_instance();
}

DelMailResponse* DelMailResponse::New(::google::protobuf::Arena* arena) const {
  DelMailResponse* n = new DelMailResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DelMailResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:DelMailResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&success_)) + sizeof(id_));
  _internal_metadata_.Clear();
}

bool DelMailResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DelMailResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool Success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DelMailResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DelMailResponse)
  return false;
#undef DO_
}

void DelMailResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DelMailResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // uint32 Id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DelMailResponse)
}

::google::protobuf::uint8* DelMailResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DelMailResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // uint32 Id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DelMailResponse)
  return target;
}

size_t DelMailResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DelMailResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool Success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  // uint32 Id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelMailResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DelMailResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DelMailResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelMailResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DelMailResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DelMailResponse)
    MergeFrom(*source);
  }
}

void DelMailResponse::MergeFrom(const DelMailResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DelMailResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    set_success(from.success());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void DelMailResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DelMailResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelMailResponse::CopyFrom(const DelMailResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DelMailResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelMailResponse::IsInitialized() const {
  return true;
}

void DelMailResponse::Swap(DelMailResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelMailResponse::InternalSwap(DelMailResponse* other) {
  using std::swap;
  swap(success_, other->success_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DelMailResponse::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClaimedTaskRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClaimedTaskRequest::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClaimedTaskRequest::ClaimedTaskRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsClaimedTaskRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClaimedTaskRequest)
}
ClaimedTaskRequest::ClaimedTaskRequest(const ClaimedTaskRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:ClaimedTaskRequest)
}

void ClaimedTaskRequest::SharedCtor() {
  id_ = 0u;
  _cached_size_ = 0;
}

ClaimedTaskRequest::~ClaimedTaskRequest() {
  // @@protoc_insertion_point(destructor:ClaimedTaskRequest)
  SharedDtor();
}

void ClaimedTaskRequest::SharedDtor() {
}

void ClaimedTaskRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClaimedTaskRequest::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClaimedTaskRequest& ClaimedTaskRequest::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsClaimedTaskRequest();
  return *internal_default_instance();
}

ClaimedTaskRequest* ClaimedTaskRequest::New(::google::protobuf::Arena* arena) const {
  ClaimedTaskRequest* n = new ClaimedTaskRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClaimedTaskRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ClaimedTaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

bool ClaimedTaskRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClaimedTaskRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClaimedTaskRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClaimedTaskRequest)
  return false;
#undef DO_
}

void ClaimedTaskRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClaimedTaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ClaimedTaskRequest)
}

::google::protobuf::uint8* ClaimedTaskRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ClaimedTaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClaimedTaskRequest)
  return target;
}

size_t ClaimedTaskRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClaimedTaskRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClaimedTaskRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClaimedTaskRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ClaimedTaskRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClaimedTaskRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClaimedTaskRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClaimedTaskRequest)
    MergeFrom(*source);
  }
}

void ClaimedTaskRequest::MergeFrom(const ClaimedTaskRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClaimedTaskRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void ClaimedTaskRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClaimedTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClaimedTaskRequest::CopyFrom(const ClaimedTaskRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClaimedTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClaimedTaskRequest::IsInitialized() const {
  return true;
}

void ClaimedTaskRequest::Swap(ClaimedTaskRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClaimedTaskRequest::InternalSwap(ClaimedTaskRequest* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClaimedTaskRequest::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClaimedTaskResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClaimedTaskResponse::kSuccessFieldNumber;
const int ClaimedTaskResponse::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClaimedTaskResponse::ClaimedTaskResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsClaimedTaskResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClaimedTaskResponse)
}
ClaimedTaskResponse::ClaimedTaskResponse(const ClaimedTaskResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&success_, &from.success_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&success_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:ClaimedTaskResponse)
}

void ClaimedTaskResponse::SharedCtor() {
  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&success_)) + sizeof(id_));
  _cached_size_ = 0;
}

ClaimedTaskResponse::~ClaimedTaskResponse() {
  // @@protoc_insertion_point(destructor:ClaimedTaskResponse)
  SharedDtor();
}

void ClaimedTaskResponse::SharedDtor() {
}

void ClaimedTaskResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClaimedTaskResponse::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClaimedTaskResponse& ClaimedTaskResponse::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsClaimedTaskResponse();
  return *internal_default_instance();
}

ClaimedTaskResponse* ClaimedTaskResponse::New(::google::protobuf::Arena* arena) const {
  ClaimedTaskResponse* n = new ClaimedTaskResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClaimedTaskResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ClaimedTaskResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&success_)) + sizeof(id_));
  _internal_metadata_.Clear();
}

bool ClaimedTaskResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClaimedTaskResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool Success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClaimedTaskResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClaimedTaskResponse)
  return false;
#undef DO_
}

void ClaimedTaskResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClaimedTaskResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // uint32 Id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ClaimedTaskResponse)
}

::google::protobuf::uint8* ClaimedTaskResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ClaimedTaskResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // uint32 Id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClaimedTaskResponse)
  return target;
}

size_t ClaimedTaskResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClaimedTaskResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool Success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  // uint32 Id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClaimedTaskResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClaimedTaskResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ClaimedTaskResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClaimedTaskResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClaimedTaskResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClaimedTaskResponse)
    MergeFrom(*source);
  }
}

void ClaimedTaskResponse::MergeFrom(const ClaimedTaskResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClaimedTaskResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    set_success(from.success());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void ClaimedTaskResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClaimedTaskResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClaimedTaskResponse::CopyFrom(const ClaimedTaskResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClaimedTaskResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClaimedTaskResponse::IsInitialized() const {
  return true;
}

void ClaimedTaskResponse::Swap(ClaimedTaskResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClaimedTaskResponse::InternalSwap(ClaimedTaskResponse* other) {
  using std::swap;
  swap(success_, other->success_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClaimedTaskResponse::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RecTaskAwardRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecTaskAwardRequest::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecTaskAwardRequest::RecTaskAwardRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsRecTaskAwardRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RecTaskAwardRequest)
}
RecTaskAwardRequest::RecTaskAwardRequest(const RecTaskAwardRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:RecTaskAwardRequest)
}

void RecTaskAwardRequest::SharedCtor() {
  id_ = 0u;
  _cached_size_ = 0;
}

RecTaskAwardRequest::~RecTaskAwardRequest() {
  // @@protoc_insertion_point(destructor:RecTaskAwardRequest)
  SharedDtor();
}

void RecTaskAwardRequest::SharedDtor() {
}

void RecTaskAwardRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecTaskAwardRequest::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecTaskAwardRequest& RecTaskAwardRequest::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsRecTaskAwardRequest();
  return *internal_default_instance();
}

RecTaskAwardRequest* RecTaskAwardRequest::New(::google::protobuf::Arena* arena) const {
  RecTaskAwardRequest* n = new RecTaskAwardRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RecTaskAwardRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RecTaskAwardRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

bool RecTaskAwardRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RecTaskAwardRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RecTaskAwardRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RecTaskAwardRequest)
  return false;
#undef DO_
}

void RecTaskAwardRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RecTaskAwardRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RecTaskAwardRequest)
}

::google::protobuf::uint8* RecTaskAwardRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RecTaskAwardRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RecTaskAwardRequest)
  return target;
}

size_t RecTaskAwardRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RecTaskAwardRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecTaskAwardRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RecTaskAwardRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RecTaskAwardRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecTaskAwardRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RecTaskAwardRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RecTaskAwardRequest)
    MergeFrom(*source);
  }
}

void RecTaskAwardRequest::MergeFrom(const RecTaskAwardRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RecTaskAwardRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void RecTaskAwardRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RecTaskAwardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecTaskAwardRequest::CopyFrom(const RecTaskAwardRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RecTaskAwardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecTaskAwardRequest::IsInitialized() const {
  return true;
}

void RecTaskAwardRequest::Swap(RecTaskAwardRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecTaskAwardRequest::InternalSwap(RecTaskAwardRequest* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RecTaskAwardRequest::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RecTaskAwardResponse::InitAsDefaultInstance() {
  ::_RecTaskAwardResponse_default_instance_._instance.get_mutable()->prize1_ = const_cast< ::Prize*>(
      ::Prize::internal_default_instance());
  ::_RecTaskAwardResponse_default_instance_._instance.get_mutable()->prize2_ = const_cast< ::Prize*>(
      ::Prize::internal_default_instance());
  ::_RecTaskAwardResponse_default_instance_._instance.get_mutable()->prize3_ = const_cast< ::Prize*>(
      ::Prize::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecTaskAwardResponse::kPrize1FieldNumber;
const int RecTaskAwardResponse::kPrize2FieldNumber;
const int RecTaskAwardResponse::kPrize3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecTaskAwardResponse::RecTaskAwardResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsRecTaskAwardResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RecTaskAwardResponse)
}
RecTaskAwardResponse::RecTaskAwardResponse(const RecTaskAwardResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_prize1()) {
    prize1_ = new ::Prize(*from.prize1_);
  } else {
    prize1_ = NULL;
  }
  if (from.has_prize2()) {
    prize2_ = new ::Prize(*from.prize2_);
  } else {
    prize2_ = NULL;
  }
  if (from.has_prize3()) {
    prize3_ = new ::Prize(*from.prize3_);
  } else {
    prize3_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:RecTaskAwardResponse)
}

void RecTaskAwardResponse::SharedCtor() {
  ::memset(&prize1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prize3_) -
      reinterpret_cast<char*>(&prize1_)) + sizeof(prize3_));
  _cached_size_ = 0;
}

RecTaskAwardResponse::~RecTaskAwardResponse() {
  // @@protoc_insertion_point(destructor:RecTaskAwardResponse)
  SharedDtor();
}

void RecTaskAwardResponse::SharedDtor() {
  if (this != internal_default_instance()) delete prize1_;
  if (this != internal_default_instance()) delete prize2_;
  if (this != internal_default_instance()) delete prize3_;
}

void RecTaskAwardResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecTaskAwardResponse::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecTaskAwardResponse& RecTaskAwardResponse::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsRecTaskAwardResponse();
  return *internal_default_instance();
}

RecTaskAwardResponse* RecTaskAwardResponse::New(::google::protobuf::Arena* arena) const {
  RecTaskAwardResponse* n = new RecTaskAwardResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RecTaskAwardResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:RecTaskAwardResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && prize1_ != NULL) {
    delete prize1_;
  }
  prize1_ = NULL;
  if (GetArenaNoVirtual() == NULL && prize2_ != NULL) {
    delete prize2_;
  }
  prize2_ = NULL;
  if (GetArenaNoVirtual() == NULL && prize3_ != NULL) {
    delete prize3_;
  }
  prize3_ = NULL;
  _internal_metadata_.Clear();
}

bool RecTaskAwardResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RecTaskAwardResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Prize prize1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_prize1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Prize prize2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_prize2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Prize prize3 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_prize3()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RecTaskAwardResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RecTaskAwardResponse)
  return false;
#undef DO_
}

void RecTaskAwardResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RecTaskAwardResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Prize prize1 = 1;
  if (this->has_prize1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->prize1_, output);
  }

  // .Prize prize2 = 2;
  if (this->has_prize2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->prize2_, output);
  }

  // .Prize prize3 = 3;
  if (this->has_prize3()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->prize3_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RecTaskAwardResponse)
}

::google::protobuf::uint8* RecTaskAwardResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RecTaskAwardResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Prize prize1 = 1;
  if (this->has_prize1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->prize1_, deterministic, target);
  }

  // .Prize prize2 = 2;
  if (this->has_prize2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->prize2_, deterministic, target);
  }

  // .Prize prize3 = 3;
  if (this->has_prize3()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->prize3_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RecTaskAwardResponse)
  return target;
}

size_t RecTaskAwardResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RecTaskAwardResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Prize prize1 = 1;
  if (this->has_prize1()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->prize1_);
  }

  // .Prize prize2 = 2;
  if (this->has_prize2()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->prize2_);
  }

  // .Prize prize3 = 3;
  if (this->has_prize3()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->prize3_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecTaskAwardResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RecTaskAwardResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RecTaskAwardResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecTaskAwardResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RecTaskAwardResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RecTaskAwardResponse)
    MergeFrom(*source);
  }
}

void RecTaskAwardResponse::MergeFrom(const RecTaskAwardResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RecTaskAwardResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_prize1()) {
    mutable_prize1()->::Prize::MergeFrom(from.prize1());
  }
  if (from.has_prize2()) {
    mutable_prize2()->::Prize::MergeFrom(from.prize2());
  }
  if (from.has_prize3()) {
    mutable_prize3()->::Prize::MergeFrom(from.prize3());
  }
}

void RecTaskAwardResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RecTaskAwardResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecTaskAwardResponse::CopyFrom(const RecTaskAwardResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RecTaskAwardResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecTaskAwardResponse::IsInitialized() const {
  return true;
}

void RecTaskAwardResponse::Swap(RecTaskAwardResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecTaskAwardResponse::InternalSwap(RecTaskAwardResponse* other) {
  using std::swap;
  swap(prize1_, other->prize1_);
  swap(prize2_, other->prize2_);
  swap(prize3_, other->prize3_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RecTaskAwardResponse::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FriendsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FriendsRequest::kFriendsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FriendsRequest::FriendsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsFriendsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:FriendsRequest)
}
FriendsRequest::FriendsRequest(const FriendsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  friends_ = from.friends_;
  // @@protoc_insertion_point(copy_constructor:FriendsRequest)
}

void FriendsRequest::SharedCtor() {
  friends_ = false;
  _cached_size_ = 0;
}

FriendsRequest::~FriendsRequest() {
  // @@protoc_insertion_point(destructor:FriendsRequest)
  SharedDtor();
}

void FriendsRequest::SharedDtor() {
}

void FriendsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FriendsRequest::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FriendsRequest& FriendsRequest::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsFriendsRequest();
  return *internal_default_instance();
}

FriendsRequest* FriendsRequest::New(::google::protobuf::Arena* arena) const {
  FriendsRequest* n = new FriendsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FriendsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:FriendsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friends_ = false;
  _internal_metadata_.Clear();
}

bool FriendsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FriendsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool Friends = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &friends_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FriendsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FriendsRequest)
  return false;
#undef DO_
}

void FriendsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FriendsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Friends = 1;
  if (this->friends() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->friends(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FriendsRequest)
}

::google::protobuf::uint8* FriendsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FriendsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Friends = 1;
  if (this->friends() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->friends(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FriendsRequest)
  return target;
}

size_t FriendsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FriendsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool Friends = 1;
  if (this->friends() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FriendsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FriendsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FriendsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FriendsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FriendsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FriendsRequest)
    MergeFrom(*source);
  }
}

void FriendsRequest::MergeFrom(const FriendsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FriendsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.friends() != 0) {
    set_friends(from.friends());
  }
}

void FriendsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FriendsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FriendsRequest::CopyFrom(const FriendsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FriendsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FriendsRequest::IsInitialized() const {
  return true;
}

void FriendsRequest::Swap(FriendsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FriendsRequest::InternalSwap(FriendsRequest* other) {
  using std::swap;
  swap(friends_, other->friends_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FriendsRequest::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FriendsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FriendsResponse::kIdFieldNumber;
const int FriendsResponse::kNameFieldNumber;
const int FriendsResponse::kLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FriendsResponse::FriendsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsFriendsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:FriendsResponse)
}
FriendsResponse::FriendsResponse(const FriendsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&id_)) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:FriendsResponse)
}

void FriendsResponse::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&id_)) + sizeof(level_));
  _cached_size_ = 0;
}

FriendsResponse::~FriendsResponse() {
  // @@protoc_insertion_point(destructor:FriendsResponse)
  SharedDtor();
}

void FriendsResponse::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FriendsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FriendsResponse::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FriendsResponse& FriendsResponse::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsFriendsResponse();
  return *internal_default_instance();
}

FriendsResponse* FriendsResponse::New(::google::protobuf::Arena* arena) const {
  FriendsResponse* n = new FriendsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FriendsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:FriendsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&id_)) + sizeof(level_));
  _internal_metadata_.Clear();
}

bool FriendsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FriendsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "FriendsResponse.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FriendsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FriendsResponse)
  return false;
#undef DO_
}

void FriendsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FriendsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FriendsResponse.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // uint32 Level = 3;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FriendsResponse)
}

::google::protobuf::uint8* FriendsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FriendsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FriendsResponse.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // uint32 Level = 3;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FriendsResponse)
  return target;
}

size_t FriendsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FriendsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // uint32 Level = 3;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FriendsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FriendsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FriendsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FriendsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FriendsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FriendsResponse)
    MergeFrom(*source);
  }
}

void FriendsResponse::MergeFrom(const FriendsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FriendsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
}

void FriendsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FriendsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FriendsResponse::CopyFrom(const FriendsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FriendsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FriendsResponse::IsInitialized() const {
  return true;
}

void FriendsResponse::Swap(FriendsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FriendsResponse::InternalSwap(FriendsResponse* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(id_, other->id_);
  swap(level_, other->level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FriendsResponse::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EnemiesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnemiesRequest::kEnemiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnemiesRequest::EnemiesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsEnemiesRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:EnemiesRequest)
}
EnemiesRequest::EnemiesRequest(const EnemiesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  enemies_ = from.enemies_;
  // @@protoc_insertion_point(copy_constructor:EnemiesRequest)
}

void EnemiesRequest::SharedCtor() {
  enemies_ = false;
  _cached_size_ = 0;
}

EnemiesRequest::~EnemiesRequest() {
  // @@protoc_insertion_point(destructor:EnemiesRequest)
  SharedDtor();
}

void EnemiesRequest::SharedDtor() {
}

void EnemiesRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnemiesRequest::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnemiesRequest& EnemiesRequest::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsEnemiesRequest();
  return *internal_default_instance();
}

EnemiesRequest* EnemiesRequest::New(::google::protobuf::Arena* arena) const {
  EnemiesRequest* n = new EnemiesRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnemiesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:EnemiesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  enemies_ = false;
  _internal_metadata_.Clear();
}

bool EnemiesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EnemiesRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool Enemies = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enemies_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EnemiesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EnemiesRequest)
  return false;
#undef DO_
}

void EnemiesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EnemiesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Enemies = 1;
  if (this->enemies() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enemies(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:EnemiesRequest)
}

::google::protobuf::uint8* EnemiesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:EnemiesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Enemies = 1;
  if (this->enemies() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enemies(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EnemiesRequest)
  return target;
}

size_t EnemiesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EnemiesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool Enemies = 1;
  if (this->enemies() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnemiesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:EnemiesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EnemiesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnemiesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:EnemiesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:EnemiesRequest)
    MergeFrom(*source);
  }
}

void EnemiesRequest::MergeFrom(const EnemiesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:EnemiesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.enemies() != 0) {
    set_enemies(from.enemies());
  }
}

void EnemiesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:EnemiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnemiesRequest::CopyFrom(const EnemiesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EnemiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnemiesRequest::IsInitialized() const {
  return true;
}

void EnemiesRequest::Swap(EnemiesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnemiesRequest::InternalSwap(EnemiesRequest* other) {
  using std::swap;
  swap(enemies_, other->enemies_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnemiesRequest::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EnemiesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnemiesResponse::kIdFieldNumber;
const int EnemiesResponse::kNameFieldNumber;
const int EnemiesResponse::kLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnemiesResponse::EnemiesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsEnemiesResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:EnemiesResponse)
}
EnemiesResponse::EnemiesResponse(const EnemiesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&id_)) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:EnemiesResponse)
}

void EnemiesResponse::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&id_)) + sizeof(level_));
  _cached_size_ = 0;
}

EnemiesResponse::~EnemiesResponse() {
  // @@protoc_insertion_point(destructor:EnemiesResponse)
  SharedDtor();
}

void EnemiesResponse::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EnemiesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnemiesResponse::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnemiesResponse& EnemiesResponse::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsEnemiesResponse();
  return *internal_default_instance();
}

EnemiesResponse* EnemiesResponse::New(::google::protobuf::Arena* arena) const {
  EnemiesResponse* n = new EnemiesResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnemiesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:EnemiesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&id_)) + sizeof(level_));
  _internal_metadata_.Clear();
}

bool EnemiesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EnemiesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "EnemiesResponse.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EnemiesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EnemiesResponse)
  return false;
#undef DO_
}

void EnemiesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EnemiesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "EnemiesResponse.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // uint32 Level = 3;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:EnemiesResponse)
}

::google::protobuf::uint8* EnemiesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:EnemiesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "EnemiesResponse.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // uint32 Level = 3;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EnemiesResponse)
  return target;
}

size_t EnemiesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EnemiesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // uint32 Level = 3;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnemiesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:EnemiesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const EnemiesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnemiesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:EnemiesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:EnemiesResponse)
    MergeFrom(*source);
  }
}

void EnemiesResponse::MergeFrom(const EnemiesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:EnemiesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
}

void EnemiesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:EnemiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnemiesResponse::CopyFrom(const EnemiesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EnemiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnemiesResponse::IsInitialized() const {
  return true;
}

void EnemiesResponse::Swap(EnemiesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnemiesResponse::InternalSwap(EnemiesResponse* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(id_, other->id_);
  swap(level_, other->level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnemiesResponse::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlunderRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlunderRequest::kPlunderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlunderRequest::PlunderRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsPlunderRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PlunderRequest)
}
PlunderRequest::PlunderRequest(const PlunderRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  plunder_ = from.plunder_;
  // @@protoc_insertion_point(copy_constructor:PlunderRequest)
}

void PlunderRequest::SharedCtor() {
  plunder_ = false;
  _cached_size_ = 0;
}

PlunderRequest::~PlunderRequest() {
  // @@protoc_insertion_point(destructor:PlunderRequest)
  SharedDtor();
}

void PlunderRequest::SharedDtor() {
}

void PlunderRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlunderRequest::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlunderRequest& PlunderRequest::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsPlunderRequest();
  return *internal_default_instance();
}

PlunderRequest* PlunderRequest::New(::google::protobuf::Arena* arena) const {
  PlunderRequest* n = new PlunderRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlunderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PlunderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  plunder_ = false;
  _internal_metadata_.Clear();
}

bool PlunderRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PlunderRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool Plunder = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &plunder_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PlunderRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PlunderRequest)
  return false;
#undef DO_
}

void PlunderRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PlunderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Plunder = 1;
  if (this->plunder() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->plunder(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PlunderRequest)
}

::google::protobuf::uint8* PlunderRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PlunderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Plunder = 1;
  if (this->plunder() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->plunder(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlunderRequest)
  return target;
}

size_t PlunderRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlunderRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool Plunder = 1;
  if (this->plunder() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlunderRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PlunderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PlunderRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlunderRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PlunderRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PlunderRequest)
    MergeFrom(*source);
  }
}

void PlunderRequest::MergeFrom(const PlunderRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlunderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.plunder() != 0) {
    set_plunder(from.plunder());
  }
}

void PlunderRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PlunderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlunderRequest::CopyFrom(const PlunderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlunderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlunderRequest::IsInitialized() const {
  return true;
}

void PlunderRequest::Swap(PlunderRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlunderRequest::InternalSwap(PlunderRequest* other) {
  using std::swap;
  swap(plunder_, other->plunder_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlunderRequest::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlunderResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlunderResponse::kSuccessFieldNumber;
const int PlunderResponse::kIdFieldNumber;
const int PlunderResponse::kGoldNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlunderResponse::PlunderResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsPlunderResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PlunderResponse)
}
PlunderResponse::PlunderResponse(const PlunderResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&success_, &from.success_,
    static_cast<size_t>(reinterpret_cast<char*>(&goldnum_) -
    reinterpret_cast<char*>(&success_)) + sizeof(goldnum_));
  // @@protoc_insertion_point(copy_constructor:PlunderResponse)
}

void PlunderResponse::SharedCtor() {
  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&goldnum_) -
      reinterpret_cast<char*>(&success_)) + sizeof(goldnum_));
  _cached_size_ = 0;
}

PlunderResponse::~PlunderResponse() {
  // @@protoc_insertion_point(destructor:PlunderResponse)
  SharedDtor();
}

void PlunderResponse::SharedDtor() {
}

void PlunderResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlunderResponse::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlunderResponse& PlunderResponse::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsPlunderResponse();
  return *internal_default_instance();
}

PlunderResponse* PlunderResponse::New(::google::protobuf::Arena* arena) const {
  PlunderResponse* n = new PlunderResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlunderResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:PlunderResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&goldnum_) -
      reinterpret_cast<char*>(&success_)) + sizeof(goldnum_));
  _internal_metadata_.Clear();
}

bool PlunderResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PlunderResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool Success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 GoldNum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goldnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PlunderResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PlunderResponse)
  return false;
#undef DO_
}

void PlunderResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PlunderResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // uint32 Id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->id(), output);
  }

  // uint32 GoldNum = 3;
  if (this->goldnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->goldnum(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PlunderResponse)
}

::google::protobuf::uint8* PlunderResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PlunderResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // uint32 Id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->id(), target);
  }

  // uint32 GoldNum = 3;
  if (this->goldnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->goldnum(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlunderResponse)
  return target;
}

size_t PlunderResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlunderResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool Success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  // uint32 Id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // uint32 GoldNum = 3;
  if (this->goldnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->goldnum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlunderResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PlunderResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PlunderResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlunderResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PlunderResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PlunderResponse)
    MergeFrom(*source);
  }
}

void PlunderResponse::MergeFrom(const PlunderResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlunderResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    set_success(from.success());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.goldnum() != 0) {
    set_goldnum(from.goldnum());
  }
}

void PlunderResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PlunderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlunderResponse::CopyFrom(const PlunderResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlunderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlunderResponse::IsInitialized() const {
  return true;
}

void PlunderResponse::Swap(PlunderResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlunderResponse::InternalSwap(PlunderResponse* other) {
  using std::swap;
  swap(success_, other->success_);
  swap(id_, other->id_);
  swap(goldnum_, other->goldnum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlunderResponse::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UseItemRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UseItemRequest::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UseItemRequest::UseItemRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsUseItemRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UseItemRequest)
}
UseItemRequest::UseItemRequest(const UseItemRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:UseItemRequest)
}

void UseItemRequest::SharedCtor() {
  id_ = 0u;
  _cached_size_ = 0;
}

UseItemRequest::~UseItemRequest() {
  // @@protoc_insertion_point(destructor:UseItemRequest)
  SharedDtor();
}

void UseItemRequest::SharedDtor() {
}

void UseItemRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UseItemRequest::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UseItemRequest& UseItemRequest::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsUseItemRequest();
  return *internal_default_instance();
}

UseItemRequest* UseItemRequest::New(::google::protobuf::Arena* arena) const {
  UseItemRequest* n = new UseItemRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UseItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UseItemRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

bool UseItemRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UseItemRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UseItemRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UseItemRequest)
  return false;
#undef DO_
}

void UseItemRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UseItemRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UseItemRequest)
}

::google::protobuf::uint8* UseItemRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UseItemRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UseItemRequest)
  return target;
}

size_t UseItemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UseItemRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UseItemRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UseItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UseItemRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UseItemRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UseItemRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UseItemRequest)
    MergeFrom(*source);
  }
}

void UseItemRequest::MergeFrom(const UseItemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UseItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void UseItemRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UseItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseItemRequest::CopyFrom(const UseItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UseItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseItemRequest::IsInitialized() const {
  return true;
}

void UseItemRequest::Swap(UseItemRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UseItemRequest::InternalSwap(UseItemRequest* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UseItemRequest::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UseItemResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UseItemResponse::kSuccessFieldNumber;
const int UseItemResponse::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UseItemResponse::UseItemResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsUseItemResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UseItemResponse)
}
UseItemResponse::UseItemResponse(const UseItemResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&success_, &from.success_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&success_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:UseItemResponse)
}

void UseItemResponse::SharedCtor() {
  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&success_)) + sizeof(id_));
  _cached_size_ = 0;
}

UseItemResponse::~UseItemResponse() {
  // @@protoc_insertion_point(destructor:UseItemResponse)
  SharedDtor();
}

void UseItemResponse::SharedDtor() {
}

void UseItemResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UseItemResponse::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UseItemResponse& UseItemResponse::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsUseItemResponse();
  return *internal_default_instance();
}

UseItemResponse* UseItemResponse::New(::google::protobuf::Arena* arena) const {
  UseItemResponse* n = new UseItemResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UseItemResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:UseItemResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&success_)) + sizeof(id_));
  _internal_metadata_.Clear();
}

bool UseItemResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UseItemResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool Success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UseItemResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UseItemResponse)
  return false;
#undef DO_
}

void UseItemResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UseItemResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // uint32 Id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UseItemResponse)
}

::google::protobuf::uint8* UseItemResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UseItemResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // uint32 Id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UseItemResponse)
  return target;
}

size_t UseItemResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UseItemResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool Success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  // uint32 Id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UseItemResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UseItemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UseItemResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UseItemResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UseItemResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UseItemResponse)
    MergeFrom(*source);
  }
}

void UseItemResponse::MergeFrom(const UseItemResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UseItemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    set_success(from.success());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void UseItemResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UseItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseItemResponse::CopyFrom(const UseItemResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UseItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseItemResponse::IsInitialized() const {
  return true;
}

void UseItemResponse::Swap(UseItemResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UseItemResponse::InternalSwap(UseItemResponse* other) {
  using std::swap;
  swap(success_, other->success_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UseItemResponse::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ForgetSkillRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ForgetSkillRequest::kSkillIdFieldNumber;
const int ForgetSkillRequest::kElfinIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ForgetSkillRequest::ForgetSkillRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsForgetSkillRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ForgetSkillRequest)
}
ForgetSkillRequest::ForgetSkillRequest(const ForgetSkillRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&skillid_, &from.skillid_,
    static_cast<size_t>(reinterpret_cast<char*>(&elfinid_) -
    reinterpret_cast<char*>(&skillid_)) + sizeof(elfinid_));
  // @@protoc_insertion_point(copy_constructor:ForgetSkillRequest)
}

void ForgetSkillRequest::SharedCtor() {
  ::memset(&skillid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&elfinid_) -
      reinterpret_cast<char*>(&skillid_)) + sizeof(elfinid_));
  _cached_size_ = 0;
}

ForgetSkillRequest::~ForgetSkillRequest() {
  // @@protoc_insertion_point(destructor:ForgetSkillRequest)
  SharedDtor();
}

void ForgetSkillRequest::SharedDtor() {
}

void ForgetSkillRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ForgetSkillRequest::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ForgetSkillRequest& ForgetSkillRequest::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsForgetSkillRequest();
  return *internal_default_instance();
}

ForgetSkillRequest* ForgetSkillRequest::New(::google::protobuf::Arena* arena) const {
  ForgetSkillRequest* n = new ForgetSkillRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ForgetSkillRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ForgetSkillRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&skillid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&elfinid_) -
      reinterpret_cast<char*>(&skillid_)) + sizeof(elfinid_));
  _internal_metadata_.Clear();
}

bool ForgetSkillRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ForgetSkillRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 skillId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skillid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 elfinId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &elfinid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ForgetSkillRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ForgetSkillRequest)
  return false;
#undef DO_
}

void ForgetSkillRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ForgetSkillRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 skillId = 1;
  if (this->skillid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->skillid(), output);
  }

  // uint32 elfinId = 2;
  if (this->elfinid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->elfinid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ForgetSkillRequest)
}

::google::protobuf::uint8* ForgetSkillRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ForgetSkillRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 skillId = 1;
  if (this->skillid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->skillid(), target);
  }

  // uint32 elfinId = 2;
  if (this->elfinid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->elfinid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ForgetSkillRequest)
  return target;
}

size_t ForgetSkillRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ForgetSkillRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 skillId = 1;
  if (this->skillid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->skillid());
  }

  // uint32 elfinId = 2;
  if (this->elfinid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->elfinid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ForgetSkillRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ForgetSkillRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ForgetSkillRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ForgetSkillRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ForgetSkillRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ForgetSkillRequest)
    MergeFrom(*source);
  }
}

void ForgetSkillRequest::MergeFrom(const ForgetSkillRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ForgetSkillRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.skillid() != 0) {
    set_skillid(from.skillid());
  }
  if (from.elfinid() != 0) {
    set_elfinid(from.elfinid());
  }
}

void ForgetSkillRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ForgetSkillRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ForgetSkillRequest::CopyFrom(const ForgetSkillRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ForgetSkillRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForgetSkillRequest::IsInitialized() const {
  return true;
}

void ForgetSkillRequest::Swap(ForgetSkillRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ForgetSkillRequest::InternalSwap(ForgetSkillRequest* other) {
  using std::swap;
  swap(skillid_, other->skillid_);
  swap(elfinid_, other->elfinid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ForgetSkillRequest::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ForgetSkillResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ForgetSkillResponse::kSuccessFieldNumber;
const int ForgetSkillResponse::kSkillIdFieldNumber;
const int ForgetSkillResponse::kElfinIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ForgetSkillResponse::ForgetSkillResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsForgetSkillResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ForgetSkillResponse)
}
ForgetSkillResponse::ForgetSkillResponse(const ForgetSkillResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&success_, &from.success_,
    static_cast<size_t>(reinterpret_cast<char*>(&elfinid_) -
    reinterpret_cast<char*>(&success_)) + sizeof(elfinid_));
  // @@protoc_insertion_point(copy_constructor:ForgetSkillResponse)
}

void ForgetSkillResponse::SharedCtor() {
  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&elfinid_) -
      reinterpret_cast<char*>(&success_)) + sizeof(elfinid_));
  _cached_size_ = 0;
}

ForgetSkillResponse::~ForgetSkillResponse() {
  // @@protoc_insertion_point(destructor:ForgetSkillResponse)
  SharedDtor();
}

void ForgetSkillResponse::SharedDtor() {
}

void ForgetSkillResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ForgetSkillResponse::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ForgetSkillResponse& ForgetSkillResponse::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsForgetSkillResponse();
  return *internal_default_instance();
}

ForgetSkillResponse* ForgetSkillResponse::New(::google::protobuf::Arena* arena) const {
  ForgetSkillResponse* n = new ForgetSkillResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ForgetSkillResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ForgetSkillResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&elfinid_) -
      reinterpret_cast<char*>(&success_)) + sizeof(elfinid_));
  _internal_metadata_.Clear();
}

bool ForgetSkillResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ForgetSkillResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool Success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 skillId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skillid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 elfinId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &elfinid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ForgetSkillResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ForgetSkillResponse)
  return false;
#undef DO_
}

void ForgetSkillResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ForgetSkillResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // uint32 skillId = 2;
  if (this->skillid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->skillid(), output);
  }

  // uint32 elfinId = 3;
  if (this->elfinid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->elfinid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ForgetSkillResponse)
}

::google::protobuf::uint8* ForgetSkillResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ForgetSkillResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // uint32 skillId = 2;
  if (this->skillid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->skillid(), target);
  }

  // uint32 elfinId = 3;
  if (this->elfinid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->elfinid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ForgetSkillResponse)
  return target;
}

size_t ForgetSkillResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ForgetSkillResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool Success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  // uint32 skillId = 2;
  if (this->skillid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->skillid());
  }

  // uint32 elfinId = 3;
  if (this->elfinid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->elfinid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ForgetSkillResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ForgetSkillResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ForgetSkillResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ForgetSkillResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ForgetSkillResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ForgetSkillResponse)
    MergeFrom(*source);
  }
}

void ForgetSkillResponse::MergeFrom(const ForgetSkillResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ForgetSkillResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    set_success(from.success());
  }
  if (from.skillid() != 0) {
    set_skillid(from.skillid());
  }
  if (from.elfinid() != 0) {
    set_elfinid(from.elfinid());
  }
}

void ForgetSkillResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ForgetSkillResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ForgetSkillResponse::CopyFrom(const ForgetSkillResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ForgetSkillResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForgetSkillResponse::IsInitialized() const {
  return true;
}

void ForgetSkillResponse::Swap(ForgetSkillResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ForgetSkillResponse::InternalSwap(ForgetSkillResponse* other) {
  using std::swap;
  swap(success_, other->success_);
  swap(skillid_, other->skillid_);
  swap(elfinid_, other->elfinid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ForgetSkillResponse::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SettleAccountRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SettleAccountRequest::kItemNumFieldNumber;
const int SettleAccountRequest::kNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SettleAccountRequest::SettleAccountRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsSettleAccountRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SettleAccountRequest)
}
SettleAccountRequest::SettleAccountRequest(const SettleAccountRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&itemnum_, &from.itemnum_,
    static_cast<size_t>(reinterpret_cast<char*>(&number_) -
    reinterpret_cast<char*>(&itemnum_)) + sizeof(number_));
  // @@protoc_insertion_point(copy_constructor:SettleAccountRequest)
}

void SettleAccountRequest::SharedCtor() {
  ::memset(&itemnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&number_) -
      reinterpret_cast<char*>(&itemnum_)) + sizeof(number_));
  _cached_size_ = 0;
}

SettleAccountRequest::~SettleAccountRequest() {
  // @@protoc_insertion_point(destructor:SettleAccountRequest)
  SharedDtor();
}

void SettleAccountRequest::SharedDtor() {
}

void SettleAccountRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SettleAccountRequest::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SettleAccountRequest& SettleAccountRequest::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsSettleAccountRequest();
  return *internal_default_instance();
}

SettleAccountRequest* SettleAccountRequest::New(::google::protobuf::Arena* arena) const {
  SettleAccountRequest* n = new SettleAccountRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SettleAccountRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SettleAccountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&itemnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&number_) -
      reinterpret_cast<char*>(&itemnum_)) + sizeof(number_));
  _internal_metadata_.Clear();
}

bool SettleAccountRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SettleAccountRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 ItemNum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SettleAccountRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SettleAccountRequest)
  return false;
#undef DO_
}

void SettleAccountRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SettleAccountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ItemNum = 1;
  if (this->itemnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemnum(), output);
  }

  // uint32 Number = 2;
  if (this->number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->number(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SettleAccountRequest)
}

::google::protobuf::uint8* SettleAccountRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SettleAccountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ItemNum = 1;
  if (this->itemnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemnum(), target);
  }

  // uint32 Number = 2;
  if (this->number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->number(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SettleAccountRequest)
  return target;
}

size_t SettleAccountRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SettleAccountRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 ItemNum = 1;
  if (this->itemnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->itemnum());
  }

  // uint32 Number = 2;
  if (this->number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SettleAccountRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SettleAccountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SettleAccountRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SettleAccountRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SettleAccountRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SettleAccountRequest)
    MergeFrom(*source);
  }
}

void SettleAccountRequest::MergeFrom(const SettleAccountRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SettleAccountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.itemnum() != 0) {
    set_itemnum(from.itemnum());
  }
  if (from.number() != 0) {
    set_number(from.number());
  }
}

void SettleAccountRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SettleAccountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SettleAccountRequest::CopyFrom(const SettleAccountRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SettleAccountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SettleAccountRequest::IsInitialized() const {
  return true;
}

void SettleAccountRequest::Swap(SettleAccountRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SettleAccountRequest::InternalSwap(SettleAccountRequest* other) {
  using std::swap;
  swap(itemnum_, other->itemnum_);
  swap(number_, other->number_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SettleAccountRequest::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SettleAccountResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SettleAccountResponse::kSuccessFieldNumber;
const int SettleAccountResponse::kIdFieldNumber;
const int SettleAccountResponse::kNumberFieldNumber;
const int SettleAccountResponse::kPriceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SettleAccountResponse::SettleAccountResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsSettleAccountResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SettleAccountResponse)
}
SettleAccountResponse::SettleAccountResponse(const SettleAccountResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&success_, &from.success_,
    static_cast<size_t>(reinterpret_cast<char*>(&price_) -
    reinterpret_cast<char*>(&success_)) + sizeof(price_));
  // @@protoc_insertion_point(copy_constructor:SettleAccountResponse)
}

void SettleAccountResponse::SharedCtor() {
  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&price_) -
      reinterpret_cast<char*>(&success_)) + sizeof(price_));
  _cached_size_ = 0;
}

SettleAccountResponse::~SettleAccountResponse() {
  // @@protoc_insertion_point(destructor:SettleAccountResponse)
  SharedDtor();
}

void SettleAccountResponse::SharedDtor() {
}

void SettleAccountResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SettleAccountResponse::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SettleAccountResponse& SettleAccountResponse::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsSettleAccountResponse();
  return *internal_default_instance();
}

SettleAccountResponse* SettleAccountResponse::New(::google::protobuf::Arena* arena) const {
  SettleAccountResponse* n = new SettleAccountResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SettleAccountResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:SettleAccountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&price_) -
      reinterpret_cast<char*>(&success_)) + sizeof(price_));
  _internal_metadata_.Clear();
}

bool SettleAccountResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SettleAccountResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Number = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 price = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SettleAccountResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SettleAccountResponse)
  return false;
#undef DO_
}

void SettleAccountResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SettleAccountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // uint32 Id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->id(), output);
  }

  // uint32 Number = 3;
  if (this->number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->number(), output);
  }

  // uint32 price = 4;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->price(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SettleAccountResponse)
}

::google::protobuf::uint8* SettleAccountResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SettleAccountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // uint32 Id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->id(), target);
  }

  // uint32 Number = 3;
  if (this->number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->number(), target);
  }

  // uint32 price = 4;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->price(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SettleAccountResponse)
  return target;
}

size_t SettleAccountResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SettleAccountResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  // uint32 Id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // uint32 Number = 3;
  if (this->number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->number());
  }

  // uint32 price = 4;
  if (this->price() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->price());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SettleAccountResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SettleAccountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SettleAccountResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SettleAccountResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SettleAccountResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SettleAccountResponse)
    MergeFrom(*source);
  }
}

void SettleAccountResponse::MergeFrom(const SettleAccountResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SettleAccountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    set_success(from.success());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.number() != 0) {
    set_number(from.number());
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
}

void SettleAccountResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SettleAccountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SettleAccountResponse::CopyFrom(const SettleAccountResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SettleAccountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SettleAccountResponse::IsInitialized() const {
  return true;
}

void SettleAccountResponse::Swap(SettleAccountResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SettleAccountResponse::InternalSwap(SettleAccountResponse* other) {
  using std::swap;
  swap(success_, other->success_);
  swap(id_, other->id_);
  swap(number_, other->number_);
  swap(price_, other->price_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SettleAccountResponse::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RankingRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RankingRequest::kRankingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RankingRequest::RankingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsRankingRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RankingRequest)
}
RankingRequest::RankingRequest(const RankingRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ranking_ = from.ranking_;
  // @@protoc_insertion_point(copy_constructor:RankingRequest)
}

void RankingRequest::SharedCtor() {
  ranking_ = false;
  _cached_size_ = 0;
}

RankingRequest::~RankingRequest() {
  // @@protoc_insertion_point(destructor:RankingRequest)
  SharedDtor();
}

void RankingRequest::SharedDtor() {
}

void RankingRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RankingRequest::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RankingRequest& RankingRequest::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsRankingRequest();
  return *internal_default_instance();
}

RankingRequest* RankingRequest::New(::google::protobuf::Arena* arena) const {
  RankingRequest* n = new RankingRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RankingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RankingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ranking_ = false;
  _internal_metadata_.Clear();
}

bool RankingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RankingRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool Ranking = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ranking_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RankingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RankingRequest)
  return false;
#undef DO_
}

void RankingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RankingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Ranking = 1;
  if (this->ranking() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->ranking(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RankingRequest)
}

::google::protobuf::uint8* RankingRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RankingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Ranking = 1;
  if (this->ranking() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->ranking(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RankingRequest)
  return target;
}

size_t RankingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RankingRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool Ranking = 1;
  if (this->ranking() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RankingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RankingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RankingRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RankingRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RankingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RankingRequest)
    MergeFrom(*source);
  }
}

void RankingRequest::MergeFrom(const RankingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RankingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ranking() != 0) {
    set_ranking(from.ranking());
  }
}

void RankingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RankingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RankingRequest::CopyFrom(const RankingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RankingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RankingRequest::IsInitialized() const {
  return true;
}

void RankingRequest::Swap(RankingRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RankingRequest::InternalSwap(RankingRequest* other) {
  using std::swap;
  swap(ranking_, other->ranking_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RankingRequest::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RankingResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RankingResponse::kIdFieldNumber;
const int RankingResponse::kNameFieldNumber;
const int RankingResponse::kLevelFieldNumber;
const int RankingResponse::kRankingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RankingResponse::RankingResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsRankingResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RankingResponse)
}
RankingResponse::RankingResponse(const RankingResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&ranking_) -
    reinterpret_cast<char*>(&id_)) + sizeof(ranking_));
  // @@protoc_insertion_point(copy_constructor:RankingResponse)
}

void RankingResponse::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ranking_) -
      reinterpret_cast<char*>(&id_)) + sizeof(ranking_));
  _cached_size_ = 0;
}

RankingResponse::~RankingResponse() {
  // @@protoc_insertion_point(destructor:RankingResponse)
  SharedDtor();
}

void RankingResponse::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RankingResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RankingResponse::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RankingResponse& RankingResponse::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsRankingResponse();
  return *internal_default_instance();
}

RankingResponse* RankingResponse::New(::google::protobuf::Arena* arena) const {
  RankingResponse* n = new RankingResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RankingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:RankingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ranking_) -
      reinterpret_cast<char*>(&id_)) + sizeof(ranking_));
  _internal_metadata_.Clear();
}

bool RankingResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RankingResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RankingResponse.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Ranking = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ranking_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RankingResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RankingResponse)
  return false;
#undef DO_
}

void RankingResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RankingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RankingResponse.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // uint32 Level = 3;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->level(), output);
  }

  // uint32 Ranking = 4;
  if (this->ranking() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ranking(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RankingResponse)
}

::google::protobuf::uint8* RankingResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RankingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RankingResponse.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // uint32 Level = 3;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->level(), target);
  }

  // uint32 Ranking = 4;
  if (this->ranking() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ranking(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RankingResponse)
  return target;
}

size_t RankingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RankingResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // uint32 Level = 3;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // uint32 Ranking = 4;
  if (this->ranking() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ranking());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RankingResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RankingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RankingResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RankingResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RankingResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RankingResponse)
    MergeFrom(*source);
  }
}

void RankingResponse::MergeFrom(const RankingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RankingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.ranking() != 0) {
    set_ranking(from.ranking());
  }
}

void RankingResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RankingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RankingResponse::CopyFrom(const RankingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RankingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RankingResponse::IsInitialized() const {
  return true;
}

void RankingResponse::Swap(RankingResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RankingResponse::InternalSwap(RankingResponse* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(id_, other->id_);
  swap(level_, other->level_);
  swap(ranking_, other->ranking_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RankingResponse::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegisterRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterRequest::kAccountFieldNumber;
const int RegisterRequest::kPasswdFieldNumber;
const int RegisterRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterRequest::RegisterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsRegisterRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RegisterRequest)
}
RegisterRequest::RegisterRequest(const RegisterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account().size() > 0) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  passwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.passwd().size() > 0) {
    passwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passwd_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:RegisterRequest)
}

void RegisterRequest::SharedCtor() {
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RegisterRequest::~RegisterRequest() {
  // @@protoc_insertion_point(destructor:RegisterRequest)
  SharedDtor();
}

void RegisterRequest::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RegisterRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegisterRequest::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisterRequest& RegisterRequest::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsRegisterRequest();
  return *internal_default_instance();
}

RegisterRequest* RegisterRequest::New(::google::protobuf::Arena* arena) const {
  RegisterRequest* n = new RegisterRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RegisterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RegisterRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), static_cast<int>(this->account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RegisterRequest.Account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Passwd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_passwd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->passwd().data(), static_cast<int>(this->passwd().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RegisterRequest.Passwd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RegisterRequest.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RegisterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RegisterRequest)
  return false;
#undef DO_
}

void RegisterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Account = 1;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RegisterRequest.Account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  // string Passwd = 2;
  if (this->passwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passwd().data(), static_cast<int>(this->passwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RegisterRequest.Passwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->passwd(), output);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RegisterRequest.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RegisterRequest)
}

::google::protobuf::uint8* RegisterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Account = 1;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RegisterRequest.Account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // string Passwd = 2;
  if (this->passwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passwd().data(), static_cast<int>(this->passwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RegisterRequest.Passwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->passwd(), target);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RegisterRequest.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RegisterRequest)
  return target;
}

size_t RegisterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RegisterRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Account = 1;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // string Passwd = 2;
  if (this->passwd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->passwd());
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegisterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RegisterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RegisterRequest)
    MergeFrom(*source);
  }
}

void RegisterRequest::MergeFrom(const RegisterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.passwd().size() > 0) {

    passwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passwd_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void RegisterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterRequest::CopyFrom(const RegisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterRequest::IsInitialized() const {
  return true;
}

void RegisterRequest::Swap(RegisterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterRequest::InternalSwap(RegisterRequest* other) {
  using std::swap;
  account_.Swap(&other->account_);
  passwd_.Swap(&other->passwd_);
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegisterRequest::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegisterResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterResponse::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterResponse::RegisterResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsRegisterResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RegisterResponse)
}
RegisterResponse::RegisterResponse(const RegisterResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:RegisterResponse)
}

void RegisterResponse::SharedCtor() {
  success_ = false;
  _cached_size_ = 0;
}

RegisterResponse::~RegisterResponse() {
  // @@protoc_insertion_point(destructor:RegisterResponse)
  SharedDtor();
}

void RegisterResponse::SharedDtor() {
}

void RegisterResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegisterResponse::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisterResponse& RegisterResponse::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsRegisterResponse();
  return *internal_default_instance();
}

RegisterResponse* RegisterResponse::New(::google::protobuf::Arena* arena) const {
  RegisterResponse* n = new RegisterResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegisterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:RegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _internal_metadata_.Clear();
}

bool RegisterResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RegisterResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool Success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RegisterResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RegisterResponse)
  return false;
#undef DO_
}

void RegisterResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RegisterResponse)
}

::google::protobuf::uint8* RegisterResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RegisterResponse)
  return target;
}

size_t RegisterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RegisterResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool Success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegisterResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RegisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RegisterResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RegisterResponse)
    MergeFrom(*source);
  }
}

void RegisterResponse::MergeFrom(const RegisterResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RegisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    set_success(from.success());
  }
}

void RegisterResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterResponse::CopyFrom(const RegisterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterResponse::IsInitialized() const {
  return true;
}

void RegisterResponse::Swap(RegisterResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterResponse::InternalSwap(RegisterResponse* other) {
  using std::swap;
  swap(success_, other->success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegisterResponse::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Request::InitAsDefaultInstance() {
  ::_Request_default_instance_._instance.get_mutable()->login_ = const_cast< ::LoginRequest*>(
      ::LoginRequest::internal_default_instance());
  ::_Request_default_instance_._instance.get_mutable()->elfin_ = const_cast< ::ElfinRequest*>(
      ::ElfinRequest::internal_default_instance());
  ::_Request_default_instance_._instance.get_mutable()->roll_ = const_cast< ::RollRequest*>(
      ::RollRequest::internal_default_instance());
  ::_Request_default_instance_._instance.get_mutable()->tree_ = const_cast< ::TreeRequest*>(
      ::TreeRequest::internal_default_instance());
  ::_Request_default_instance_._instance.get_mutable()->resource_ = const_cast< ::ResourceRequest*>(
      ::ResourceRequest::internal_default_instance());
  ::_Request_default_instance_._instance.get_mutable()->tasks_ = const_cast< ::TasksRequest*>(
      ::TasksRequest::internal_default_instance());
  ::_Request_default_instance_._instance.get_mutable()->mails_ = const_cast< ::MailsRequest*>(
      ::MailsRequest::internal_default_instance());
  ::_Request_default_instance_._instance.get_mutable()->sun_ = const_cast< ::SunRequest*>(
      ::SunRequest::internal_default_instance());
  ::_Request_default_instance_._instance.get_mutable()->treeenchantment_ = const_cast< ::TreeEnchantmentRequest*>(
      ::TreeEnchantmentRequest::internal_default_instance());
  ::_Request_default_instance_._instance.get_mutable()->storeall_ = const_cast< ::StoreAllRequest*>(
      ::StoreAllRequest::internal_default_instance());
  ::_Request_default_instance_._instance.get_mutable()->storeequ_ = const_cast< ::StoreEquRequest*>(
      ::StoreEquRequest::internal_default_instance());
  ::_Request_default_instance_._instance.get_mutable()->storewater_ = const_cast< ::StoreWaterRequest*>(
      ::StoreWaterRequest::internal_default_instance());
  ::_Request_default_instance_._instance.get_mutable()->storespeprops_ = const_cast< ::StoreSpePropsRequest*>(
      ::StoreSpePropsRequest::internal_default_instance());
  ::_Request_default_instance_._instance.get_mutable()->warehouse_ = const_cast< ::WarehouseRequest*>(
      ::WarehouseRequest::internal_default_instance());
  ::_Request_default_instance_._instance.get_mutable()->delmail_ = const_cast< ::DelMailRequest*>(
      ::DelMailRequest::internal_default_instance());
  ::_Request_default_instance_._instance.get_mutable()->claimedtask_ = const_cast< ::ClaimedTaskRequest*>(
      ::ClaimedTaskRequest::internal_default_instance());
  ::_Request_default_instance_._instance.get_mutable()->rectaskaward_ = const_cast< ::RecTaskAwardRequest*>(
      ::RecTaskAwardRequest::internal_default_instance());
  ::_Request_default_instance_._instance.get_mutable()->friends_ = const_cast< ::FriendsRequest*>(
      ::FriendsRequest::internal_default_instance());
  ::_Request_default_instance_._instance.get_mutable()->enemies_ = const_cast< ::EnemiesRequest*>(
      ::EnemiesRequest::internal_default_instance());
  ::_Request_default_instance_._instance.get_mutable()->plunder_ = const_cast< ::PlunderRequest*>(
      ::PlunderRequest::internal_default_instance());
  ::_Request_default_instance_._instance.get_mutable()->useitem_ = const_cast< ::UseItemRequest*>(
      ::UseItemRequest::internal_default_instance());
  ::_Request_default_instance_._instance.get_mutable()->settleaccount_ = const_cast< ::SettleAccountRequest*>(
      ::SettleAccountRequest::internal_default_instance());
  ::_Request_default_instance_._instance.get_mutable()->ranking_ = const_cast< ::RankingRequest*>(
      ::RankingRequest::internal_default_instance());
  ::_Request_default_instance_._instance.get_mutable()->forgetskill_ = const_cast< ::ForgetSkillRequest*>(
      ::ForgetSkillRequest::internal_default_instance());
  ::_Request_default_instance_._instance.get_mutable()->register__ = const_cast< ::RegisterRequest*>(
      ::RegisterRequest::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request::kLoginFieldNumber;
const int Request::kElfinFieldNumber;
const int Request::kRollFieldNumber;
const int Request::kTreeFieldNumber;
const int Request::kResourceFieldNumber;
const int Request::kTasksFieldNumber;
const int Request::kMailsFieldNumber;
const int Request::kSunFieldNumber;
const int Request::kTreeEnchantmentFieldNumber;
const int Request::kStoreAllFieldNumber;
const int Request::kStoreEquFieldNumber;
const int Request::kStoreWaterFieldNumber;
const int Request::kStoreSpePropsFieldNumber;
const int Request::kWarehouseFieldNumber;
const int Request::kDelMailFieldNumber;
const int Request::kClaimedTaskFieldNumber;
const int Request::kRecTaskAwardFieldNumber;
const int Request::kFriendsFieldNumber;
const int Request::kEnemiesFieldNumber;
const int Request::kPlunderFieldNumber;
const int Request::kUseItemFieldNumber;
const int Request::kSettleAccountFieldNumber;
const int Request::kRankingFieldNumber;
const int Request::kForgetSkillFieldNumber;
const int Request::kRegisterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request::Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Request)
}
Request::Request(const Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_login()) {
    login_ = new ::LoginRequest(*from.login_);
  } else {
    login_ = NULL;
  }
  if (from.has_elfin()) {
    elfin_ = new ::ElfinRequest(*from.elfin_);
  } else {
    elfin_ = NULL;
  }
  if (from.has_roll()) {
    roll_ = new ::RollRequest(*from.roll_);
  } else {
    roll_ = NULL;
  }
  if (from.has_tree()) {
    tree_ = new ::TreeRequest(*from.tree_);
  } else {
    tree_ = NULL;
  }
  if (from.has_resource()) {
    resource_ = new ::ResourceRequest(*from.resource_);
  } else {
    resource_ = NULL;
  }
  if (from.has_tasks()) {
    tasks_ = new ::TasksRequest(*from.tasks_);
  } else {
    tasks_ = NULL;
  }
  if (from.has_mails()) {
    mails_ = new ::MailsRequest(*from.mails_);
  } else {
    mails_ = NULL;
  }
  if (from.has_sun()) {
    sun_ = new ::SunRequest(*from.sun_);
  } else {
    sun_ = NULL;
  }
  if (from.has_treeenchantment()) {
    treeenchantment_ = new ::TreeEnchantmentRequest(*from.treeenchantment_);
  } else {
    treeenchantment_ = NULL;
  }
  if (from.has_storeall()) {
    storeall_ = new ::StoreAllRequest(*from.storeall_);
  } else {
    storeall_ = NULL;
  }
  if (from.has_storeequ()) {
    storeequ_ = new ::StoreEquRequest(*from.storeequ_);
  } else {
    storeequ_ = NULL;
  }
  if (from.has_storewater()) {
    storewater_ = new ::StoreWaterRequest(*from.storewater_);
  } else {
    storewater_ = NULL;
  }
  if (from.has_storespeprops()) {
    storespeprops_ = new ::StoreSpePropsRequest(*from.storespeprops_);
  } else {
    storespeprops_ = NULL;
  }
  if (from.has_warehouse()) {
    warehouse_ = new ::WarehouseRequest(*from.warehouse_);
  } else {
    warehouse_ = NULL;
  }
  if (from.has_delmail()) {
    delmail_ = new ::DelMailRequest(*from.delmail_);
  } else {
    delmail_ = NULL;
  }
  if (from.has_claimedtask()) {
    claimedtask_ = new ::ClaimedTaskRequest(*from.claimedtask_);
  } else {
    claimedtask_ = NULL;
  }
  if (from.has_rectaskaward()) {
    rectaskaward_ = new ::RecTaskAwardRequest(*from.rectaskaward_);
  } else {
    rectaskaward_ = NULL;
  }
  if (from.has_friends()) {
    friends_ = new ::FriendsRequest(*from.friends_);
  } else {
    friends_ = NULL;
  }
  if (from.has_enemies()) {
    enemies_ = new ::EnemiesRequest(*from.enemies_);
  } else {
    enemies_ = NULL;
  }
  if (from.has_plunder()) {
    plunder_ = new ::PlunderRequest(*from.plunder_);
  } else {
    plunder_ = NULL;
  }
  if (from.has_useitem()) {
    useitem_ = new ::UseItemRequest(*from.useitem_);
  } else {
    useitem_ = NULL;
  }
  if (from.has_settleaccount()) {
    settleaccount_ = new ::SettleAccountRequest(*from.settleaccount_);
  } else {
    settleaccount_ = NULL;
  }
  if (from.has_ranking()) {
    ranking_ = new ::RankingRequest(*from.ranking_);
  } else {
    ranking_ = NULL;
  }
  if (from.has_forgetskill()) {
    forgetskill_ = new ::ForgetSkillRequest(*from.forgetskill_);
  } else {
    forgetskill_ = NULL;
  }
  if (from.has_register_()) {
    register__ = new ::RegisterRequest(*from.register__);
  } else {
    register__ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Request)
}

void Request::SharedCtor() {
  ::memset(&login_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&register__) -
      reinterpret_cast<char*>(&login_)) + sizeof(register__));
  _cached_size_ = 0;
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:Request)
  SharedDtor();
}

void Request::SharedDtor() {
  if (this != internal_default_instance()) delete login_;
  if (this != internal_default_instance()) delete elfin_;
  if (this != internal_default_instance()) delete roll_;
  if (this != internal_default_instance()) delete tree_;
  if (this != internal_default_instance()) delete resource_;
  if (this != internal_default_instance()) delete tasks_;
  if (this != internal_default_instance()) delete mails_;
  if (this != internal_default_instance()) delete sun_;
  if (this != internal_default_instance()) delete treeenchantment_;
  if (this != internal_default_instance()) delete storeall_;
  if (this != internal_default_instance()) delete storeequ_;
  if (this != internal_default_instance()) delete storewater_;
  if (this != internal_default_instance()) delete storespeprops_;
  if (this != internal_default_instance()) delete warehouse_;
  if (this != internal_default_instance()) delete delmail_;
  if (this != internal_default_instance()) delete claimedtask_;
  if (this != internal_default_instance()) delete rectaskaward_;
  if (this != internal_default_instance()) delete friends_;
  if (this != internal_default_instance()) delete enemies_;
  if (this != internal_default_instance()) delete plunder_;
  if (this != internal_default_instance()) delete useitem_;
  if (this != internal_default_instance()) delete settleaccount_;
  if (this != internal_default_instance()) delete ranking_;
  if (this != internal_default_instance()) delete forgetskill_;
  if (this != internal_default_instance()) delete register__;
}

void Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Request::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Request& Request::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsRequest();
  return *internal_default_instance();
}

Request* Request::New(::google::protobuf::Arena* arena) const {
  Request* n = new Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && login_ != NULL) {
    delete login_;
  }
  login_ = NULL;
  if (GetArenaNoVirtual() == NULL && elfin_ != NULL) {
    delete elfin_;
  }
  elfin_ = NULL;
  if (GetArenaNoVirtual() == NULL && roll_ != NULL) {
    delete roll_;
  }
  roll_ = NULL;
  if (GetArenaNoVirtual() == NULL && tree_ != NULL) {
    delete tree_;
  }
  tree_ = NULL;
  if (GetArenaNoVirtual() == NULL && resource_ != NULL) {
    delete resource_;
  }
  resource_ = NULL;
  if (GetArenaNoVirtual() == NULL && tasks_ != NULL) {
    delete tasks_;
  }
  tasks_ = NULL;
  if (GetArenaNoVirtual() == NULL && mails_ != NULL) {
    delete mails_;
  }
  mails_ = NULL;
  if (GetArenaNoVirtual() == NULL && sun_ != NULL) {
    delete sun_;
  }
  sun_ = NULL;
  if (GetArenaNoVirtual() == NULL && treeenchantment_ != NULL) {
    delete treeenchantment_;
  }
  treeenchantment_ = NULL;
  if (GetArenaNoVirtual() == NULL && storeall_ != NULL) {
    delete storeall_;
  }
  storeall_ = NULL;
  if (GetArenaNoVirtual() == NULL && storeequ_ != NULL) {
    delete storeequ_;
  }
  storeequ_ = NULL;
  if (GetArenaNoVirtual() == NULL && storewater_ != NULL) {
    delete storewater_;
  }
  storewater_ = NULL;
  if (GetArenaNoVirtual() == NULL && storespeprops_ != NULL) {
    delete storespeprops_;
  }
  storespeprops_ = NULL;
  if (GetArenaNoVirtual() == NULL && warehouse_ != NULL) {
    delete warehouse_;
  }
  warehouse_ = NULL;
  if (GetArenaNoVirtual() == NULL && delmail_ != NULL) {
    delete delmail_;
  }
  delmail_ = NULL;
  if (GetArenaNoVirtual() == NULL && claimedtask_ != NULL) {
    delete claimedtask_;
  }
  claimedtask_ = NULL;
  if (GetArenaNoVirtual() == NULL && rectaskaward_ != NULL) {
    delete rectaskaward_;
  }
  rectaskaward_ = NULL;
  if (GetArenaNoVirtual() == NULL && friends_ != NULL) {
    delete friends_;
  }
  friends_ = NULL;
  if (GetArenaNoVirtual() == NULL && enemies_ != NULL) {
    delete enemies_;
  }
  enemies_ = NULL;
  if (GetArenaNoVirtual() == NULL && plunder_ != NULL) {
    delete plunder_;
  }
  plunder_ = NULL;
  if (GetArenaNoVirtual() == NULL && useitem_ != NULL) {
    delete useitem_;
  }
  useitem_ = NULL;
  if (GetArenaNoVirtual() == NULL && settleaccount_ != NULL) {
    delete settleaccount_;
  }
  settleaccount_ = NULL;
  if (GetArenaNoVirtual() == NULL && ranking_ != NULL) {
    delete ranking_;
  }
  ranking_ = NULL;
  if (GetArenaNoVirtual() == NULL && forgetskill_ != NULL) {
    delete forgetskill_;
  }
  forgetskill_ = NULL;
  if (GetArenaNoVirtual() == NULL && register__ != NULL) {
    delete register__;
  }
  register__ = NULL;
  _internal_metadata_.Clear();
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .LoginRequest Login = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_login()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ElfinRequest Elfin = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_elfin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .RollRequest Roll = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_roll()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TreeRequest Tree = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tree()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ResourceRequest Resource = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resource()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TasksRequest Tasks = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tasks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .MailsRequest Mails = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mails()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .SunRequest Sun = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sun()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TreeEnchantmentRequest TreeEnchantment = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_treeenchantment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .StoreAllRequest StoreAll = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_storeall()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .StoreEquRequest StoreEqu = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_storeequ()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .StoreWaterRequest StoreWater = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_storewater()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .StoreSpePropsRequest StoreSpeProps = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_storespeprops()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .WarehouseRequest Warehouse = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_warehouse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .DelMailRequest DelMail = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_delmail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ClaimedTaskRequest ClaimedTask = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_claimedtask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .RecTaskAwardRequest RecTaskAward = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rectaskaward()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .FriendsRequest Friends = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_friends()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .EnemiesRequest Enemies = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_enemies()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PlunderRequest Plunder = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_plunder()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .UseItemRequest UseItem = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_useitem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .SettleAccountRequest SettleAccount = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_settleaccount()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .RankingRequest Ranking = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ranking()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ForgetSkillRequest ForgetSkill = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_forgetskill()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .RegisterRequest Register = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_register_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Request)
  return false;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LoginRequest Login = 1;
  if (this->has_login()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->login_, output);
  }

  // .ElfinRequest Elfin = 2;
  if (this->has_elfin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->elfin_, output);
  }

  // .RollRequest Roll = 3;
  if (this->has_roll()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->roll_, output);
  }

  // .TreeRequest Tree = 4;
  if (this->has_tree()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->tree_, output);
  }

  // .ResourceRequest Resource = 5;
  if (this->has_resource()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->resource_, output);
  }

  // .TasksRequest Tasks = 6;
  if (this->has_tasks()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->tasks_, output);
  }

  // .MailsRequest Mails = 7;
  if (this->has_mails()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->mails_, output);
  }

  // .SunRequest Sun = 8;
  if (this->has_sun()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->sun_, output);
  }

  // .TreeEnchantmentRequest TreeEnchantment = 9;
  if (this->has_treeenchantment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->treeenchantment_, output);
  }

  // .StoreAllRequest StoreAll = 10;
  if (this->has_storeall()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->storeall_, output);
  }

  // .StoreEquRequest StoreEqu = 11;
  if (this->has_storeequ()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->storeequ_, output);
  }

  // .StoreWaterRequest StoreWater = 12;
  if (this->has_storewater()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->storewater_, output);
  }

  // .StoreSpePropsRequest StoreSpeProps = 13;
  if (this->has_storespeprops()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->storespeprops_, output);
  }

  // .WarehouseRequest Warehouse = 14;
  if (this->has_warehouse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->warehouse_, output);
  }

  // .DelMailRequest DelMail = 15;
  if (this->has_delmail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->delmail_, output);
  }

  // .ClaimedTaskRequest ClaimedTask = 16;
  if (this->has_claimedtask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *this->claimedtask_, output);
  }

  // .RecTaskAwardRequest RecTaskAward = 17;
  if (this->has_rectaskaward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, *this->rectaskaward_, output);
  }

  // .FriendsRequest Friends = 18;
  if (this->has_friends()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, *this->friends_, output);
  }

  // .EnemiesRequest Enemies = 19;
  if (this->has_enemies()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, *this->enemies_, output);
  }

  // .PlunderRequest Plunder = 20;
  if (this->has_plunder()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->plunder_, output);
  }

  // .UseItemRequest UseItem = 21;
  if (this->has_useitem()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, *this->useitem_, output);
  }

  // .SettleAccountRequest SettleAccount = 22;
  if (this->has_settleaccount()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, *this->settleaccount_, output);
  }

  // .RankingRequest Ranking = 23;
  if (this->has_ranking()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, *this->ranking_, output);
  }

  // .ForgetSkillRequest ForgetSkill = 24;
  if (this->has_forgetskill()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, *this->forgetskill_, output);
  }

  // .RegisterRequest Register = 25;
  if (this->has_register_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, *this->register__, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Request)
}

::google::protobuf::uint8* Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LoginRequest Login = 1;
  if (this->has_login()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->login_, deterministic, target);
  }

  // .ElfinRequest Elfin = 2;
  if (this->has_elfin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->elfin_, deterministic, target);
  }

  // .RollRequest Roll = 3;
  if (this->has_roll()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->roll_, deterministic, target);
  }

  // .TreeRequest Tree = 4;
  if (this->has_tree()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->tree_, deterministic, target);
  }

  // .ResourceRequest Resource = 5;
  if (this->has_resource()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->resource_, deterministic, target);
  }

  // .TasksRequest Tasks = 6;
  if (this->has_tasks()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->tasks_, deterministic, target);
  }

  // .MailsRequest Mails = 7;
  if (this->has_mails()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->mails_, deterministic, target);
  }

  // .SunRequest Sun = 8;
  if (this->has_sun()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->sun_, deterministic, target);
  }

  // .TreeEnchantmentRequest TreeEnchantment = 9;
  if (this->has_treeenchantment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *this->treeenchantment_, deterministic, target);
  }

  // .StoreAllRequest StoreAll = 10;
  if (this->has_storeall()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, *this->storeall_, deterministic, target);
  }

  // .StoreEquRequest StoreEqu = 11;
  if (this->has_storeequ()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, *this->storeequ_, deterministic, target);
  }

  // .StoreWaterRequest StoreWater = 12;
  if (this->has_storewater()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, *this->storewater_, deterministic, target);
  }

  // .StoreSpePropsRequest StoreSpeProps = 13;
  if (this->has_storespeprops()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, *this->storespeprops_, deterministic, target);
  }

  // .WarehouseRequest Warehouse = 14;
  if (this->has_warehouse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, *this->warehouse_, deterministic, target);
  }

  // .DelMailRequest DelMail = 15;
  if (this->has_delmail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, *this->delmail_, deterministic, target);
  }

  // .ClaimedTaskRequest ClaimedTask = 16;
  if (this->has_claimedtask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, *this->claimedtask_, deterministic, target);
  }

  // .RecTaskAwardRequest RecTaskAward = 17;
  if (this->has_rectaskaward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, *this->rectaskaward_, deterministic, target);
  }

  // .FriendsRequest Friends = 18;
  if (this->has_friends()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, *this->friends_, deterministic, target);
  }

  // .EnemiesRequest Enemies = 19;
  if (this->has_enemies()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, *this->enemies_, deterministic, target);
  }

  // .PlunderRequest Plunder = 20;
  if (this->has_plunder()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, *this->plunder_, deterministic, target);
  }

  // .UseItemRequest UseItem = 21;
  if (this->has_useitem()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, *this->useitem_, deterministic, target);
  }

  // .SettleAccountRequest SettleAccount = 22;
  if (this->has_settleaccount()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, *this->settleaccount_, deterministic, target);
  }

  // .RankingRequest Ranking = 23;
  if (this->has_ranking()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, *this->ranking_, deterministic, target);
  }

  // .ForgetSkillRequest ForgetSkill = 24;
  if (this->has_forgetskill()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, *this->forgetskill_, deterministic, target);
  }

  // .RegisterRequest Register = 25;
  if (this->has_register_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, *this->register__, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Request)
  return target;
}

size_t Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Request)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .LoginRequest Login = 1;
  if (this->has_login()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->login_);
  }

  // .ElfinRequest Elfin = 2;
  if (this->has_elfin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->elfin_);
  }

  // .RollRequest Roll = 3;
  if (this->has_roll()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->roll_);
  }

  // .TreeRequest Tree = 4;
  if (this->has_tree()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->tree_);
  }

  // .ResourceRequest Resource = 5;
  if (this->has_resource()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->resource_);
  }

  // .TasksRequest Tasks = 6;
  if (this->has_tasks()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->tasks_);
  }

  // .MailsRequest Mails = 7;
  if (this->has_mails()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->mails_);
  }

  // .SunRequest Sun = 8;
  if (this->has_sun()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->sun_);
  }

  // .TreeEnchantmentRequest TreeEnchantment = 9;
  if (this->has_treeenchantment()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->treeenchantment_);
  }

  // .StoreAllRequest StoreAll = 10;
  if (this->has_storeall()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->storeall_);
  }

  // .StoreEquRequest StoreEqu = 11;
  if (this->has_storeequ()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->storeequ_);
  }

  // .StoreWaterRequest StoreWater = 12;
  if (this->has_storewater()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->storewater_);
  }

  // .StoreSpePropsRequest StoreSpeProps = 13;
  if (this->has_storespeprops()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->storespeprops_);
  }

  // .WarehouseRequest Warehouse = 14;
  if (this->has_warehouse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->warehouse_);
  }

  // .DelMailRequest DelMail = 15;
  if (this->has_delmail()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->delmail_);
  }

  // .ClaimedTaskRequest ClaimedTask = 16;
  if (this->has_claimedtask()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->claimedtask_);
  }

  // .RecTaskAwardRequest RecTaskAward = 17;
  if (this->has_rectaskaward()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->rectaskaward_);
  }

  // .FriendsRequest Friends = 18;
  if (this->has_friends()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->friends_);
  }

  // .EnemiesRequest Enemies = 19;
  if (this->has_enemies()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->enemies_);
  }

  // .PlunderRequest Plunder = 20;
  if (this->has_plunder()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->plunder_);
  }

  // .UseItemRequest UseItem = 21;
  if (this->has_useitem()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->useitem_);
  }

  // .SettleAccountRequest SettleAccount = 22;
  if (this->has_settleaccount()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->settleaccount_);
  }

  // .RankingRequest Ranking = 23;
  if (this->has_ranking()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->ranking_);
  }

  // .ForgetSkillRequest ForgetSkill = 24;
  if (this->has_forgetskill()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->forgetskill_);
  }

  // .RegisterRequest Register = 25;
  if (this->has_register_()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->register__);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Request)
  GOOGLE_DCHECK_NE(&from, this);
  const Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Request)
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_login()) {
    mutable_login()->::LoginRequest::MergeFrom(from.login());
  }
  if (from.has_elfin()) {
    mutable_elfin()->::ElfinRequest::MergeFrom(from.elfin());
  }
  if (from.has_roll()) {
    mutable_roll()->::RollRequest::MergeFrom(from.roll());
  }
  if (from.has_tree()) {
    mutable_tree()->::TreeRequest::MergeFrom(from.tree());
  }
  if (from.has_resource()) {
    mutable_resource()->::ResourceRequest::MergeFrom(from.resource());
  }
  if (from.has_tasks()) {
    mutable_tasks()->::TasksRequest::MergeFrom(from.tasks());
  }
  if (from.has_mails()) {
    mutable_mails()->::MailsRequest::MergeFrom(from.mails());
  }
  if (from.has_sun()) {
    mutable_sun()->::SunRequest::MergeFrom(from.sun());
  }
  if (from.has_treeenchantment()) {
    mutable_treeenchantment()->::TreeEnchantmentRequest::MergeFrom(from.treeenchantment());
  }
  if (from.has_storeall()) {
    mutable_storeall()->::StoreAllRequest::MergeFrom(from.storeall());
  }
  if (from.has_storeequ()) {
    mutable_storeequ()->::StoreEquRequest::MergeFrom(from.storeequ());
  }
  if (from.has_storewater()) {
    mutable_storewater()->::StoreWaterRequest::MergeFrom(from.storewater());
  }
  if (from.has_storespeprops()) {
    mutable_storespeprops()->::StoreSpePropsRequest::MergeFrom(from.storespeprops());
  }
  if (from.has_warehouse()) {
    mutable_warehouse()->::WarehouseRequest::MergeFrom(from.warehouse());
  }
  if (from.has_delmail()) {
    mutable_delmail()->::DelMailRequest::MergeFrom(from.delmail());
  }
  if (from.has_claimedtask()) {
    mutable_claimedtask()->::ClaimedTaskRequest::MergeFrom(from.claimedtask());
  }
  if (from.has_rectaskaward()) {
    mutable_rectaskaward()->::RecTaskAwardRequest::MergeFrom(from.rectaskaward());
  }
  if (from.has_friends()) {
    mutable_friends()->::FriendsRequest::MergeFrom(from.friends());
  }
  if (from.has_enemies()) {
    mutable_enemies()->::EnemiesRequest::MergeFrom(from.enemies());
  }
  if (from.has_plunder()) {
    mutable_plunder()->::PlunderRequest::MergeFrom(from.plunder());
  }
  if (from.has_useitem()) {
    mutable_useitem()->::UseItemRequest::MergeFrom(from.useitem());
  }
  if (from.has_settleaccount()) {
    mutable_settleaccount()->::SettleAccountRequest::MergeFrom(from.settleaccount());
  }
  if (from.has_ranking()) {
    mutable_ranking()->::RankingRequest::MergeFrom(from.ranking());
  }
  if (from.has_forgetskill()) {
    mutable_forgetskill()->::ForgetSkillRequest::MergeFrom(from.forgetskill());
  }
  if (from.has_register_()) {
    mutable_register_()->::RegisterRequest::MergeFrom(from.register_());
  }
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  return true;
}

void Request::Swap(Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request::InternalSwap(Request* other) {
  using std::swap;
  swap(login_, other->login_);
  swap(elfin_, other->elfin_);
  swap(roll_, other->roll_);
  swap(tree_, other->tree_);
  swap(resource_, other->resource_);
  swap(tasks_, other->tasks_);
  swap(mails_, other->mails_);
  swap(sun_, other->sun_);
  swap(treeenchantment_, other->treeenchantment_);
  swap(storeall_, other->storeall_);
  swap(storeequ_, other->storeequ_);
  swap(storewater_, other->storewater_);
  swap(storespeprops_, other->storespeprops_);
  swap(warehouse_, other->warehouse_);
  swap(delmail_, other->delmail_);
  swap(claimedtask_, other->claimedtask_);
  swap(rectaskaward_, other->rectaskaward_);
  swap(friends_, other->friends_);
  swap(enemies_, other->enemies_);
  swap(plunder_, other->plunder_);
  swap(useitem_, other->useitem_);
  swap(settleaccount_, other->settleaccount_);
  swap(ranking_, other->ranking_);
  swap(forgetskill_, other->forgetskill_);
  swap(register__, other->register__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Request::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Response::InitAsDefaultInstance() {
  ::_Response_default_instance_._instance.get_mutable()->login_ = const_cast< ::LoginResponse*>(
      ::LoginResponse::internal_default_instance());
  ::_Response_default_instance_._instance.get_mutable()->elfin_ = const_cast< ::ElfinResponse*>(
      ::ElfinResponse::internal_default_instance());
  ::_Response_default_instance_._instance.get_mutable()->roll_ = const_cast< ::RollResponse*>(
      ::RollResponse::internal_default_instance());
  ::_Response_default_instance_._instance.get_mutable()->tree_ = const_cast< ::TreeResponse*>(
      ::TreeResponse::internal_default_instance());
  ::_Response_default_instance_._instance.get_mutable()->resource_ = const_cast< ::ResourceResponse*>(
      ::ResourceResponse::internal_default_instance());
  ::_Response_default_instance_._instance.get_mutable()->tasks_ = const_cast< ::TasksResponse*>(
      ::TasksResponse::internal_default_instance());
  ::_Response_default_instance_._instance.get_mutable()->mails_ = const_cast< ::MailsResponse*>(
      ::MailsResponse::internal_default_instance());
  ::_Response_default_instance_._instance.get_mutable()->sun_ = const_cast< ::SunResponse*>(
      ::SunResponse::internal_default_instance());
  ::_Response_default_instance_._instance.get_mutable()->treeenchantment_ = const_cast< ::TreeEnchantmentResponse*>(
      ::TreeEnchantmentResponse::internal_default_instance());
  ::_Response_default_instance_._instance.get_mutable()->storeall_ = const_cast< ::StoreAllResponse*>(
      ::StoreAllResponse::internal_default_instance());
  ::_Response_default_instance_._instance.get_mutable()->storeequ_ = const_cast< ::StoreEquResponse*>(
      ::StoreEquResponse::internal_default_instance());
  ::_Response_default_instance_._instance.get_mutable()->storewater_ = const_cast< ::StoreWaterResponse*>(
      ::StoreWaterResponse::internal_default_instance());
  ::_Response_default_instance_._instance.get_mutable()->storespeprops_ = const_cast< ::StoreSpePropsResponse*>(
      ::StoreSpePropsResponse::internal_default_instance());
  ::_Response_default_instance_._instance.get_mutable()->warehouse_ = const_cast< ::WarehouseResponse*>(
      ::WarehouseResponse::internal_default_instance());
  ::_Response_default_instance_._instance.get_mutable()->delmail_ = const_cast< ::DelMailResponse*>(
      ::DelMailResponse::internal_default_instance());
  ::_Response_default_instance_._instance.get_mutable()->claimedtask_ = const_cast< ::ClaimedTaskResponse*>(
      ::ClaimedTaskResponse::internal_default_instance());
  ::_Response_default_instance_._instance.get_mutable()->rectaskaward_ = const_cast< ::RecTaskAwardResponse*>(
      ::RecTaskAwardResponse::internal_default_instance());
  ::_Response_default_instance_._instance.get_mutable()->friends_ = const_cast< ::FriendsResponse*>(
      ::FriendsResponse::internal_default_instance());
  ::_Response_default_instance_._instance.get_mutable()->enemies_ = const_cast< ::EnemiesResponse*>(
      ::EnemiesResponse::internal_default_instance());
  ::_Response_default_instance_._instance.get_mutable()->plunder_ = const_cast< ::PlunderResponse*>(
      ::PlunderResponse::internal_default_instance());
  ::_Response_default_instance_._instance.get_mutable()->useitem_ = const_cast< ::UseItemResponse*>(
      ::UseItemResponse::internal_default_instance());
  ::_Response_default_instance_._instance.get_mutable()->settleaccount_ = const_cast< ::SettleAccountResponse*>(
      ::SettleAccountResponse::internal_default_instance());
  ::_Response_default_instance_._instance.get_mutable()->ranking_ = const_cast< ::RankingResponse*>(
      ::RankingResponse::internal_default_instance());
  ::_Response_default_instance_._instance.get_mutable()->forgetskill_ = const_cast< ::ForgetSkillResponse*>(
      ::ForgetSkillResponse::internal_default_instance());
  ::_Response_default_instance_._instance.get_mutable()->register__ = const_cast< ::RegisterResponse*>(
      ::RegisterResponse::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response::kLoginFieldNumber;
const int Response::kElfinFieldNumber;
const int Response::kRollFieldNumber;
const int Response::kTreeFieldNumber;
const int Response::kResourceFieldNumber;
const int Response::kTasksFieldNumber;
const int Response::kMailsFieldNumber;
const int Response::kSunFieldNumber;
const int Response::kTreeEnchantmentFieldNumber;
const int Response::kStoreAllFieldNumber;
const int Response::kStoreEquFieldNumber;
const int Response::kStoreWaterFieldNumber;
const int Response::kStoreSpePropsFieldNumber;
const int Response::kWarehouseFieldNumber;
const int Response::kDelMailFieldNumber;
const int Response::kClaimedTaskFieldNumber;
const int Response::kRecTaskAwardFieldNumber;
const int Response::kFriendsFieldNumber;
const int Response::kEnemiesFieldNumber;
const int Response::kPlunderFieldNumber;
const int Response::kUseItemFieldNumber;
const int Response::kSettleAccountFieldNumber;
const int Response::kRankingFieldNumber;
const int Response::kForgetSkillFieldNumber;
const int Response::kRegisterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response::Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Response)
}
Response::Response(const Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_login()) {
    login_ = new ::LoginResponse(*from.login_);
  } else {
    login_ = NULL;
  }
  if (from.has_elfin()) {
    elfin_ = new ::ElfinResponse(*from.elfin_);
  } else {
    elfin_ = NULL;
  }
  if (from.has_roll()) {
    roll_ = new ::RollResponse(*from.roll_);
  } else {
    roll_ = NULL;
  }
  if (from.has_tree()) {
    tree_ = new ::TreeResponse(*from.tree_);
  } else {
    tree_ = NULL;
  }
  if (from.has_resource()) {
    resource_ = new ::ResourceResponse(*from.resource_);
  } else {
    resource_ = NULL;
  }
  if (from.has_tasks()) {
    tasks_ = new ::TasksResponse(*from.tasks_);
  } else {
    tasks_ = NULL;
  }
  if (from.has_mails()) {
    mails_ = new ::MailsResponse(*from.mails_);
  } else {
    mails_ = NULL;
  }
  if (from.has_sun()) {
    sun_ = new ::SunResponse(*from.sun_);
  } else {
    sun_ = NULL;
  }
  if (from.has_treeenchantment()) {
    treeenchantment_ = new ::TreeEnchantmentResponse(*from.treeenchantment_);
  } else {
    treeenchantment_ = NULL;
  }
  if (from.has_storeall()) {
    storeall_ = new ::StoreAllResponse(*from.storeall_);
  } else {
    storeall_ = NULL;
  }
  if (from.has_storeequ()) {
    storeequ_ = new ::StoreEquResponse(*from.storeequ_);
  } else {
    storeequ_ = NULL;
  }
  if (from.has_storewater()) {
    storewater_ = new ::StoreWaterResponse(*from.storewater_);
  } else {
    storewater_ = NULL;
  }
  if (from.has_storespeprops()) {
    storespeprops_ = new ::StoreSpePropsResponse(*from.storespeprops_);
  } else {
    storespeprops_ = NULL;
  }
  if (from.has_warehouse()) {
    warehouse_ = new ::WarehouseResponse(*from.warehouse_);
  } else {
    warehouse_ = NULL;
  }
  if (from.has_delmail()) {
    delmail_ = new ::DelMailResponse(*from.delmail_);
  } else {
    delmail_ = NULL;
  }
  if (from.has_claimedtask()) {
    claimedtask_ = new ::ClaimedTaskResponse(*from.claimedtask_);
  } else {
    claimedtask_ = NULL;
  }
  if (from.has_rectaskaward()) {
    rectaskaward_ = new ::RecTaskAwardResponse(*from.rectaskaward_);
  } else {
    rectaskaward_ = NULL;
  }
  if (from.has_friends()) {
    friends_ = new ::FriendsResponse(*from.friends_);
  } else {
    friends_ = NULL;
  }
  if (from.has_enemies()) {
    enemies_ = new ::EnemiesResponse(*from.enemies_);
  } else {
    enemies_ = NULL;
  }
  if (from.has_plunder()) {
    plunder_ = new ::PlunderResponse(*from.plunder_);
  } else {
    plunder_ = NULL;
  }
  if (from.has_useitem()) {
    useitem_ = new ::UseItemResponse(*from.useitem_);
  } else {
    useitem_ = NULL;
  }
  if (from.has_settleaccount()) {
    settleaccount_ = new ::SettleAccountResponse(*from.settleaccount_);
  } else {
    settleaccount_ = NULL;
  }
  if (from.has_ranking()) {
    ranking_ = new ::RankingResponse(*from.ranking_);
  } else {
    ranking_ = NULL;
  }
  if (from.has_forgetskill()) {
    forgetskill_ = new ::ForgetSkillResponse(*from.forgetskill_);
  } else {
    forgetskill_ = NULL;
  }
  if (from.has_register_()) {
    register__ = new ::RegisterResponse(*from.register__);
  } else {
    register__ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Response)
}

void Response::SharedCtor() {
  ::memset(&login_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&register__) -
      reinterpret_cast<char*>(&login_)) + sizeof(register__));
  _cached_size_ = 0;
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:Response)
  SharedDtor();
}

void Response::SharedDtor() {
  if (this != internal_default_instance()) delete login_;
  if (this != internal_default_instance()) delete elfin_;
  if (this != internal_default_instance()) delete roll_;
  if (this != internal_default_instance()) delete tree_;
  if (this != internal_default_instance()) delete resource_;
  if (this != internal_default_instance()) delete tasks_;
  if (this != internal_default_instance()) delete mails_;
  if (this != internal_default_instance()) delete sun_;
  if (this != internal_default_instance()) delete treeenchantment_;
  if (this != internal_default_instance()) delete storeall_;
  if (this != internal_default_instance()) delete storeequ_;
  if (this != internal_default_instance()) delete storewater_;
  if (this != internal_default_instance()) delete storespeprops_;
  if (this != internal_default_instance()) delete warehouse_;
  if (this != internal_default_instance()) delete delmail_;
  if (this != internal_default_instance()) delete claimedtask_;
  if (this != internal_default_instance()) delete rectaskaward_;
  if (this != internal_default_instance()) delete friends_;
  if (this != internal_default_instance()) delete enemies_;
  if (this != internal_default_instance()) delete plunder_;
  if (this != internal_default_instance()) delete useitem_;
  if (this != internal_default_instance()) delete settleaccount_;
  if (this != internal_default_instance()) delete ranking_;
  if (this != internal_default_instance()) delete forgetskill_;
  if (this != internal_default_instance()) delete register__;
}

void Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Response& Response::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsResponse();
  return *internal_default_instance();
}

Response* Response::New(::google::protobuf::Arena* arena) const {
  Response* n = new Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && login_ != NULL) {
    delete login_;
  }
  login_ = NULL;
  if (GetArenaNoVirtual() == NULL && elfin_ != NULL) {
    delete elfin_;
  }
  elfin_ = NULL;
  if (GetArenaNoVirtual() == NULL && roll_ != NULL) {
    delete roll_;
  }
  roll_ = NULL;
  if (GetArenaNoVirtual() == NULL && tree_ != NULL) {
    delete tree_;
  }
  tree_ = NULL;
  if (GetArenaNoVirtual() == NULL && resource_ != NULL) {
    delete resource_;
  }
  resource_ = NULL;
  if (GetArenaNoVirtual() == NULL && tasks_ != NULL) {
    delete tasks_;
  }
  tasks_ = NULL;
  if (GetArenaNoVirtual() == NULL && mails_ != NULL) {
    delete mails_;
  }
  mails_ = NULL;
  if (GetArenaNoVirtual() == NULL && sun_ != NULL) {
    delete sun_;
  }
  sun_ = NULL;
  if (GetArenaNoVirtual() == NULL && treeenchantment_ != NULL) {
    delete treeenchantment_;
  }
  treeenchantment_ = NULL;
  if (GetArenaNoVirtual() == NULL && storeall_ != NULL) {
    delete storeall_;
  }
  storeall_ = NULL;
  if (GetArenaNoVirtual() == NULL && storeequ_ != NULL) {
    delete storeequ_;
  }
  storeequ_ = NULL;
  if (GetArenaNoVirtual() == NULL && storewater_ != NULL) {
    delete storewater_;
  }
  storewater_ = NULL;
  if (GetArenaNoVirtual() == NULL && storespeprops_ != NULL) {
    delete storespeprops_;
  }
  storespeprops_ = NULL;
  if (GetArenaNoVirtual() == NULL && warehouse_ != NULL) {
    delete warehouse_;
  }
  warehouse_ = NULL;
  if (GetArenaNoVirtual() == NULL && delmail_ != NULL) {
    delete delmail_;
  }
  delmail_ = NULL;
  if (GetArenaNoVirtual() == NULL && claimedtask_ != NULL) {
    delete claimedtask_;
  }
  claimedtask_ = NULL;
  if (GetArenaNoVirtual() == NULL && rectaskaward_ != NULL) {
    delete rectaskaward_;
  }
  rectaskaward_ = NULL;
  if (GetArenaNoVirtual() == NULL && friends_ != NULL) {
    delete friends_;
  }
  friends_ = NULL;
  if (GetArenaNoVirtual() == NULL && enemies_ != NULL) {
    delete enemies_;
  }
  enemies_ = NULL;
  if (GetArenaNoVirtual() == NULL && plunder_ != NULL) {
    delete plunder_;
  }
  plunder_ = NULL;
  if (GetArenaNoVirtual() == NULL && useitem_ != NULL) {
    delete useitem_;
  }
  useitem_ = NULL;
  if (GetArenaNoVirtual() == NULL && settleaccount_ != NULL) {
    delete settleaccount_;
  }
  settleaccount_ = NULL;
  if (GetArenaNoVirtual() == NULL && ranking_ != NULL) {
    delete ranking_;
  }
  ranking_ = NULL;
  if (GetArenaNoVirtual() == NULL && forgetskill_ != NULL) {
    delete forgetskill_;
  }
  forgetskill_ = NULL;
  if (GetArenaNoVirtual() == NULL && register__ != NULL) {
    delete register__;
  }
  register__ = NULL;
  _internal_metadata_.Clear();
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .LoginResponse Login = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_login()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ElfinResponse Elfin = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_elfin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .RollResponse Roll = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_roll()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TreeResponse Tree = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tree()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ResourceResponse Resource = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resource()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TasksResponse Tasks = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tasks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .MailsResponse Mails = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mails()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .SunResponse Sun = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sun()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TreeEnchantmentResponse TreeEnchantment = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_treeenchantment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .StoreAllResponse StoreAll = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_storeall()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .StoreEquResponse StoreEqu = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_storeequ()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .StoreWaterResponse StoreWater = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_storewater()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .StoreSpePropsResponse StoreSpeProps = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_storespeprops()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .WarehouseResponse Warehouse = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_warehouse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .DelMailResponse DelMail = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_delmail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ClaimedTaskResponse ClaimedTask = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_claimedtask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .RecTaskAwardResponse RecTaskAward = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rectaskaward()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .FriendsResponse Friends = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_friends()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .EnemiesResponse Enemies = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_enemies()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PlunderResponse Plunder = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_plunder()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .UseItemResponse UseItem = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_useitem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .SettleAccountResponse SettleAccount = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_settleaccount()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .RankingResponse Ranking = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ranking()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ForgetSkillResponse ForgetSkill = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_forgetskill()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .RegisterResponse Register = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_register_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Response)
  return false;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LoginResponse Login = 1;
  if (this->has_login()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->login_, output);
  }

  // .ElfinResponse Elfin = 2;
  if (this->has_elfin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->elfin_, output);
  }

  // .RollResponse Roll = 3;
  if (this->has_roll()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->roll_, output);
  }

  // .TreeResponse Tree = 4;
  if (this->has_tree()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->tree_, output);
  }

  // .ResourceResponse Resource = 5;
  if (this->has_resource()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->resource_, output);
  }

  // .TasksResponse Tasks = 6;
  if (this->has_tasks()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->tasks_, output);
  }

  // .MailsResponse Mails = 7;
  if (this->has_mails()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->mails_, output);
  }

  // .SunResponse Sun = 8;
  if (this->has_sun()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->sun_, output);
  }

  // .TreeEnchantmentResponse TreeEnchantment = 9;
  if (this->has_treeenchantment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->treeenchantment_, output);
  }

  // .StoreAllResponse StoreAll = 10;
  if (this->has_storeall()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->storeall_, output);
  }

  // .StoreEquResponse StoreEqu = 11;
  if (this->has_storeequ()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->storeequ_, output);
  }

  // .StoreWaterResponse StoreWater = 12;
  if (this->has_storewater()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->storewater_, output);
  }

  // .StoreSpePropsResponse StoreSpeProps = 13;
  if (this->has_storespeprops()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->storespeprops_, output);
  }

  // .WarehouseResponse Warehouse = 14;
  if (this->has_warehouse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->warehouse_, output);
  }

  // .DelMailResponse DelMail = 15;
  if (this->has_delmail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->delmail_, output);
  }

  // .ClaimedTaskResponse ClaimedTask = 16;
  if (this->has_claimedtask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *this->claimedtask_, output);
  }

  // .RecTaskAwardResponse RecTaskAward = 17;
  if (this->has_rectaskaward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, *this->rectaskaward_, output);
  }

  // .FriendsResponse Friends = 18;
  if (this->has_friends()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, *this->friends_, output);
  }

  // .EnemiesResponse Enemies = 19;
  if (this->has_enemies()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, *this->enemies_, output);
  }

  // .PlunderResponse Plunder = 20;
  if (this->has_plunder()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->plunder_, output);
  }

  // .UseItemResponse UseItem = 21;
  if (this->has_useitem()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, *this->useitem_, output);
  }

  // .SettleAccountResponse SettleAccount = 22;
  if (this->has_settleaccount()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, *this->settleaccount_, output);
  }

  // .RankingResponse Ranking = 23;
  if (this->has_ranking()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, *this->ranking_, output);
  }

  // .ForgetSkillResponse ForgetSkill = 24;
  if (this->has_forgetskill()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, *this->forgetskill_, output);
  }

  // .RegisterResponse Register = 25;
  if (this->has_register_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, *this->register__, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Response)
}

::google::protobuf::uint8* Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LoginResponse Login = 1;
  if (this->has_login()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->login_, deterministic, target);
  }

  // .ElfinResponse Elfin = 2;
  if (this->has_elfin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->elfin_, deterministic, target);
  }

  // .RollResponse Roll = 3;
  if (this->has_roll()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->roll_, deterministic, target);
  }

  // .TreeResponse Tree = 4;
  if (this->has_tree()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->tree_, deterministic, target);
  }

  // .ResourceResponse Resource = 5;
  if (this->has_resource()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->resource_, deterministic, target);
  }

  // .TasksResponse Tasks = 6;
  if (this->has_tasks()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->tasks_, deterministic, target);
  }

  // .MailsResponse Mails = 7;
  if (this->has_mails()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->mails_, deterministic, target);
  }

  // .SunResponse Sun = 8;
  if (this->has_sun()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->sun_, deterministic, target);
  }

  // .TreeEnchantmentResponse TreeEnchantment = 9;
  if (this->has_treeenchantment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *this->treeenchantment_, deterministic, target);
  }

  // .StoreAllResponse StoreAll = 10;
  if (this->has_storeall()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, *this->storeall_, deterministic, target);
  }

  // .StoreEquResponse StoreEqu = 11;
  if (this->has_storeequ()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, *this->storeequ_, deterministic, target);
  }

  // .StoreWaterResponse StoreWater = 12;
  if (this->has_storewater()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, *this->storewater_, deterministic, target);
  }

  // .StoreSpePropsResponse StoreSpeProps = 13;
  if (this->has_storespeprops()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, *this->storespeprops_, deterministic, target);
  }

  // .WarehouseResponse Warehouse = 14;
  if (this->has_warehouse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, *this->warehouse_, deterministic, target);
  }

  // .DelMailResponse DelMail = 15;
  if (this->has_delmail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, *this->delmail_, deterministic, target);
  }

  // .ClaimedTaskResponse ClaimedTask = 16;
  if (this->has_claimedtask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, *this->claimedtask_, deterministic, target);
  }

  // .RecTaskAwardResponse RecTaskAward = 17;
  if (this->has_rectaskaward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, *this->rectaskaward_, deterministic, target);
  }

  // .FriendsResponse Friends = 18;
  if (this->has_friends()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, *this->friends_, deterministic, target);
  }

  // .EnemiesResponse Enemies = 19;
  if (this->has_enemies()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, *this->enemies_, deterministic, target);
  }

  // .PlunderResponse Plunder = 20;
  if (this->has_plunder()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, *this->plunder_, deterministic, target);
  }

  // .UseItemResponse UseItem = 21;
  if (this->has_useitem()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, *this->useitem_, deterministic, target);
  }

  // .SettleAccountResponse SettleAccount = 22;
  if (this->has_settleaccount()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, *this->settleaccount_, deterministic, target);
  }

  // .RankingResponse Ranking = 23;
  if (this->has_ranking()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, *this->ranking_, deterministic, target);
  }

  // .ForgetSkillResponse ForgetSkill = 24;
  if (this->has_forgetskill()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, *this->forgetskill_, deterministic, target);
  }

  // .RegisterResponse Register = 25;
  if (this->has_register_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, *this->register__, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Response)
  return target;
}

size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Response)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .LoginResponse Login = 1;
  if (this->has_login()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->login_);
  }

  // .ElfinResponse Elfin = 2;
  if (this->has_elfin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->elfin_);
  }

  // .RollResponse Roll = 3;
  if (this->has_roll()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->roll_);
  }

  // .TreeResponse Tree = 4;
  if (this->has_tree()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->tree_);
  }

  // .ResourceResponse Resource = 5;
  if (this->has_resource()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->resource_);
  }

  // .TasksResponse Tasks = 6;
  if (this->has_tasks()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->tasks_);
  }

  // .MailsResponse Mails = 7;
  if (this->has_mails()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->mails_);
  }

  // .SunResponse Sun = 8;
  if (this->has_sun()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->sun_);
  }

  // .TreeEnchantmentResponse TreeEnchantment = 9;
  if (this->has_treeenchantment()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->treeenchantment_);
  }

  // .StoreAllResponse StoreAll = 10;
  if (this->has_storeall()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->storeall_);
  }

  // .StoreEquResponse StoreEqu = 11;
  if (this->has_storeequ()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->storeequ_);
  }

  // .StoreWaterResponse StoreWater = 12;
  if (this->has_storewater()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->storewater_);
  }

  // .StoreSpePropsResponse StoreSpeProps = 13;
  if (this->has_storespeprops()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->storespeprops_);
  }

  // .WarehouseResponse Warehouse = 14;
  if (this->has_warehouse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->warehouse_);
  }

  // .DelMailResponse DelMail = 15;
  if (this->has_delmail()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->delmail_);
  }

  // .ClaimedTaskResponse ClaimedTask = 16;
  if (this->has_claimedtask()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->claimedtask_);
  }

  // .RecTaskAwardResponse RecTaskAward = 17;
  if (this->has_rectaskaward()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->rectaskaward_);
  }

  // .FriendsResponse Friends = 18;
  if (this->has_friends()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->friends_);
  }

  // .EnemiesResponse Enemies = 19;
  if (this->has_enemies()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->enemies_);
  }

  // .PlunderResponse Plunder = 20;
  if (this->has_plunder()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->plunder_);
  }

  // .UseItemResponse UseItem = 21;
  if (this->has_useitem()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->useitem_);
  }

  // .SettleAccountResponse SettleAccount = 22;
  if (this->has_settleaccount()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->settleaccount_);
  }

  // .RankingResponse Ranking = 23;
  if (this->has_ranking()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->ranking_);
  }

  // .ForgetSkillResponse ForgetSkill = 24;
  if (this->has_forgetskill()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->forgetskill_);
  }

  // .RegisterResponse Register = 25;
  if (this->has_register_()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->register__);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Response)
  GOOGLE_DCHECK_NE(&from, this);
  const Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Response)
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_login()) {
    mutable_login()->::LoginResponse::MergeFrom(from.login());
  }
  if (from.has_elfin()) {
    mutable_elfin()->::ElfinResponse::MergeFrom(from.elfin());
  }
  if (from.has_roll()) {
    mutable_roll()->::RollResponse::MergeFrom(from.roll());
  }
  if (from.has_tree()) {
    mutable_tree()->::TreeResponse::MergeFrom(from.tree());
  }
  if (from.has_resource()) {
    mutable_resource()->::ResourceResponse::MergeFrom(from.resource());
  }
  if (from.has_tasks()) {
    mutable_tasks()->::TasksResponse::MergeFrom(from.tasks());
  }
  if (from.has_mails()) {
    mutable_mails()->::MailsResponse::MergeFrom(from.mails());
  }
  if (from.has_sun()) {
    mutable_sun()->::SunResponse::MergeFrom(from.sun());
  }
  if (from.has_treeenchantment()) {
    mutable_treeenchantment()->::TreeEnchantmentResponse::MergeFrom(from.treeenchantment());
  }
  if (from.has_storeall()) {
    mutable_storeall()->::StoreAllResponse::MergeFrom(from.storeall());
  }
  if (from.has_storeequ()) {
    mutable_storeequ()->::StoreEquResponse::MergeFrom(from.storeequ());
  }
  if (from.has_storewater()) {
    mutable_storewater()->::StoreWaterResponse::MergeFrom(from.storewater());
  }
  if (from.has_storespeprops()) {
    mutable_storespeprops()->::StoreSpePropsResponse::MergeFrom(from.storespeprops());
  }
  if (from.has_warehouse()) {
    mutable_warehouse()->::WarehouseResponse::MergeFrom(from.warehouse());
  }
  if (from.has_delmail()) {
    mutable_delmail()->::DelMailResponse::MergeFrom(from.delmail());
  }
  if (from.has_claimedtask()) {
    mutable_claimedtask()->::ClaimedTaskResponse::MergeFrom(from.claimedtask());
  }
  if (from.has_rectaskaward()) {
    mutable_rectaskaward()->::RecTaskAwardResponse::MergeFrom(from.rectaskaward());
  }
  if (from.has_friends()) {
    mutable_friends()->::FriendsResponse::MergeFrom(from.friends());
  }
  if (from.has_enemies()) {
    mutable_enemies()->::EnemiesResponse::MergeFrom(from.enemies());
  }
  if (from.has_plunder()) {
    mutable_plunder()->::PlunderResponse::MergeFrom(from.plunder());
  }
  if (from.has_useitem()) {
    mutable_useitem()->::UseItemResponse::MergeFrom(from.useitem());
  }
  if (from.has_settleaccount()) {
    mutable_settleaccount()->::SettleAccountResponse::MergeFrom(from.settleaccount());
  }
  if (from.has_ranking()) {
    mutable_ranking()->::RankingResponse::MergeFrom(from.ranking());
  }
  if (from.has_forgetskill()) {
    mutable_forgetskill()->::ForgetSkillResponse::MergeFrom(from.forgetskill());
  }
  if (from.has_register_()) {
    mutable_register_()->::RegisterResponse::MergeFrom(from.register_());
  }
}

void Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  return true;
}

void Response::Swap(Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response::InternalSwap(Response* other) {
  using std::swap;
  swap(login_, other->login_);
  swap(elfin_, other->elfin_);
  swap(roll_, other->roll_);
  swap(tree_, other->tree_);
  swap(resource_, other->resource_);
  swap(tasks_, other->tasks_);
  swap(mails_, other->mails_);
  swap(sun_, other->sun_);
  swap(treeenchantment_, other->treeenchantment_);
  swap(storeall_, other->storeall_);
  swap(storeequ_, other->storeequ_);
  swap(storewater_, other->storewater_);
  swap(storespeprops_, other->storespeprops_);
  swap(warehouse_, other->warehouse_);
  swap(delmail_, other->delmail_);
  swap(claimedtask_, other->claimedtask_);
  swap(rectaskaward_, other->rectaskaward_);
  swap(friends_, other->friends_);
  swap(enemies_, other->enemies_);
  swap(plunder_, other->plunder_);
  swap(useitem_, other->useitem_);
  swap(settleaccount_, other->settleaccount_);
  swap(ranking_, other->ranking_);
  swap(forgetskill_, other->forgetskill_);
  swap(register__, other->register__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameMessage::InitAsDefaultInstance() {
  ::_GameMessage_default_instance_._instance.get_mutable()->req_ = const_cast< ::Request*>(
      ::Request::internal_default_instance());
  ::_GameMessage_default_instance_._instance.get_mutable()->res_ = const_cast< ::Response*>(
      ::Response::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameMessage::kMsgFieldNumber;
const int GameMessage::kReqFieldNumber;
const int GameMessage::kResFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameMessage::GameMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_2eproto::InitDefaultsGameMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GameMessage)
}
GameMessage::GameMessage(const GameMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_req()) {
    req_ = new ::Request(*from.req_);
  } else {
    req_ = NULL;
  }
  if (from.has_res()) {
    res_ = new ::Response(*from.res_);
  } else {
    res_ = NULL;
  }
  msg_ = from.msg_;
  // @@protoc_insertion_point(copy_constructor:GameMessage)
}

void GameMessage::SharedCtor() {
  ::memset(&req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msg_) -
      reinterpret_cast<char*>(&req_)) + sizeof(msg_));
  _cached_size_ = 0;
}

GameMessage::~GameMessage() {
  // @@protoc_insertion_point(destructor:GameMessage)
  SharedDtor();
}

void GameMessage::SharedDtor() {
  if (this != internal_default_instance()) delete req_;
  if (this != internal_default_instance()) delete res_;
}

void GameMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameMessage::descriptor() {
  ::protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameMessage& GameMessage::default_instance() {
  ::protobuf_Msg_2eproto::InitDefaultsGameMessage();
  return *internal_default_instance();
}

GameMessage* GameMessage::New(::google::protobuf::Arena* arena) const {
  GameMessage* n = new GameMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:GameMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && req_ != NULL) {
    delete req_;
  }
  req_ = NULL;
  if (GetArenaNoVirtual() == NULL && res_ != NULL) {
    delete res_;
  }
  res_ = NULL;
  msg_ = 0;
  _internal_metadata_.Clear();
}

bool GameMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GameMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GameMsgCode msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_msg(static_cast< ::GameMsgCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Request req = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Response res = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_res()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GameMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GameMessage)
  return false;
#undef DO_
}

void GameMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GameMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GameMsgCode msg = 1;
  if (this->msg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msg(), output);
  }

  // .Request req = 2;
  if (this->has_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->req_, output);
  }

  // .Response res = 3;
  if (this->has_res()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->res_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GameMessage)
}

::google::protobuf::uint8* GameMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GameMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GameMsgCode msg = 1;
  if (this->msg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msg(), target);
  }

  // .Request req = 2;
  if (this->has_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->req_, deterministic, target);
  }

  // .Response res = 3;
  if (this->has_res()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->res_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GameMessage)
  return target;
}

size_t GameMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GameMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Request req = 2;
  if (this->has_req()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->req_);
  }

  // .Response res = 3;
  if (this->has_res()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->res_);
  }

  // .GameMsgCode msg = 1;
  if (this->msg() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GameMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const GameMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GameMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GameMessage)
    MergeFrom(*source);
  }
}

void GameMessage::MergeFrom(const GameMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GameMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_req()) {
    mutable_req()->::Request::MergeFrom(from.req());
  }
  if (from.has_res()) {
    mutable_res()->::Response::MergeFrom(from.res());
  }
  if (from.msg() != 0) {
    set_msg(from.msg());
  }
}

void GameMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GameMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameMessage::CopyFrom(const GameMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GameMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameMessage::IsInitialized() const {
  return true;
}

void GameMessage::Swap(GameMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameMessage::InternalSwap(GameMessage* other) {
  using std::swap;
  swap(req_, other->req_);
  swap(res_, other->res_);
  swap(msg_, other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameMessage::GetMetadata() const {
  protobuf_Msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
